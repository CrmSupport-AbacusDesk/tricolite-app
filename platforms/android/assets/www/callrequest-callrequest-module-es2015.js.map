{"version":3,"sources":["./src/app/customer_app/callrequest/callrequest.page.html","./src/app/customer_app/callrequest/callrequest-routing.module.ts","./src/app/customer_app/callrequest/callrequest.module.ts","./src/app/customer_app/callrequest/callrequest.page.scss","./src/app/customer_app/callrequest/callrequest.page.ts"],"names":[],"mappings":"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","file":"callrequest-callrequest-module-es2015.js","sourcesContent":["export default \"<ion-content >\\r\\n    <div class=\\\"cs-main-container\\\">\\r\\n        <div class=\\\"custome-head\\\">\\r\\n            <div class=\\\"cs-ion-header\\\">\\r\\n                <div class=\\\"cs-left\\\">\\r\\n                    <ion-button [routerLink]=\\\"['/customer/home']\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\r\\n                    <ion-title>Call Request</ion-title>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"cs-ion-hf\\\"></div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"cs-ion-content pt0\\\" padding>\\r\\n            <div class=\\\"common_form inner_page\\\">\\r\\n        \\r\\n            <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"onSaveCallRequestHandler()\\\">\\r\\n\\r\\n                <div class=\\\"ion-padding\\\">\\r\\n                    \\r\\n                    <div class=\\\"cnt-content mb32\\\">\\r\\n                        <p>Please Select A Date & Time For When You Would Like To Discuss Your Enquiry Over The Phone.</p>\\r\\n                    </div>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.contactName.errors && f1.contactName.errors.required ? 'has-error' : (f1.contactName.errors && !f1.contactName.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\r\\n\\r\\n                        <ion-label position=\\\"floating\\\">Contact Name</ion-label>\\r\\n\\r\\n                        <ion-input formControlName=\\\"contactName\\\" [(ngModel)]=\\\"data.contactName\\\"></ion-input>\\r\\n\\r\\n                    </ion-item>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.mobile.errors && f1.mobile.errors.required ? 'has-error' : (f1.mobile.errors && !f1.mobile.errors.required ? 'has-text' : '')\\\">\\r\\n                        <ion-label position=\\\"floating\\\">Mobile No.</ion-label>\\r\\n\\r\\n                        <ion-input type=\\\"tel\\\" formControlName=\\\"mobile\\\" [(ngModel)]=\\\"data.mobile\\\" (ngModelChange)=\\\"dbService.numberOnly($event)\\\"></ion-input>\\r\\n\\r\\n                        <ion-text *ngIf=\\\"submitted && f1.mobile.errors\\\" class=\\\"cs-error\\\">\\r\\n                                <span>10 Digit Required</span>\\r\\n                        </ion-text>\\r\\n                    </ion-item>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.suitableDate.errors && f1.suitableDate.errors.required ? 'has-error' : (f1.suitableDate.errors && !f1.suitableDate.errors.required ? 'has-text' : '')\\\">\\r\\n                        <ion-label position=\\\"floating\\\">Suitable Date</ion-label>\\r\\n\\r\\n                        <ion-datetime formControlName=\\\"suitableDate\\\" [(ngModel)]=\\\"data.suitableDate\\\" displayFormat=\\\"DD-MMM-YYYY\\\" min=\\\"{{minDate}}\\\"></ion-datetime>\\r\\n\\r\\n                    </ion-item>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.suitableTime.errors && f1.suitableTime.errors.required ? 'has-error' : (f1.suitableTime.errors && !f1.suitableTime.errors.required ? 'has-text' : '')\\\">\\r\\n\\r\\n                        <ion-label position=\\\"floating\\\">Suitable Time</ion-label>\\r\\n                        <ion-datetime formControlName=\\\"suitableTime\\\" [(ngModel)]=\\\"data.suitableTime\\\" displayFormat=\\\"h:mm A\\\"></ion-datetime>\\r\\n\\r\\n                    </ion-item>\\r\\n\\r\\n                    <div class=\\\"cs-btn mt50\\\">\\r\\n                        <ion-button type=\\\"submit\\\" class=\\\"success large wp100\\\">SAVE</ion-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CallrequestPage } from './callrequest.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CallrequestPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CallrequestPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CallrequestPageRoutingModule } from './callrequest-routing.module';\r\n\r\nimport { CallrequestPage } from './callrequest.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    CallrequestPageRoutingModule\r\n  ],\r\n  declarations: [CallrequestPage]\r\n})\r\nexport class CallrequestPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9jYWxscmVxdWVzdC9jYWxscmVxdWVzdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, } from '@angular/forms';\r\nimport { LoadingController, AlertController, ModalController } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-callrequest',\r\n  templateUrl: './callrequest.page.html',\r\n  styleUrls: ['./callrequest.page.scss'],\r\n})\r\nexport class CallrequestPage implements OnInit {\r\n\r\n  data: any = {};\r\n  contactData: any = [];\r\n\r\n  minDate: any  = '';\r\n\r\n  submitted: any = false;\r\n  registerForm1: FormGroup;\r\n\r\n  constructor(private route: Router,\r\n              private formBuilder: FormBuilder,\r\n              public alertCtrl: AlertController,\r\n              public modalController: ModalController,\r\n              public dbService: DbServiceService) {\r\n\r\n              this.minDate = moment().format('YYYY-MM-DD');\r\n\r\n              this.registerForm1 = this.formBuilder.group({\r\n\r\n                  contactName: ['', [Validators.required]],\r\n                  mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\r\n                  suitableDate: ['', [Validators.required]],\r\n                  suitableTime: ['', [Validators.required]]\r\n              });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n      this.onGetAllContactListHandler();\r\n  }\r\n\r\n\r\n  async onChangeContactHandler() {\r\n\r\n         const contactIndex = this.contactData.findIndex(row => row.name == this.data.contactName);\r\n\r\n         if (contactIndex !== -1) {\r\n            this.data.mobile = this.contactData[contactIndex].mobile;\r\n         }\r\n  }\r\n\r\n  async getMobilelength(number) {\r\n      return number.toString().length == 10;\r\n  }\r\n\r\n\r\n  async onSaveCallRequestHandler() {\r\n\r\n      console.log(this.data);\r\n\r\n      this.submitted = true;\r\n\r\n      if (this.registerForm1.invalid) {\r\n\r\n          this.registerForm1.get('contactName').markAsTouched();\r\n          this.registerForm1.get('mobile').markAsTouched();\r\n          this.registerForm1.get('suitableDate').markAsTouched();\r\n          this.registerForm1.get('suitableTime').markAsTouched();\r\n\r\n          return;\r\n\r\n      } else {\r\n\r\n          console.log('hello');\r\n\r\n          console.log(this.data);\r\n\r\n          const alert = await this.alertCtrl.create({\r\n            header: 'Confirm',\r\n            message: 'Are You Sure, You Want To Save Call Request ?',\r\n            buttons: [\r\n                  {\r\n                    text: 'No',\r\n                    role: 'cancel',\r\n                    handler: () => {\r\n                      console.log('No clicked');\r\n                    }\r\n                  },\r\n                  {\r\n                    text: 'Yes',\r\n                    handler: () => {\r\n\r\n                          console.log('Yes clicked');\r\n\r\n                          const inputData = JSON.parse(JSON.stringify(this.data));\r\n\r\n                          inputData[`suitableDate`] = moment(inputData[`suitableDate`]).format('YYYY-MM-DD');\r\n\r\n                          inputData[`suitableTime`] = moment(inputData[`suitableTime`], 'H:mm A').format('H:mm');\r\n\r\n                          inputData[`suitableDateTime`] = inputData[`suitableDate`] + ' ' + inputData[`suitableTime`];\r\n\r\n                          this.dbService.presentLoader();\r\n\r\n                          this.dbService.onPostRequestHandler(inputData, 'customer/onSaveCallRequestData').subscribe((result) => {\r\n\r\n                                console.log(result);\r\n                                this.dbService.dismissLoader();\r\n\r\n                                this.data.status = '';\r\n                                this.route.navigate(['/customer/home']);\r\n\r\n                                this.dbService.presentToast('Call Request Saved Successfully!');\r\n                          });\r\n                    }\r\n                  }\r\n              ]\r\n          });\r\n\r\n          await alert.present();\r\n\r\n      }\r\n  }\r\n\r\n\r\n  onGetAllContactListHandler() {\r\n\r\n      const inputData = {};\r\n\r\n      this.dbService.presentLoader();\r\n\r\n      this.dbService.onPostRequestHandler(inputData, 'customer/getCustomerContactHandler').subscribe((result) => {\r\n            console.log(result);\r\n\r\n            this.dbService.dismissLoader();\r\n            this.contactData = result[`contactData`];\r\n      });\r\n  }\r\n\r\n  get f1() { return this.registerForm1.controls; }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}