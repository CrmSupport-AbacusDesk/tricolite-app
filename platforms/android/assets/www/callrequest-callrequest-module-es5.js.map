{"version":3,"sources":["src/app/customer_app/callrequest/callrequest.page.html","src/app/customer_app/callrequest/callrequest-routing.module.ts","src/app/customer_app/callrequest/callrequest.module.ts","src/app/customer_app/callrequest/callrequest.page.scss","src/app/customer_app/callrequest/callrequest.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content >\\n    <div class=\\\"cs-main-container\\\">\\n        <div class=\\\"custome-head\\\">\\n            <div class=\\\"cs-ion-header\\\">\\n                <div class=\\\"cs-left\\\">\\n                    <ion-button [routerLink]=\\\"['/customer/home']\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\n                    <ion-title>Call Request</ion-title>\\n                </div>\\n            </div>\\n            <div class=\\\"cs-ion-hf\\\"></div>\\n        </div>\\n        \\n        <div class=\\\"cs-ion-content pt0\\\" padding>\\n            <div class=\\\"common_form inner_page\\\">\\n        \\n            <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"onSaveCallRequestHandler()\\\">\\n\\n                <div class=\\\"ion-padding\\\">\\n                    <div class=\\\"cnt-content mb32\\\">\\n                        <p>Please Select A Date & Time For When You Would Like To Discuss Your Enquiry Over The Phone.</p>\\n                    </div>\\n                    \\n                    <ion-item [ngClass]=\\\"submitted && f1.contactName.errors && f1.contactName.errors.required ? 'has-error' : (f1.contactName.errors && !f1.contactName.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\n\\n                        <ion-label>Select Contact Person</ion-label>\\n\\n                        <ion-select formControlName=\\\"contactName\\\" [(ngModel)]=\\\"data.contactName\\\"  placeholder=\\\"Select Contact\\\" (ngModelChange) =\\\"onChangeContactHandler()\\\">\\n                            <ion-select-option *ngFor=\\\"let row of contactData\\\" [value]=\\\"row.name\\\">{{row.name}}</ion-select-option>\\n                        </ion-select>\\n\\n                    </ion-item>\\n                    \\n                    <ion-item [ngClass]=\\\"submitted && f1.mobile.errors && f1.mobile.errors.required ? 'has-error' : (f1.mobile.errors && !f1.mobile.errors.required ? 'has-text' : '')\\\">\\n                        <ion-label position=\\\"floating\\\">Mobile No.</ion-label>\\n                        <ion-input tel=\\\"10\\\" formControlName=\\\"mobile\\\" [(ngModel)]=\\\"data.mobile\\\" (keypress)=\\\"dbService.numberOnly($event)\\\"></ion-input>\\n                    </ion-item>\\n\\n                    <ion-text *ngIf=\\\"submitted && f1.mobile.errors\\\" class=\\\"cs-error\\\">\\n\\n                            <span *ngIf=\\\"f1.mobile.errors.minlength\\\">Minimum 10 Digit Required</span>\\n                            <span *ngIf=\\\"f1.mobile.errors.maxlength\\\">Maximum 10 Digit Required</span>\\n\\n                    </ion-text>\\n                    \\n                    <ion-item [ngClass]=\\\"submitted && f1.suitableDate.errors && f1.suitableDate.errors.required ? 'has-error' : (f1.suitableDate.errors && !f1.suitableDate.errors.required ? 'has-text' : '')\\\">\\n                        <ion-label position=\\\"floating\\\">Suitable Date</ion-label>\\n\\n                        <ion-datetime formControlName=\\\"suitableDate\\\" [(ngModel)]=\\\"data.suitableDate\\\" displayFormat=\\\"DD-MMM-YYYY\\\" min=\\\"{{minDate}}\\\"></ion-datetime>\\n\\n                    </ion-item>\\n                    \\n                    <ion-item [ngClass]=\\\"submitted && f1.suitableTime.errors && f1.suitableTime.errors.required ? 'has-error' : (f1.suitableTime.errors && !f1.suitableTime.errors.required ? 'has-text' : '')\\\">\\n\\n                        <ion-label position=\\\"floating\\\">Suitable Time</ion-label>\\n                        <ion-datetime formControlName=\\\"suitableTime\\\" [(ngModel)]=\\\"data.suitableTime\\\" displayFormat=\\\"h:mm A\\\"></ion-datetime>\\n\\n                    </ion-item>\\n\\n                    <div class=\\\"cs-btn mt50\\\">\\n                        <ion-button type=\\\"submit\\\" class=\\\"success large wp100\\\">SAVE</ion-button>\\n                    </div>\\n                </div>\\n\\n            </form>\\n                \\n            </div>\\n        </div>\\n    </div>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CallrequestPage } from './callrequest.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CallrequestPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CallrequestPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CallrequestPageRoutingModule } from './callrequest-routing.module';\n\nimport { CallrequestPage } from './callrequest.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    CallrequestPageRoutingModule\n  ],\n  declarations: [CallrequestPage]\n})\nexport class CallrequestPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9jYWxscmVxdWVzdC9jYWxscmVxdWVzdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, } from '@angular/forms';\nimport { LoadingController, AlertController, ModalController } from '@ionic/angular';\nimport { DbServiceService } from 'src/app/db-service.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-callrequest',\n  templateUrl: './callrequest.page.html',\n  styleUrls: ['./callrequest.page.scss'],\n})\nexport class CallrequestPage implements OnInit {\n\n  data: any = {};\n  contactData: any = [];\n\n  minDate: any  = '';\n\n  submitted: any = false;\n  registerForm1: FormGroup;\n\n  constructor(private route: Router,\n              private formBuilder: FormBuilder,\n              public alertCtrl: AlertController,\n              public modalController: ModalController,\n              public dbService: DbServiceService) {\n\n              this.minDate = moment().format('YYYY-MM-DD');\n\n              this.registerForm1 = this.formBuilder.group({\n\n                  contactName: ['', [Validators.required]],\n                  mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n                  suitableDate: ['', [Validators.required]],\n                  suitableTime: ['', [Validators.required]]\n              });\n  }\n\n  ngOnInit() {\n\n      this.onGetAllContactListHandler();\n  }\n\n\n  async onChangeContactHandler() {\n\n         const contactIndex = this.contactData.findIndex(row => row.name == this.data.contactName);\n\n         if (contactIndex !== -1) {\n            this.data.mobile = this.contactData[contactIndex].mobile;\n         }\n  }\n\n\n  async onSaveCallRequestHandler() {\n\n      console.log(this.data);\n\n      this.submitted = true;\n\n      if (this.registerForm1.invalid) {\n\n          this.registerForm1.get('contactName').markAsTouched();\n          this.registerForm1.get('mobile').markAsTouched();\n          this.registerForm1.get('suitableDate').markAsTouched();\n          this.registerForm1.get('suitableTime').markAsTouched();\n\n          return;\n\n      } else {\n\n          console.log('hello');\n\n          console.log(this.data);\n\n          const alert = await this.alertCtrl.create({\n            header: 'Confirm',\n            message: 'Are You Sure, You Want To Save Call Request ?',\n            buttons: [\n                  {\n                    text: 'No',\n                    role: 'cancel',\n                    handler: () => {\n                      console.log('No clicked');\n                    }\n                  },\n                  {\n                    text: 'Yes',\n                    handler: () => {\n\n                          console.log('Yes clicked');\n\n                          const inputData = JSON.parse(JSON.stringify(this.data));\n\n                          inputData[`suitableDate`] = moment(inputData[`suitableDate`]).format('YYYY-MM-DD');\n\n                          inputData[`suitableTime`] = moment(inputData[`suitableTime`], 'H:mm A').format('H:mm');\n\n                          inputData[`suitableDateTime`] = inputData[`suitableDate`] + ' ' + inputData[`suitableTime`];\n\n                          this.dbService.presentLoader();\n\n                          this.dbService.onPostRequestHandler(inputData, 'customer/onSaveCallRequestData').subscribe((result) => {\n\n                                console.log(result);\n                                this.dbService.dismissLoader();\n\n                                this.data.status = '';\n                                this.route.navigate(['/customer/home']);\n\n                                this.dbService.presentToast('Call Request Saved Successfully!');\n                          });\n                    }\n                  }\n              ]\n          });\n\n          await alert.present();\n\n      }\n  }\n\n\n  onGetAllContactListHandler() {\n\n      const inputData = {};\n\n      this.dbService.presentLoader();\n\n      this.dbService.onPostRequestHandler(inputData, 'customer/getCustomerContactHandler').subscribe((result) => {\n            console.log(result);\n\n            this.dbService.dismissLoader();\n            this.contactData = result[`contactData`];\n      });\n  }\n\n  get f1() { return this.registerForm1.controls; }\n\n}\n"],"sourceRoot":"webpack:///","file":"callrequest-callrequest-module-es5.js"}