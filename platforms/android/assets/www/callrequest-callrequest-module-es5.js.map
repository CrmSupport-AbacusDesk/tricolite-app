{"version":3,"sources":["./src/app/customer_app/callrequest/callrequest.page.html","./src/app/customer_app/callrequest/callrequest-routing.module.ts","./src/app/customer_app/callrequest/callrequest.module.ts","./src/app/customer_app/callrequest/callrequest.page.scss","./src/app/customer_app/callrequest/callrequest.page.ts"],"names":[],"mappings":"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","file":"callrequest-callrequest-module-es5.js","sourcesContent":["module.exports = \"<ion-content >\\r\\n    <div class=\\\"cs-main-container\\\">\\r\\n        <div class=\\\"custome-head\\\">\\r\\n            <div class=\\\"cs-ion-header\\\">\\r\\n                <div class=\\\"cs-left\\\">\\r\\n                    <ion-button [routerLink]=\\\"['/customer/home']\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\r\\n                    <ion-title>Call Request</ion-title>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"cs-ion-hf\\\"></div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"cs-ion-content pt0\\\" padding>\\r\\n            <div class=\\\"common_form inner_page\\\">\\r\\n        \\r\\n            <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"onSaveCallRequestHandler()\\\">\\r\\n\\r\\n                <div class=\\\"ion-padding\\\">\\r\\n                    <div class=\\\"cnt-content mb32\\\">\\r\\n                        <p>Please Select A Date & Time For When You Would Like To Discuss Your Enquiry Over The Phone.</p>\\r\\n                    </div>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.contactName.errors && f1.contactName.errors.required ? 'has-error' : (f1.contactName.errors && !f1.contactName.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\r\\n\\r\\n                        <ion-label>Select Contact Person</ion-label>\\r\\n\\r\\n                        <ion-select formControlName=\\\"contactName\\\" [(ngModel)]=\\\"data.contactName\\\"  placeholder=\\\"Select Contact\\\" (ngModelChange) =\\\"onChangeContactHandler()\\\">\\r\\n                            <ion-select-option *ngFor=\\\"let row of contactData\\\" [value]=\\\"row.name\\\">{{row.name}}</ion-select-option>\\r\\n                        </ion-select>\\r\\n\\r\\n                    </ion-item>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.mobile.errors && f1.mobile.errors.required ? 'has-error' : (f1.mobile.errors && !f1.mobile.errors.required ? 'has-text' : '')\\\">\\r\\n                        <ion-label position=\\\"floating\\\">Mobile No.</ion-label>\\r\\n                        <ion-input tel=\\\"10\\\" formControlName=\\\"mobile\\\" [(ngModel)]=\\\"data.mobile\\\" (keypress)=\\\"dbService.numberOnly($event)\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n\\r\\n                    <ion-text *ngIf=\\\"submitted && f1.mobile.errors\\\" class=\\\"cs-error\\\">\\r\\n\\r\\n                            <span *ngIf=\\\"f1.mobile.errors.minlength\\\">Minimum 10 Digit Required</span>\\r\\n                            <span *ngIf=\\\"f1.mobile.errors.maxlength\\\">Maximum 10 Digit Required</span>\\r\\n\\r\\n                    </ion-text>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.suitableDate.errors && f1.suitableDate.errors.required ? 'has-error' : (f1.suitableDate.errors && !f1.suitableDate.errors.required ? 'has-text' : '')\\\">\\r\\n                        <ion-label position=\\\"floating\\\">Suitable Date</ion-label>\\r\\n\\r\\n                        <ion-datetime formControlName=\\\"suitableDate\\\" [(ngModel)]=\\\"data.suitableDate\\\" displayFormat=\\\"DD-MMM-YYYY\\\" min=\\\"{{minDate}}\\\"></ion-datetime>\\r\\n\\r\\n                    </ion-item>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.suitableTime.errors && f1.suitableTime.errors.required ? 'has-error' : (f1.suitableTime.errors && !f1.suitableTime.errors.required ? 'has-text' : '')\\\">\\r\\n\\r\\n                        <ion-label position=\\\"floating\\\">Suitable Time</ion-label>\\r\\n                        <ion-datetime formControlName=\\\"suitableTime\\\" [(ngModel)]=\\\"data.suitableTime\\\" displayFormat=\\\"h:mm A\\\"></ion-datetime>\\r\\n\\r\\n                    </ion-item>\\r\\n\\r\\n                    <div class=\\\"cs-btn mt50\\\">\\r\\n                        <ion-button type=\\\"submit\\\" class=\\\"success large wp100\\\">SAVE</ion-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CallrequestPage } from './callrequest.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CallrequestPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CallrequestPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CallrequestPageRoutingModule } from './callrequest-routing.module';\r\n\r\nimport { CallrequestPage } from './callrequest.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    CallrequestPageRoutingModule\r\n  ],\r\n  declarations: [CallrequestPage]\r\n})\r\nexport class CallrequestPageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9jYWxscmVxdWVzdC9jYWxscmVxdWVzdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, } from '@angular/forms';\r\nimport { LoadingController, AlertController, ModalController } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-callrequest',\r\n  templateUrl: './callrequest.page.html',\r\n  styleUrls: ['./callrequest.page.scss'],\r\n})\r\nexport class CallrequestPage implements OnInit {\r\n\r\n  data: any = {};\r\n  contactData: any = [];\r\n\r\n  minDate: any  = '';\r\n\r\n  submitted: any = false;\r\n  registerForm1: FormGroup;\r\n\r\n  constructor(private route: Router,\r\n              private formBuilder: FormBuilder,\r\n              public alertCtrl: AlertController,\r\n              public modalController: ModalController,\r\n              public dbService: DbServiceService) {\r\n\r\n              this.minDate = moment().format('YYYY-MM-DD');\r\n\r\n              this.registerForm1 = this.formBuilder.group({\r\n\r\n                  contactName: ['', [Validators.required]],\r\n                  mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\r\n                  suitableDate: ['', [Validators.required]],\r\n                  suitableTime: ['', [Validators.required]]\r\n              });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n      this.onGetAllContactListHandler();\r\n  }\r\n\r\n\r\n  async onChangeContactHandler() {\r\n\r\n         const contactIndex = this.contactData.findIndex(row => row.name == this.data.contactName);\r\n\r\n         if (contactIndex !== -1) {\r\n            this.data.mobile = this.contactData[contactIndex].mobile;\r\n         }\r\n  }\r\n\r\n\r\n  async onSaveCallRequestHandler() {\r\n\r\n      console.log(this.data);\r\n\r\n      this.submitted = true;\r\n\r\n      if (this.registerForm1.invalid) {\r\n\r\n          this.registerForm1.get('contactName').markAsTouched();\r\n          this.registerForm1.get('mobile').markAsTouched();\r\n          this.registerForm1.get('suitableDate').markAsTouched();\r\n          this.registerForm1.get('suitableTime').markAsTouched();\r\n\r\n          return;\r\n\r\n      } else {\r\n\r\n          console.log('hello');\r\n\r\n          console.log(this.data);\r\n\r\n          const alert = await this.alertCtrl.create({\r\n            header: 'Confirm',\r\n            message: 'Are You Sure, You Want To Save Call Request ?',\r\n            buttons: [\r\n                  {\r\n                    text: 'No',\r\n                    role: 'cancel',\r\n                    handler: () => {\r\n                      console.log('No clicked');\r\n                    }\r\n                  },\r\n                  {\r\n                    text: 'Yes',\r\n                    handler: () => {\r\n\r\n                          console.log('Yes clicked');\r\n\r\n                          const inputData = JSON.parse(JSON.stringify(this.data));\r\n\r\n                          inputData[`suitableDate`] = moment(inputData[`suitableDate`]).format('YYYY-MM-DD');\r\n\r\n                          inputData[`suitableTime`] = moment(inputData[`suitableTime`], 'H:mm A').format('H:mm');\r\n\r\n                          inputData[`suitableDateTime`] = inputData[`suitableDate`] + ' ' + inputData[`suitableTime`];\r\n\r\n                          this.dbService.presentLoader();\r\n\r\n                          this.dbService.onPostRequestHandler(inputData, 'customer/onSaveCallRequestData').subscribe((result) => {\r\n\r\n                                console.log(result);\r\n                                this.dbService.dismissLoader();\r\n\r\n                                this.data.status = '';\r\n                                this.route.navigate(['/customer/home']);\r\n\r\n                                this.dbService.presentToast('Call Request Saved Successfully!');\r\n                          });\r\n                    }\r\n                  }\r\n              ]\r\n          });\r\n\r\n          await alert.present();\r\n\r\n      }\r\n  }\r\n\r\n\r\n  onGetAllContactListHandler() {\r\n\r\n      const inputData = {};\r\n\r\n      this.dbService.presentLoader();\r\n\r\n      this.dbService.onPostRequestHandler(inputData, 'customer/getCustomerContactHandler').subscribe((result) => {\r\n            console.log(result);\r\n\r\n            this.dbService.dismissLoader();\r\n            this.contactData = result[`contactData`];\r\n      });\r\n  }\r\n\r\n  get f1() { return this.registerForm1.controls; }\r\n\r\n}\r\n"],"sourceRoot":""}