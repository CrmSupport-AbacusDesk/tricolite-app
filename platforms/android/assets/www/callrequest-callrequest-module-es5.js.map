{"version":3,"sources":["src/app/customer_app/callrequest/callrequest.page.html","src/app/customer_app/callrequest/callrequest-routing.module.ts","src/app/customer_app/callrequest/callrequest.module.ts","src/app/customer_app/callrequest/callrequest.page.scss","src/app/customer_app/callrequest/callrequest.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,8/GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,8CAAA,CAAA,iBAAA;AAFb,KADqB,CAAvB;;AAWA,QAAa,4BAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,4BAA4B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJxC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIwC,CAAA,EAA5B,4BAA4B,CAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIb,QAAa,qBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAVjC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,2CAAA,CAAA,qBAAA,CAJO,EAKP,wDAAA,CAAA,8BAAA,CALO,CADD;AAQR,MAAA,YAAY,EAAE,CAAC,8CAAA,CAAA,iBAAA,CAAD;AARN,KAAT,CAUiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACpBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa,eAAb;AAUE,+BAAoB,KAApB,EACoB,WADpB,EAEmB,SAFnB,EAGmB,eAHnB,EAImB,SAJnB,EAI8C;AAAA;;AAJ1B,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACD,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,SAAA,GAAA,SAAA;AAZnB,aAAA,IAAA,GAAY,EAAZ;AACA,aAAA,WAAA,GAAmB,EAAnB;AAEA,aAAA,OAAA,GAAgB,EAAhB;AAEA,aAAA,SAAA,GAAiB,KAAjB;AASY,aAAK,OAAL,GAAe,mCAAM,GAAG,MAAT,CAAgB,YAAhB,CAAf;AAEA,aAAK,aAAL,GAAqB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AAExC,UAAA,WAAW,EAAE,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAL,CAF2B;AAGxC,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,EAArB,CAAtB,EAAgD,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,EAArB,CAAhD,CAAL,CAHgC;AAIxC,UAAA,YAAY,EAAE,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAL,CAJ0B;AAKxC,UAAA,YAAY,EAAE,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAL;AAL0B,SAAvB,CAArB;AAOX;;AAzBH;AAAA;AAAA,eA2BE,oBAAQ;AAEJ,eAAK,0BAAL;AACH;AA9BH;AAAA;AAAA,eAiCQ,kCAAsB;;;;;;;;;AAEf,oBAAA,Y,GAAe,KAAK,WAAL,CAAiB,SAAjB,CAA2B,UAAA,GAAG;AAAA,6BAAI,GAAG,CAAC,IAAJ,IAAY,KAAI,CAAC,IAAL,CAAU,WAA1B;AAAA,qBAA9B,C;;AAErB,wBAAI,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACtB,2BAAK,IAAL,CAAU,MAAV,GAAmB,KAAK,WAAL,CAAiB,YAAjB,EAA+B,MAAlD;AACF;;;;;;;;;AACP;AAxCH;AAAA;AAAA,eA0CQ,yBAAgB,MAAhB,EAAsB;;;;;;sDACjB,MAAM,CAAC,QAAP,GAAkB,MAAlB,IAA4B,E;;;;;;;;;AACtC;AA5CH;AAAA;AAAA,eA+CQ,oCAAwB;;;;;;;;;AAE1B,oBAAA,OAAO,CAAC,GAAR,CAAY,KAAK,IAAjB;AAEA,yBAAK,SAAL,GAAiB,IAAjB;;yBAEI,KAAK,aAAL,CAAmB,O;;;;;AAEnB,yBAAK,aAAL,CAAmB,GAAnB,CAAuB,aAAvB,EAAsC,aAAtC;AACA,yBAAK,aAAL,CAAmB,GAAnB,CAAuB,QAAvB,EAAiC,aAAjC;AACA,yBAAK,aAAL,CAAmB,GAAnB,CAAuB,cAAvB,EAAuC,aAAvC;AACA,yBAAK,aAAL,CAAmB,GAAnB,CAAuB,cAAvB,EAAuC,aAAvC;;;;AAMA,oBAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AAEA,oBAAA,OAAO,CAAC,GAAR,CAAY,KAAK,IAAjB;;AAEc,2BAAM,KAAK,SAAL,CAAe,MAAf,CAAsB;AACxC,sBAAA,MAAM,EAAE,SADgC;AAExC,sBAAA,OAAO,EAAE,+CAF+B;AAGxC,sBAAA,OAAO,EAAE,CACH;AACE,wBAAA,IAAI,EAAE,IADR;AAEE,wBAAA,IAAI,EAAE,QAFR;AAGE,wBAAA,OAAO,EAAE,mBAAK;AACZ,0BAAA,OAAO,CAAC,GAAR,CAAY,YAAZ;AACD;AALH,uBADG,EAQH;AACE,wBAAA,IAAI,EAAE,KADR;AAEE,wBAAA,OAAO,EAAE,mBAAK;AAER,0BAAA,OAAO,CAAC,GAAR,CAAY,aAAZ;AAEA,8BAAM,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,MAAI,CAAC,IAApB,CAAX,CAAlB;AAEA,0BAAA,SAAS,gBAAT,GAA4B,mCAAM,CAAC,SAAS,gBAAV,CAAN,CAAkC,MAAlC,CAAyC,YAAzC,CAA5B;AAEA,0BAAA,SAAS,gBAAT,GAA4B,mCAAM,CAAC,SAAS,gBAAV,EAA4B,QAA5B,CAAN,CAA4C,MAA5C,CAAmD,MAAnD,CAA5B;AAEA,0BAAA,SAAS,oBAAT,GAAgC,SAAS,gBAAT,GAA4B,GAA5B,GAAkC,SAAS,gBAA3E;;AAEA,0BAAA,MAAI,CAAC,SAAL,CAAe,aAAf;;AAEA,0BAAA,MAAI,CAAC,SAAL,CAAe,oBAAf,CAAoC,SAApC,EAA+C,gCAA/C,EAAiF,SAAjF,CAA2F,UAAC,MAAD,EAAW;AAEhG,4BAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;;AACA,4BAAA,MAAI,CAAC,SAAL,CAAe,aAAf;;AAEA,4BAAA,MAAI,CAAC,IAAL,CAAU,MAAV,GAAmB,EAAnB;;AACA,4BAAA,MAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,CAAC,gBAAD,CAApB;;AAEA,4BAAA,MAAI,CAAC,SAAL,CAAe,YAAf,CAA4B,kCAA5B;AACL,2BATD;AAUL;AA1BH,uBARG;AAH+B,qBAAtB,CAAN;;;AAAR,oBAAA,K;;AA0CN,2BAAM,KAAK,CAAC,OAAN,EAAN;;;;;;;;;AAGP;AAjHH;AAAA;AAAA,eAoHE,sCAA0B;AAAA;;AAEtB,cAAM,SAAS,GAAG,EAAlB;AAEA,eAAK,SAAL,CAAe,aAAf;AAEA,eAAK,SAAL,CAAe,oBAAf,CAAoC,SAApC,EAA+C,oCAA/C,EAAqF,SAArF,CAA+F,UAAC,MAAD,EAAW;AACpG,YAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;;AAEA,YAAA,MAAI,CAAC,SAAL,CAAe,aAAf;;AACA,YAAA,MAAI,CAAC,WAAL,GAAmB,MAAM,eAAzB;AACL,WALD;AAMH;AAhIH;AAAA;AAAA,aAkIE,eAAM;AAAK,iBAAO,KAAK,aAAL,CAAmB,QAA1B;AAAqC;AAlIlD;;AAAA;AAAA,OAAA;;;;cAU6B,4CAAA,CAAA,QAAA;;cACM,2CAAA,CAAA,aAAA;;cACH,2CAAA,CAAA,iBAAA;;cACM,2CAAA,CAAA,iBAAA;;cACN,uDAAA,CAAA,kBAAA;;;;AAdnB,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sGAAA,CAAA,YAFS;;;;AAAA,KAAV,CAK2B,E,uEAUC,4CAAA,CAAA,QAAA,C,EACM,2CAAA,CAAA,aAAA,C,EACH,2CAAA,CAAA,iBAAA,C,EACM,2CAAA,CAAA,iBAAA,C,EACN,uDAAA,CAAA,kBAAA,C,EAdJ,CAAA,EAAf,eAAe,CAAf","sourcesContent":["export default \"<ion-content >\\r\\n    <div class=\\\"cs-main-container\\\">\\r\\n        <div class=\\\"custome-head\\\">\\r\\n            <div class=\\\"cs-ion-header\\\">\\r\\n                <div class=\\\"cs-left\\\">\\r\\n                    <ion-button [routerLink]=\\\"['/customer/home']\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\r\\n                    <ion-title>Call Request</ion-title>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"cs-ion-hf\\\"></div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"cs-ion-content pt0\\\" padding>\\r\\n            <div class=\\\"common_form inner_page\\\">\\r\\n        \\r\\n            <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"onSaveCallRequestHandler()\\\">\\r\\n\\r\\n                <div class=\\\"ion-padding\\\">\\r\\n                    \\r\\n                    <div class=\\\"cnt-content mb32\\\">\\r\\n                        <p>Please Select A Date & Time For When You Would Like To Discuss Your Enquiry Over The Phone.</p>\\r\\n                    </div>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.contactName.errors && f1.contactName.errors.required ? 'has-error' : (f1.contactName.errors && !f1.contactName.errors.required ? 'has-text' : '')\\\">\\r\\n\\r\\n                        <ion-label position=\\\"floating\\\">Contact Name</ion-label>\\r\\n\\r\\n                        <ion-input formControlName=\\\"contactName\\\" [(ngModel)]=\\\"data.contactName\\\"></ion-input>\\r\\n\\r\\n                    </ion-item>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.mobile.errors && f1.mobile.errors.required ? 'has-error' : (f1.mobile.errors && !f1.mobile.errors.required ? 'has-text' : '')\\\">\\r\\n                        <ion-label position=\\\"floating\\\">Mobile No.</ion-label>\\r\\n\\r\\n                        <ion-input type=\\\"tel\\\" formControlName=\\\"mobile\\\" [(ngModel)]=\\\"data.mobile\\\" (ngModelChange)=\\\"dbService.numberOnly($event)\\\"></ion-input>\\r\\n\\r\\n                        <ion-text *ngIf=\\\"submitted && f1.mobile.errors\\\" class=\\\"cs-error\\\">\\r\\n                                <span>10 Digit Required</span>\\r\\n                        </ion-text>\\r\\n                    </ion-item>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.suitableDate.errors && f1.suitableDate.errors.required ? 'has-error' : (f1.suitableDate.errors && !f1.suitableDate.errors.required ? 'has-text' : '')\\\">\\r\\n                        <ion-label position=\\\"floating\\\">Suitable Date</ion-label>\\r\\n\\r\\n                        <ion-datetime formControlName=\\\"suitableDate\\\" [(ngModel)]=\\\"data.suitableDate\\\" displayFormat=\\\"DD-MMM-YYYY\\\" min=\\\"{{minDate}}\\\"></ion-datetime>\\r\\n\\r\\n                    </ion-item>\\r\\n                    \\r\\n                    <ion-item [ngClass]=\\\"submitted && f1.suitableTime.errors && f1.suitableTime.errors.required ? 'has-error' : (f1.suitableTime.errors && !f1.suitableTime.errors.required ? 'has-text' : '')\\\">\\r\\n\\r\\n                        <ion-label position=\\\"floating\\\">Suitable Time</ion-label>\\r\\n                        <ion-datetime formControlName=\\\"suitableTime\\\" [(ngModel)]=\\\"data.suitableTime\\\" displayFormat=\\\"h:mm A\\\"></ion-datetime>\\r\\n\\r\\n                    </ion-item>\\r\\n\\r\\n                    <div class=\\\"cs-btn mt50\\\">\\r\\n                        <ion-button type=\\\"submit\\\" class=\\\"success large wp100\\\">SAVE</ion-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CallrequestPage } from './callrequest.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CallrequestPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CallrequestPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CallrequestPageRoutingModule } from './callrequest-routing.module';\r\n\r\nimport { CallrequestPage } from './callrequest.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    CallrequestPageRoutingModule\r\n  ],\r\n  declarations: [CallrequestPage]\r\n})\r\nexport class CallrequestPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9jYWxscmVxdWVzdC9jYWxscmVxdWVzdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, } from '@angular/forms';\r\nimport { LoadingController, AlertController, ModalController } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-callrequest',\r\n  templateUrl: './callrequest.page.html',\r\n  styleUrls: ['./callrequest.page.scss'],\r\n})\r\nexport class CallrequestPage implements OnInit {\r\n\r\n  data: any = {};\r\n  contactData: any = [];\r\n\r\n  minDate: any  = '';\r\n\r\n  submitted: any = false;\r\n  registerForm1: FormGroup;\r\n\r\n  constructor(private route: Router,\r\n              private formBuilder: FormBuilder,\r\n              public alertCtrl: AlertController,\r\n              public modalController: ModalController,\r\n              public dbService: DbServiceService) {\r\n\r\n              this.minDate = moment().format('YYYY-MM-DD');\r\n\r\n              this.registerForm1 = this.formBuilder.group({\r\n\r\n                  contactName: ['', [Validators.required]],\r\n                  mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\r\n                  suitableDate: ['', [Validators.required]],\r\n                  suitableTime: ['', [Validators.required]]\r\n              });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n      this.onGetAllContactListHandler();\r\n  }\r\n\r\n\r\n  async onChangeContactHandler() {\r\n\r\n         const contactIndex = this.contactData.findIndex(row => row.name == this.data.contactName);\r\n\r\n         if (contactIndex !== -1) {\r\n            this.data.mobile = this.contactData[contactIndex].mobile;\r\n         }\r\n  }\r\n\r\n  async getMobilelength(number) {\r\n      return number.toString().length == 10;\r\n  }\r\n\r\n\r\n  async onSaveCallRequestHandler() {\r\n\r\n      console.log(this.data);\r\n\r\n      this.submitted = true;\r\n\r\n      if (this.registerForm1.invalid) {\r\n\r\n          this.registerForm1.get('contactName').markAsTouched();\r\n          this.registerForm1.get('mobile').markAsTouched();\r\n          this.registerForm1.get('suitableDate').markAsTouched();\r\n          this.registerForm1.get('suitableTime').markAsTouched();\r\n\r\n          return;\r\n\r\n      } else {\r\n\r\n          console.log('hello');\r\n\r\n          console.log(this.data);\r\n\r\n          const alert = await this.alertCtrl.create({\r\n            header: 'Confirm',\r\n            message: 'Are You Sure, You Want To Save Call Request ?',\r\n            buttons: [\r\n                  {\r\n                    text: 'No',\r\n                    role: 'cancel',\r\n                    handler: () => {\r\n                      console.log('No clicked');\r\n                    }\r\n                  },\r\n                  {\r\n                    text: 'Yes',\r\n                    handler: () => {\r\n\r\n                          console.log('Yes clicked');\r\n\r\n                          const inputData = JSON.parse(JSON.stringify(this.data));\r\n\r\n                          inputData[`suitableDate`] = moment(inputData[`suitableDate`]).format('YYYY-MM-DD');\r\n\r\n                          inputData[`suitableTime`] = moment(inputData[`suitableTime`], 'H:mm A').format('H:mm');\r\n\r\n                          inputData[`suitableDateTime`] = inputData[`suitableDate`] + ' ' + inputData[`suitableTime`];\r\n\r\n                          this.dbService.presentLoader();\r\n\r\n                          this.dbService.onPostRequestHandler(inputData, 'customer/onSaveCallRequestData').subscribe((result) => {\r\n\r\n                                console.log(result);\r\n                                this.dbService.dismissLoader();\r\n\r\n                                this.data.status = '';\r\n                                this.route.navigate(['/customer/home']);\r\n\r\n                                this.dbService.presentToast('Call Request Saved Successfully!');\r\n                          });\r\n                    }\r\n                  }\r\n              ]\r\n          });\r\n\r\n          await alert.present();\r\n\r\n      }\r\n  }\r\n\r\n\r\n  onGetAllContactListHandler() {\r\n\r\n      const inputData = {};\r\n\r\n      this.dbService.presentLoader();\r\n\r\n      this.dbService.onPostRequestHandler(inputData, 'customer/getCustomerContactHandler').subscribe((result) => {\r\n            console.log(result);\r\n\r\n            this.dbService.dismissLoader();\r\n            this.contactData = result[`contactData`];\r\n      });\r\n  }\r\n\r\n  get f1() { return this.registerForm1.controls; }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"callrequest-callrequest-module-es5.js"}