{"version":3,"sources":["src/app/technician_app/complaints/complaintlist/complaintlist.page.html","src/app/technician_app/complaints/complaintlist/complaintlist-routing.module.ts","src/app/technician_app/complaints/complaintlist/complaintlist.module.ts","src/app/technician_app/complaints/complaintlist/complaintlist.page.scss","src/app/technician_app/complaints/complaintlist/complaintlist.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content >\\r\\n    \\r\\n    <ion-refresher slot=\\\"fixed\\\" \\r\\n    (ionRefresh)=\\\"ionRefresh($event)\\\">\\r\\n    <ion-refresher-content\\r\\n    pullingIcon=\\\"arrow-dropdown\\\"\\r\\n    pullingText=\\\"Pull to refresh\\\"\\r\\n    refreshingSpinner=\\\"circles\\\"\\r\\n    refreshingText=\\\"Refreshing...\\\">\\r\\n</ion-refresher-content>\\r\\n</ion-refresher>\\r\\n\\r\\n<div class=\\\"cs-main-container\\\">\\r\\n    \\r\\n    <div class=\\\"custome-head\\\">\\r\\n        <div class=\\\"cs-ion-header\\\">\\r\\n            \\r\\n            <div class=\\\"cs-left\\\">\\r\\n                <ion-title class=\\\"pl0\\\">My {{routeTitleForView}}</ion-title>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"cs-right\\\">\\r\\n                <ion-button (click)=\\\"onSearchClickHandler()\\\"><ion-icon name=\\\"search\\\"></ion-icon></ion-button>\\r\\n                <ion-button (click)=\\\"presentModal()\\\" id=\\\"bt\\\"><ion-icon name=\\\"funnel\\\"></ion-icon></ion-button>\\r\\n            </div>\\r\\n            \\r\\n            <div [ngClass]=\\\"isSearchOptionActive ? 'active' : ''\\\" class=\\\"search-filetr\\\">\\r\\n                \\r\\n                <ion-searchbar [(ngModel)]=\\\"data.inputSearch\\\" (ngModelChange)=\\\"onUpdateCurrentPageHandler(); onGetComplaintListHandler(false, '')\\\" id=\\\"inputSearch\\\"></ion-searchbar>\\r\\n                \\r\\n                <a (click) = \\\"data.inputSearch = ''; isSearchOptionActive = false; onUpdateCurrentPageHandler(); onGetComplaintListHandler(false, '')\\\"  class=\\\"cancel\\\">Cancel</a>\\r\\n                \\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"cs-ion-hf\\\"></div>\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n    \\r\\n    <div class=\\\"cs-ion-content pt0\\\" padding>\\r\\n        <div class=\\\"complaints list\\\">\\r\\n            \\r\\n            <div *ngFor=\\\"let row of complaintList\\\" class=\\\"figure\\\">\\r\\n                \\r\\n                <div (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"top\\\">\\r\\n                    <div class=\\\"cs-left\\\">\\r\\n                        <h1>#SR - {{row.task_no}} <ion-text>({{row.days}} Days)</ion-text></h1>\\r\\n                    </div>\\r\\n                    <div class=\\\"cs-right\\\">\\r\\n                        <ion-text>{{row.dateCreated}}  |  {{row.timeCreated}}</ion-text>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"cnt-info\\\">\\r\\n                    \\r\\n                    <div (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"cs-left\\\">\\r\\n                        <div class=\\\"f-alpha\\\">{{row.customer_name[0]}}</div>\\r\\n                        <div class=\\\"names\\\">\\r\\n                            <h1>{{row.customer_name}}</h1>\\r\\n                            <ion-text>{{row.customer_contact_name}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div class=\\\"cs-right\\\">\\r\\n                        <a href=\\\"tel: {{row.customer_contact_mobile}}\\\" class=\\\"call\\\"><i class=\\\"material-icons\\\">call</i></a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"one-one-one\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Project </ion-text>\\r\\n                            <ion-text>{{row.project_name}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"row.task_type == 'commissioning'\\\" class=\\\"one-one-one\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Service Type </ion-text>\\r\\n                            <ion-text>Warranty Service</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"one-two-one three\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\r\\n\\r\\n                    <div class=\\\"cs-box\\\" >\\r\\n                        <!-- style=\\\"background: #FFCC00;\\\" -->\\r\\n                        <!-- class=\\\"cs-box close\\\" -->\\r\\n                        \\r\\n                        <div>\\r\\n                                <ion-text>Priority</ion-text>\\r\\n                                <ion-text>{{row.priority ? row.priority : 'NA'}}</ion-text>\\r\\n                            </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                \\r\\n                <div (click)=\\\"GoComplaintDetail(row.id)\\\" *ngFor=\\\"let fgRow of row.fgData\\\"  class=\\\"one-two-one three\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>FG No.</ion-text>\\r\\n                            <ion-text>{{fgRow.fg_no}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n            \\r\\n                    <div  *ngIf=\\\"row.task_type != 'commissioning'\\\" class=\\\"cs-box\\\" >\\r\\n\\r\\n                        <!-- style=\\\"background: #FFA200;\\\" -->\\r\\n\\r\\n                        <div>\\r\\n                            <ion-text>Service Type</ion-text>\\r\\n                            <ion-text>{{(row.transaction_type == 'FOC' || row.transaction_type == 'Sale/Warranty' || row.transaction_type == 'Commissioning') ? 'Warranty Service' : 'Paid Service'}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n                \\r\\n                <div *ngIf=\\\"row.task_type != 'commissioning'\\\" (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"one-one-one\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text> Issue Category </ion-text>\\r\\n                            <ion-text>{{row.compaint_title}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div  (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"one-one-one\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text> Engineer Visiting Date &  Time</ion-text>\\r\\n                            <ion-text>{{row.visit_date_time| date : 'dd MMM yyyy hh:mm a'}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"one-two-one two\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Eng. Work Status</ion-text>\\r\\n                            <ion-text>{{row.workStatus ? row.workStatus : 'NA'}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div [ngClass] = \\\"(row.status) ? row.status.toLowerCase() : ''\\\" class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text> Service Request Status</ion-text>\\r\\n                            <ion-text>{{row.status}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"lf-btns\\\">\\r\\n                    <div class=\\\"cs-left\\\">\\r\\n                        \\r\\n                        <ion-button (click)=\\\"GoComplaintDetailModulesHandler('statusListPage', row.id, row.task_no,row.status,row.task_type)\\\" color=\\\"primary\\\" fill=\\\"clear\\\">Status History</ion-button>\\r\\n                        \\r\\n                        <ion-button (click)=\\\"GoComplaintDetailModulesHandler('dailyWorkReportPage', row.id, row.task_no,row.status,row.task_type)\\\" color=\\\"primary\\\" fill=\\\"clear\\\">Daily Report</ion-button>\\r\\n                        \\r\\n                    </div>\\r\\n                    <div (click)=\\\"presentPopover($event, row.id, row.task_no,row.status)\\\" class=\\\"cs-right\\\">\\r\\n                        <ion-button color=\\\"primary\\\" fill=\\\"clear\\\"><ion-icon name=\\\"more\\\"></ion-icon></ion-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div *ngIf=\\\"!isRequestInProcess && complaintList.length == 0\\\" class=\\\"no-data\\\">\\r\\n            <img src=\\\"assets/icon/no_found.svg\\\">\\r\\n            <p>Data Not Found!</p>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ion-infinite-scroll threshold=\\\"100px\\\" *ngIf=\\\"doCheckForMoreData\\\" (ionInfinite)=\\\"onGetComplaintListHandler(false, $event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n    loadingSpinner=\\\"bubbles\\\"\\r\\n    loadingText=\\\"Loading more data...\\\">\\r\\n</ion-infinite-scroll-content>\\r\\n</ion-infinite-scroll>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ComplaintlistPage } from './complaintlist.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ComplaintlistPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComplaintlistPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ComplaintlistPageRoutingModule } from './complaintlist-routing.module';\r\n\r\nimport { ComplaintlistPage } from './complaintlist.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ComplaintlistPageRoutingModule\r\n  ],\r\n  declarations: [ComplaintlistPage]\r\n})\r\nexport class ComplaintlistPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlY2huaWNpYW5fYXBwL2NvbXBsYWludHMvY29tcGxhaW50bGlzdC9jb21wbGFpbnRsaXN0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoadingController, AlertController, ModalController, PopoverController, IonContent } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\nimport { ComplaintfiltermodalPage } from 'src/app/complaintfiltermodal/complaintfiltermodal.page';\r\nimport { TecCompliantPopoverComponent } from '../tec-compliant-popover/tec-compliant-popover.component';\r\nimport * as $ from 'jquery';\r\nimport {HomePage} from '../../home/home.page';\r\n\r\n@Component({\r\n  selector: 'app-complaintlist',\r\n  templateUrl: './complaintlist.page.html',\r\n  styleUrls: ['./complaintlist.page.scss'],\r\n})\r\nexport class ComplaintlistPage implements OnInit {\r\n\r\n  @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n  public show: any = false;\r\n  public buttonName: any = 'Show';\r\n\r\n  routeTitleForView: any = '';\r\n  complaintList: any = [];\r\n  searchval1: any = {};\r\n  isSearchOptionActive: any = false;\r\n  searchData: any = {};\r\n  data: any = {};\r\n\r\n  dashboardCountFilterData: any;\r\n  doCheckForMoreData: any = true;\r\n  isRequestInProcess: any = true;\r\n\r\n\r\n  currentPage: any = 1;\r\n  pageSize = 2;\r\n\r\n  constructor(private route: Router,\r\n              public popoverController: PopoverController,\r\n              private formBuilder: FormBuilder,\r\n              public alertCtrl: AlertController,\r\n              public modalController: ModalController,\r\n              public dbService: DbServiceService,\r\n              ) {\r\n\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n      this.onGetComplaintListHandler(true, '');\r\n  }\r\n\r\n  toggle() {\r\n\r\n      this.show = !this.show;\r\n      if (this.show)   {\r\n\r\n        this.buttonName = 'Hide';\r\n\r\n      } else {\r\n\r\n        this.buttonName = 'Show';\r\n      }\r\n  }\r\n\r\n  onGetComplaintListHandler(showLoading, infiniteScroll: any) {\r\n\r\n      console.log('hello');\r\n\r\n      console.log(infiniteScroll);\r\n\r\n      console.log(this.route.url);\r\n\r\n      const inputData = {\r\n          start: this.currentPage,\r\n          pageLimit: this.pageSize\r\n      };\r\n\r\n      if (this.route.url == '/technicians/complaints') {\r\n\r\n           inputData[`type`] = 'service_request';\r\n           this.routeTitleForView = 'Service Request';\r\n\r\n           localStorage.setItem('routeType', 'complaints');\r\n      }\r\n\r\n      if (this.route.url == '/technicians/commissioning') {\r\n\r\n         inputData[`type`] = 'commissioning';\r\n         this.routeTitleForView = 'Commissioning';\r\n\r\n         localStorage.setItem('routeType', 'commissioning');\r\n      }\r\n\r\n     \r\n\r\n      if (localStorage.getItem('dashboardCountFilterData')) {\r\n\r\n            this.dashboardCountFilterData = JSON.parse(localStorage.getItem('dashboardCountFilterData'));\r\n            console.log(this.dashboardCountFilterData);\r\n            // this.searchval1 = this.home.searchVal;\r\n\r\n      } else {\r\n\r\n          \r\n           this.dashboardCountFilterData = '' ;\r\n      }\r\n   \r\n      this.searchData[`dashboardCountFilterData`] = this.dashboardCountFilterData ;\r\n\r\n      inputData[`searchData`] = this.searchData;\r\n      inputData[`inputSearch`] = this.data.inputSearch;\r\n\r\n      if (showLoading) {\r\n         this.dbService.presentLoader();\r\n      }\r\n\r\n      this.isRequestInProcess = true;\r\n\r\n      this.dbService.onPostRequestHandler(inputData, 'task/getTaskList').subscribe((result) => {\r\n\r\n            console.log(result);\r\n\r\n            if (showLoading) {\r\n                  setTimeout(() => {\r\n                    this.dbService.dismissLoader();\r\n                  }, 1000);\r\n            }\r\n\r\n            let resultData = result[`taskList`];\r\n\r\n            if (!resultData || resultData == null || resultData.length == 0) {\r\n                resultData = [];\r\n                this.doCheckForMoreData = false;\r\n            }\r\n\r\n            if (this.currentPage == 1) {\r\n                this.complaintList = resultData;\r\n            } else {\r\n\r\n                for (let index = 0; index < resultData.length; index++) {\r\n\r\n                   const isIndex = this.complaintList.findIndex(row => row.id == resultData[index].id);\r\n                   if (isIndex === -1) {\r\n                      this.complaintList.push(resultData[index]);\r\n                   }\r\n\r\n                }\r\n            }\r\n\r\n            this.currentPage += 1;\r\n\r\n            if (infiniteScroll) {\r\n                infiniteScroll.target.complete();\r\n            }\r\n\r\n            setTimeout(() => {\r\n                this.isRequestInProcess = false;\r\n            }, 1000);\r\n        });\r\n  }\r\n\r\n\r\n  ionViewWillEnter() {\r\n\r\n      this.onUpdateCurrentPageHandler();\r\n      this.onGetComplaintListHandler(false, '');\r\n  }\r\n\r\n\r\n  onSearchClickHandler() {\r\n\r\n       this.isSearchOptionActive = true;\r\n\r\n       setTimeout(() => {\r\n\r\n          $('#inputSearch').focus();\r\n           \r\n       }, 2000);\r\n  }\r\n\r\n\r\n  ionRefresh(event) {\r\n    console.log('Pull Event Triggered!');\r\n    setTimeout(() => {\r\n      console.log('Async operation has ended');\r\n\r\n      this.data.inputSearch = '';\r\n      this.searchData = {};\r\n\r\n      this.onUpdateCurrentPageHandler();\r\n      this.onGetComplaintListHandler(true, '');\r\n      event.target.complete();\r\n\r\n    }, 2000);\r\n  }\r\n\r\n\r\n  async onUpdateCurrentPageHandler() {\r\n\r\n        setTimeout(() => {\r\n\r\n            this.doCheckForMoreData = true;\r\n\r\n        }, 1000);\r\n\r\n        this.currentPage = 1;\r\n        this.onScrollToTopHandler();\r\n  }\r\n\r\n  async onScrollToTopHandler() {\r\n      this.content.scrollToTop();\r\n  }\r\n\r\n\r\n\r\n  async presentModal() {\r\n\r\n      const modal = await this.modalController.create({\r\n        component: ComplaintfiltermodalPage,\r\n        componentProps: {\r\n           searchData: this.searchData\r\n        }\r\n      });\r\n\r\n      modal.onDidDismiss()\r\n      .then((data) => {\r\n            console.log(data);\r\n            if (data && data[`data`] && data[`data`][`data`]) {\r\n\r\n                 console.log(data[`data`]);\r\n                 this.searchData = data[`data`][`data`];\r\n\r\n                 this.onUpdateCurrentPageHandler();\r\n                 this.onGetComplaintListHandler(true, '');\r\n            }\r\n      });\r\n      return await modal.present();\r\n   }\r\n\r\n\r\n   async presentPopover(ev: any, taskId, taskNo,taskStatus) {\r\n\r\n      const taskIndex = this.complaintList.findIndex(row => row.id == taskId);\r\n\r\n      console.log(this.complaintList[taskIndex]);\r\n\r\n\r\n      const taskPopUpData = {\r\n            taskWorkReport: this.complaintList[taskIndex].taskWorkReport,\r\n            taskReportCount: this.complaintList[taskIndex].taskReportCount,\r\n            taskInstalledPartCount: this.complaintList[taskIndex].taskInstalledPartCount\r\n      };\r\n\r\n    //   console.log(taskPopUpData);\r\n    //   console.log(ev);\r\n      \r\n      localStorage.setItem('taskPopUpData', JSON.stringify(taskPopUpData));\r\n\r\n      const taskData ={\r\n          taskId: taskId,\r\n          taskNo: taskNo,\r\n          taskStatus: taskStatus,\r\n          taskType: this.complaintList[taskIndex].task_type\r\n      };\r\n\r\n    //   console.log(taskData);\r\n      const popover = await this.popoverController.create({\r\n          component: TecCompliantPopoverComponent,\r\n          event: ev,\r\n          translucent: true,\r\n          componentProps: taskData\r\n      });\r\n    //   console.log(popover);\r\n\r\n      return await popover.present();\r\n  }\r\n\r\n  GoComplaintDetail(taskId) {\r\n\r\n      localStorage.setItem('routeTitleForView', this.routeTitleForView);\r\n      this.route.navigateByUrl('/technicians/' + localStorage.getItem('routeType') + '/details/' + taskId + '');\r\n  }\r\n\r\n  GoComplaintDetailModulesHandler(targetPage, taskId, taskNo,taskStatus,taskType) {\r\n\r\n    localStorage.setItem('routeTitleForView', this.routeTitleForView);\r\n    localStorage.setItem('taskType',  taskType);\r\n\r\n    if (targetPage == 'statusListPage') {\r\n\r\n       this.route.navigateByUrl('/technicians/' + localStorage.getItem('routeType') + '/details/status/' + taskId + '/' + taskNo + '/' + taskStatus);\r\n    }\r\n\r\n\r\n    if (targetPage == 'dailyWorkReportPage') {\r\n        localStorage.setItem('reportType',  'dailyReport');\r\n        this.route.navigateByUrl('/technicians/' + localStorage.getItem('routeType') + '/details/dailyreport/' + taskId + '/' + taskNo + '/' + taskStatus);\r\n    }\r\n\r\n }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"complaints-complaintlist-complaintlist-module-es5.js"}