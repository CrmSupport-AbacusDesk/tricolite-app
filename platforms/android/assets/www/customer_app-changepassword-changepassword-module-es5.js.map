{"version":3,"sources":["src/app/customer_app/changepassword/changepassword.page.html","src/app/customer_app/changepassword/changepassword-routing.module.ts","src/app/customer_app/changepassword/changepassword.module.ts","src/app/customer_app/changepassword/changepassword.page.scss","src/app/customer_app/changepassword/changepassword.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content>\\r\\n    <div class=\\\"login-container\\\">\\r\\n        <div class=\\\"logo\\\"><img src=\\\"assets/img/logo.jpg\\\" alt=\\\"\\\"></div>\\r\\n        \\r\\n        <div class=\\\"form-container\\\">\\r\\n            <div class=\\\"head\\\">\\r\\n                <div class=\\\"heading\\\">\\r\\n                    \\r\\n                    <h1 *ngIf=\\\"activeStage==3\\\">Change Password</h1>\\r\\n                    \\r\\n                    <ion-button fill=\\\"clear\\\" routerLink=\\\"/customer/home\\\" routerDirection=\\\"\\\">\\r\\n                        <i class=\\\"material-icons\\\">arrow_right_alt</i> Back</ion-button>\\r\\n                        \\r\\n                    </div>\\r\\n                    <p *ngIf=\\\"activeStage==1\\\">Enter your mobile number, we will send you OTP to verify.</p>\\r\\n                    \\r\\n                    <p *ngIf=\\\"activeStage==2\\\">Enter 4 Digit OTP Code.</p>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"input-container\\\">\\r\\n                    \\r\\n                    <div class=\\\"form_x\\\">\\r\\n                        \\r\\n                        <form *ngIf=\\\"!isUserLoggedIn\\\" [formGroup]=\\\"registerForm1\\\">\\r\\n                            \\r\\n                            <ion-item [ngClass]=\\\"isMobileSubmitted && f1.mobile.errors && f1.mobile.errors.required ? 'has-error' : (f1.mobile.errors && !f1.mobile.errors.required ? 'has-text' : '')\\\" class=\\\"icon\\\">\\r\\n                                \\r\\n                                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\">\\r\\n                                    <g id=\\\"user_icon\\\" transform=\\\"translate(0)\\\">\\r\\n                                        <g id=\\\"Group_1\\\" data-name=\\\"Group 1\\\" transform=\\\"translate(0)\\\">\\r\\n                                            <path id=\\\"Path_1\\\" data-name=\\\"Path 1\\\" d=\\\"M17.071,12.929a9.962,9.962,0,0,0-3.8-2.384,5.781,5.781,0,1,0-6.542,0A10.016,10.016,0,0,0,0,20H1.562a8.437,8.437,0,1,1,16.875,0H20A9.935,9.935,0,0,0,17.071,12.929ZM10,10a4.219,4.219,0,1,1,4.219-4.219A4.224,4.224,0,0,1,10,10Z\\\" transform=\\\"translate(0)\\\" fill=\\\"rgba(0,0,0,0.3)\\\"/>\\r\\n                                        </g>\\r\\n                                    </g>\\r\\n                                </svg>\\r\\n                                \\r\\n                                <ion-label position=\\\"floating\\\">Mobile No.</ion-label>\\r\\n                                <ion-input formControlName=\\\"mobile\\\" [(ngModel)]=\\\"data.mobile\\\" (keypress)=\\\"dbService.numberOnly($event)\\\" [readonly]=\\\"activeStage!=1\\\"></ion-input>\\r\\n                                \\r\\n                                \\r\\n                                <ion-text *ngIf=\\\"isMobileSubmitted && f1.mobile.errors\\\" class=\\\"cs-error\\\">\\r\\n                                    \\r\\n                                    <span *ngIf=\\\"f1.mobile.errors.minlength\\\">Minimum 10 Digit Required</span>\\r\\n                                    <span *ngIf=\\\"f1.mobile.errors.maxlength\\\">Maximum 10 Digit Required</span>\\r\\n                                    \\r\\n                                </ion-text>\\r\\n                                \\r\\n                            </ion-item>\\r\\n                            \\r\\n                            \\r\\n                        </form>\\r\\n                        \\r\\n                        <form *ngIf=\\\"activeStage==2\\\" [formGroup]=\\\"registerForm2\\\">\\r\\n                            \\r\\n                            \\r\\n                            <ion-item [ngClass]=\\\"isOTPSubmitted && f2.otpCode.errors && f2.otpCode.errors.required ? 'has-error' : (f2.otpCode.errors && !f2.otpCode.errors.required ? 'has-text' : '')\\\" class=\\\"icon\\\">\\r\\n                                \\r\\n                                <svg id=\\\"key_icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20.316\\\" viewBox=\\\"0 0 20 20.316\\\">\\r\\n                                    \\r\\n                                    <g id=\\\"Group_4\\\" data-name=\\\"Group 4\\\">\\r\\n                                        \\r\\n                                        <g id=\\\"Group_3\\\" data-name=\\\"Group 3\\\">\\r\\n                                            \\r\\n                                            <path id=\\\"Path_2\\\" data-name=\\\"Path 2\\\" d=\\\"M10.844,20.316a6.871,6.871,0,0,0,6.422-9.3l6.565-6.566a.5.5,0,0,0,.147-.354V.5a.5.5,0,0,0-.5-.5H20.517a.5.5,0,0,0-.354.146l-1,1a.5.5,0,0,0-.147.354V2.722H17.8a.5.5,0,0,0-.5.5v.49H16.8a.5.5,0,0,0-.5.5V5.29H15.227a.5.5,0,0,0-.354.147L13.281,7.028a6.867,6.867,0,1,0-2.437,13.287Zm0-12.732a5.821,5.821,0,0,1,2.355.492.5.5,0,0,0,.55-.1l0,0L15.434,6.29H16.8a.5.5,0,0,0,.5-.5V4.713h.49a.5.5,0,0,0,.5-.5v-.49h1.224a.5.5,0,0,0,.5-.5V1.7l.7-.7h2.253v.707L16.861,7.824a.45.45,0,1,0,.637.637l5.479-5.479v.9L16.323,10.54l0,0a.5.5,0,0,0-.1.55,5.867,5.867,0,1,1-5.374-3.511Z\\\" transform=\\\"translate(-3.978)\\\" fill=\\\"rgba(0,0,0,0.3)\\\"/>\\r\\n                                            \\r\\n                                        </g>\\r\\n                                        \\r\\n                                    </g>\\r\\n                                    \\r\\n                                    <g id=\\\"Group_6\\\" data-name=\\\"Group 6\\\" transform=\\\"translate(2.902 13.665)\\\">\\r\\n                                        <g id=\\\"Group_5\\\" data-name=\\\"Group 5\\\" transform=\\\"translate(0)\\\">\\r\\n                                            <path id=\\\"Path_3\\\" data-name=\\\"Path 3\\\" d=\\\"M342.275,76.893a1.874,1.874,0,1,0-1.874-1.874A1.876,1.876,0,0,0,342.275,76.893Zm0-2.748a.874.874,0,1,1-.874.874A.875.875,0,0,1,342.275,74.145Z\\\" transform=\\\"translate(-340.401 -73.144)\\\" fill=\\\"rgba(0,0,0,0.3)\\\"/>\\r\\n                                        </g>\\r\\n                                    </g>\\r\\n                                    \\r\\n                                </svg>\\r\\n                                \\r\\n                                <ion-label position=\\\"floating\\\">Enter OTP</ion-label>\\r\\n                                \\r\\n                                <ion-input formControlName=\\\"otpCode\\\" [(ngModel)]=\\\"data.otpCode\\\" (ngModelChange)=\\\"isOTPWrong = false\\\" (keypress)=\\\"dbService.numberOnly($event)\\\"></ion-input>\\r\\n                                \\r\\n                                <ion-text *ngIf=\\\"isOTPSubmitted && f2.otpCode.errors\\\" class=\\\"cs-error\\\">\\r\\n                                    \\r\\n                                    <span *ngIf=\\\"f2.otpCode.errors.minlength\\\">OTP Must be 4 Digit!</span>\\r\\n                                    <span *ngIf=\\\"f2.otpCode.errors.maxlength\\\">OTP Must be 4 Digit!</span>\\r\\n                                    \\r\\n                                </ion-text>\\r\\n                                \\r\\n                                <ion-text *ngIf=\\\"isOTPWrong\\\" class=\\\"cs-error\\\">\\r\\n                                    \\r\\n                                    <span>Enter Correct OTP!</span>\\r\\n                                    \\r\\n                                </ion-text>\\r\\n                                \\r\\n                            </ion-item>\\r\\n                            \\r\\n                            \\r\\n                            \\r\\n                            \\r\\n                        </form>\\r\\n                        \\r\\n                        \\r\\n                    </div>\\r\\n                    \\r\\n                    <form *ngIf=\\\"activeStage==3\\\" [formGroup]=\\\"registerForm3\\\">\\r\\n                        \\r\\n                        \\r\\n                        <div class=\\\"common_form\\\">\\r\\n                            \\r\\n                            <ion-item [ngClass]=\\\"isPasswordSubmitted && f3.password.errors && f3.password.errors.required ? 'has-error' : (f3.password.errors && !f3.password.errors.required ? 'has-text' : '')\\\">\\r\\n                                \\r\\n                                <ion-label position=\\\"floating\\\">New Password</ion-label>\\r\\n                                <ion-input formControlName=\\\"password\\\" [(ngModel)]=\\\"data.password\\\" (ngModelChange)=\\\"isPasswordWrong=false\\\"></ion-input>\\r\\n                                \\r\\n                                <ion-text *ngIf=\\\"isPasswordSubmitted && f3.password.errors\\\" class=\\\"cs-error\\\">\\r\\n                                    \\r\\n                                    <span *ngIf=\\\"f3.password.errors.minlength\\\">Password Must be Minimum  5 Letters!</span>\\r\\n                                    \\r\\n                                    <span *ngIf=\\\"f3.password.errors.maxlength\\\">Password Must be Atmost  20 Letters!</span>\\r\\n                                    \\r\\n                                </ion-text>\\r\\n                            </ion-item>\\r\\n                            \\r\\n                            \\r\\n                            \\r\\n                            <ion-item [ngClass]=\\\"isPasswordSubmitted && f3.confirmPassword.errors && f3.confirmPassword.errors.required ? 'has-error' : (f3.confirmPassword.errors && !f3.confirmPassword.errors.required ? 'has-text' : '')\\\">\\r\\n                                \\r\\n                                <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\r\\n                                \\r\\n                                <ion-input formControlName=\\\"confirmPassword\\\" [(ngModel)]=\\\"data.confirmPassword\\\" (ngModelChange)=\\\"isPasswordWrong=false\\\"></ion-input>\\r\\n                                \\r\\n                                <ion-text *ngIf=\\\"isPasswordSubmitted && f3.confirmPassword.errors\\\" class=\\\"cs-error\\\">\\r\\n                                    \\r\\n                                    <span *ngIf=\\\"f3.confirmPassword.errors.minlength\\\">Password Must be Minimum  5 Letters!</span>\\r\\n                                    \\r\\n                                    <span *ngIf=\\\"f3.confirmPassword.errors.maxlength\\\">Password Must be Atmost  20 Letters!</span>\\r\\n                                    \\r\\n                                </ion-text>\\r\\n                                \\r\\n                                <ion-text *ngIf=\\\"isPasswordWrong && !f3.confirmPassword.errors\\\" class=\\\"cs-error\\\">\\r\\n                                    \\r\\n                                    <span>Both Password Do Not Match!</span>\\r\\n                                    \\r\\n                                </ion-text>\\r\\n                                \\r\\n                            </ion-item>\\r\\n                            \\r\\n                            \\r\\n                            \\r\\n                        </div>\\r\\n                        \\r\\n                    </form>\\r\\n                    \\r\\n                    <div class=\\\"cs-btn mt50\\\">\\r\\n                        \\r\\n                        <ion-button (click)=\\\"onMobileSubmitHandler()\\\" *ngIf=\\\"activeStage==1\\\" class=\\\"success large\\\" shape=\\\"round\\\" expand=\\\"full\\\">CONTINUE</ion-button>\\r\\n                        \\r\\n                        <ion-button  (click)=\\\"onOTPSubmitHandler()\\\" *ngIf=\\\"activeStage==2\\\" class=\\\"success large\\\" shape=\\\"round\\\" expand=\\\"full\\\">CONTINUE</ion-button>\\r\\n                        \\r\\n                        <ion-button  (click)=\\\"onPasswordSubmitHandler()\\\" *ngIf=\\\"activeStage==3\\\" class=\\\"success large\\\" shape=\\\"round\\\"  expand=\\\"full\\\">UPDATE PASSWORD</ion-button>\\r\\n                        \\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n            \\r\\n            \\r\\n        </div>\\r\\n        \\r\\n    </ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ChangepasswordPage } from './changepassword.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChangepasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ChangepasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ChangepasswordPageRoutingModule } from './changepassword-routing.module';\r\n\r\nimport { ChangepasswordPage } from './changepassword.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    ChangepasswordPageRoutingModule\r\n  ],\r\n  declarations: [ChangepasswordPage]\r\n})\r\nexport class ChangepasswordPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9jaGFuZ2VwYXNzd29yZC9jaGFuZ2VwYXNzd29yZC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { FormBuilder, FormGroup, Validators,  } from '@angular/forms';\r\nimport { LoadingController, AlertController, ModalController } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\n\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-changepassword',\r\n  templateUrl: './changepassword.page.html',\r\n  styleUrls: ['./changepassword.page.scss'],\r\n})\r\nexport class ChangepasswordPage implements OnInit {\r\n\r\n  data: any = {};\r\n  loginData: any = {};\r\n\r\n  storedOTPCode: any = '';\r\n  isOTPWrong: any = false;\r\n  isPasswordWrong: any = false;\r\n\r\n\r\n  activeStage: any = 1;\r\n  isMobileSubmitted: any = false;\r\n  isOTPSubmitted: any = false;\r\n  isPasswordSubmitted: any = false;\r\n\r\n  isUserLoggedIn: any = false;\r\n  userLoggedInType: any = '';\r\n\r\n  registerForm1: FormGroup;\r\n  registerForm2: FormGroup;\r\n  registerForm3: FormGroup;\r\n\r\n  constructor(private route: Router,\r\n              public routeParams: ActivatedRoute,\r\n              private formBuilder: FormBuilder,\r\n              public alertCtrl: AlertController,\r\n              public modalController: ModalController,\r\n              public dbService: DbServiceService) {\r\n\r\n       const loginData = JSON.parse(localStorage.getItem('loginData'));\r\n\r\n       if (loginData && loginData[`loginId`]) {\r\n\r\n              this.isUserLoggedIn = true;\r\n              this.userLoggedInType = loginData[`loginType`];\r\n              this.activeStage = 3;\r\n       }\r\n\r\n       console.log(this.userLoggedInType);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n        this.onSetValidationHandler();\r\n  }\r\n\r\n  onSetValidationHandler() {\r\n\r\n      this.registerForm1 = this.formBuilder.group({\r\n            mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\r\n      });\r\n\r\n      this.registerForm2 = this.formBuilder.group({\r\n            otpCode: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(4)]],\r\n      });\r\n\r\n      this.registerForm3 = this.formBuilder.group({\r\n            password: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(20)]],\r\n            confirmPassword: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(20)]],\r\n      });\r\n  }\r\n\r\n  onMobileSubmitHandler() {\r\n\r\n        this.isMobileSubmitted = true;\r\n        console.log(this.registerForm1);\r\n\r\n        if (this.registerForm1.invalid) {\r\n\r\n            console.log('Invalid!');\r\n\r\n            this.registerForm1.get('mobile').markAsTouched();\r\n            return false;\r\n\r\n        } else {\r\n\r\n            this.dbService.presentLoader();\r\n\r\n            const inputData = {\r\n               mobileNo: this.data.mobile\r\n            };\r\n\r\n            this.dbService.onPostRequestHandler(inputData, 'login/onValidateMobileExistance').subscribe((result) => {\r\n\r\n                  console.log(result);\r\n                  this.dbService.dismissLoader();\r\n\r\n                  if (result[`status`] == 'error') {\r\n\r\n                        this.dbService.onShowAlertMessage('Error', result[`statusMessage`]);\r\n\r\n                  } else {\r\n\r\n                        this.activeStage = 2;\r\n                        this.storedOTPCode = result[`otpCode`];\r\n                  }\r\n            });\r\n        }\r\n  }\r\n\r\n  onOTPSubmitHandler() {\r\n\r\n        this.isOTPSubmitted = true;\r\n\r\n        if (this.registerForm2.invalid) {\r\n\r\n            this.registerForm2.get('otpCode').markAsTouched();\r\n            return false;\r\n\r\n\r\n        } else {\r\n\r\n            if (this.data.otpCode == this.storedOTPCode) {\r\n\r\n                    this.activeStage = 3;\r\n\r\n            } else {\r\n\r\n                   this.isOTPWrong = true;\r\n            }\r\n\r\n        }\r\n  }\r\n\r\n  async onPasswordSubmitHandler() {\r\n\r\n       this.isPasswordSubmitted = true;\r\n\r\n       if (this.registerForm3.invalid || (this.data.password != this.data.confirmPassword)) {\r\n\r\n            this.registerForm3.get('password').markAsTouched();\r\n            this.registerForm3.get('confirmPassword').markAsTouched();\r\n\r\n            if (this.data.password != this.data.confirmPassword) {\r\n                   this.isPasswordWrong = true;\r\n            }\r\n\r\n            return false;\r\n\r\n       } else {\r\n\r\n\r\n            const alert = await this.alertCtrl.create({\r\n                  header: 'Confirm',\r\n                  message: 'Are You Sure, You Want To Save Password ?',\r\n                  buttons: [\r\n                        {\r\n                          text: 'No',\r\n                          role: 'cancel',\r\n                          handler: () => {\r\n                            console.log('No clicked');\r\n                          }\r\n                        },\r\n                        {\r\n                          text: 'Yes',\r\n                          handler: () => {\r\n\r\n                              this.dbService.presentLoader();\r\n\r\n                              const inputData = {\r\n                                 password: this.data.password\r\n                              };\r\n\r\n                              this.dbService.onPostRequestHandler(inputData, 'login/onUpdateLoginPassword').subscribe((result) => {\r\n\r\n                                    console.log(result);\r\n                                    this.dbService.dismissLoader();\r\n\r\n                                    this.dbService.onShowAlertMessage('Success', 'Password Updated');\r\n\r\n                                    const loginData = JSON.parse(localStorage.getItem('loginData'));\r\n                                    if (loginData && loginData[`loginType`] == 'Technician') {\r\n\r\n                                          this.route.navigateByUrl('/technicians/home');\r\n                                    }\r\n\r\n                                    if (loginData && loginData[`loginType`] == 'Customer') {\r\n\r\n                                        this.route.navigateByUrl('/customer/home');\r\n                                    }\r\n                              });\r\n\r\n                          }\r\n                        }\r\n                    ]\r\n            });\r\n\r\n            await alert.present();\r\n       }\r\n  }\r\n\r\n  onGoToNextStageHandler() {\r\n\r\n        if (!this.data.isShowOTP) {\r\n\r\n              console.log(this.data.mobile);\r\n              console.log(this.data.mobile.length);\r\n\r\n              if (!this.data.mobile || ((this.data.mobile).toString()).length < 10 || ((this.data.mobile).toString()).length > 10) {\r\n\r\n                  return false;\r\n\r\n              } else {\r\n\r\n                   \r\n              }\r\n\r\n        } else if (this.data.isShowOTP && !this.data.isShowPassword) {\r\n\r\n              if (this.storedOTPCode == this.data.otp) {\r\n\r\n\r\n              } else {\r\n\r\n\r\n              }\r\n\r\n              this.data.isShowPassword = true;\r\n        }\r\n  }\r\n\r\n  get f1() { return this.registerForm1.controls; }\r\n  get f2() { return this.registerForm2.controls; }\r\n  get f3() { return this.registerForm3.controls; }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"customer_app-changepassword-changepassword-module-es5.js"}