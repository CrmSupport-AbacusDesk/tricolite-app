{"version":3,"sources":["src/app/customer_app/forgotpassword/forgotpassword.page.html","src/app/customer_app/forgotpassword/forgotpassword-routing.module.ts","src/app/customer_app/forgotpassword/forgotpassword.module.ts","src/app/customer_app/forgotpassword/forgotpassword.page.scss","src/app/customer_app/forgotpassword/forgotpassword.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content>\\r\\n  <div class=\\\"login-container\\\">\\r\\n      <div class=\\\"logo\\\"><img src=\\\"../../assets/img/logo.jpg\\\" alt=\\\"\\\"></div>\\r\\n      \\r\\n      <div class=\\\"form-container\\\">\\r\\n          \\r\\n          <div class=\\\"head\\\">\\r\\n              \\r\\n              <div class=\\\"heading\\\">\\r\\n                  \\r\\n                  <h1>Change Password</h1>\\r\\n                  \\r\\n                  <ion-button fill=\\\"clear\\\" routerLink=\\\"{{isUserLoggedIn ? (userLoggedInType == 'Technician' ? '/technicians/home' : '/customers/home') : '/techlogin'}}\\\" routerDirection=\\\"\\\">\\r\\n                      <i class=\\\"material-icons\\\">arrow_right_alt</i> Back</ion-button>\\r\\n                      \\r\\n                  </div>\\r\\n                  \\r\\n                  <p *ngIf=\\\"activeStage==1\\\">Enter your mobile number, we will send you OTP to verify.</p>\\r\\n                  \\r\\n                  <p *ngIf=\\\"activeStage==2\\\">Enter 4 Digit OTP Code.</p>\\r\\n                  \\r\\n              </div>\\r\\n              \\r\\n              <div class=\\\"input-container\\\">\\r\\n                  \\r\\n                  <div class=\\\"form_x\\\">\\r\\n                      <form *ngIf=\\\"!isUserLoggedIn\\\" [formGroup]=\\\"registerForm1\\\">\\r\\n                          \\r\\n                          <ion-item [ngClass]=\\\"isMobileSubmitted && f1.mobile.errors && f1.mobile.errors.required ? 'has-error' : (f1.mobile.errors && !f1.mobile.errors.required ? 'has-text' : '')\\\" class=\\\"icon\\\">\\r\\n                              \\r\\n                              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\">\\r\\n                                  <g id=\\\"user_icon\\\" transform=\\\"translate(0)\\\">\\r\\n                                      <g id=\\\"Group_1\\\" data-name=\\\"Group 1\\\" transform=\\\"translate(0)\\\">\\r\\n                                          <path id=\\\"Path_1\\\" data-name=\\\"Path 1\\\" d=\\\"M17.071,12.929a9.962,9.962,0,0,0-3.8-2.384,5.781,5.781,0,1,0-6.542,0A10.016,10.016,0,0,0,0,20H1.562a8.437,8.437,0,1,1,16.875,0H20A9.935,9.935,0,0,0,17.071,12.929ZM10,10a4.219,4.219,0,1,1,4.219-4.219A4.224,4.224,0,0,1,10,10Z\\\" transform=\\\"translate(0)\\\" fill=\\\"rgba(0,0,0,0.3)\\\"/>\\r\\n                                      </g>\\r\\n                                  </g>\\r\\n                              </svg>\\r\\n                              \\r\\n                              <ion-label position=\\\"floating\\\">Mobile No.</ion-label>\\r\\n                              <ion-input type=\\\"tel\\\" formControlName=\\\"mobile\\\" [(ngModel)]=\\\"data.mobile\\\" (keypress)=\\\"dbService.numberOnly($event)\\\" [readonly]=\\\"activeStage!=1\\\"></ion-input>\\r\\n                              \\r\\n                              <ion-text *ngIf=\\\"isMobileSubmitted && f1.mobile.errors\\\" class=\\\"cs-error\\\">\\r\\n                                  \\r\\n                                  <span *ngIf=\\\"f1.mobile.errors.minlength\\\">Minimum 10 Digit Required</span>\\r\\n                                  <span *ngIf=\\\"f1.mobile.errors.maxlength\\\">Maximum 10 Digit Required</span>\\r\\n                                  \\r\\n                              </ion-text>\\r\\n                              \\r\\n                              \\r\\n                          </ion-item>\\r\\n                          \\r\\n                          \\r\\n                      </form>\\r\\n                      \\r\\n                      <form *ngIf=\\\"activeStage==2\\\" [formGroup]=\\\"registerForm2\\\">\\r\\n                          \\r\\n                          \\r\\n                          <ion-item [ngClass]=\\\"isOTPSubmitted && f2.otpCode.errors && f2.otpCode.errors.required ? 'has-error' : (f2.otpCode.errors && !f2.otpCode.errors.required ? 'has-text' : '')\\\" class=\\\"icon\\\">\\r\\n                              \\r\\n                              <svg id=\\\"key_icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20.316\\\" viewBox=\\\"0 0 20 20.316\\\">\\r\\n                                  \\r\\n                                  <g id=\\\"Group_4\\\" data-name=\\\"Group 4\\\">\\r\\n                                      \\r\\n                                      <g id=\\\"Group_3\\\" data-name=\\\"Group 3\\\">\\r\\n                                          \\r\\n                                          <path id=\\\"Path_2\\\" data-name=\\\"Path 2\\\" d=\\\"M10.844,20.316a6.871,6.871,0,0,0,6.422-9.3l6.565-6.566a.5.5,0,0,0,.147-.354V.5a.5.5,0,0,0-.5-.5H20.517a.5.5,0,0,0-.354.146l-1,1a.5.5,0,0,0-.147.354V2.722H17.8a.5.5,0,0,0-.5.5v.49H16.8a.5.5,0,0,0-.5.5V5.29H15.227a.5.5,0,0,0-.354.147L13.281,7.028a6.867,6.867,0,1,0-2.437,13.287Zm0-12.732a5.821,5.821,0,0,1,2.355.492.5.5,0,0,0,.55-.1l0,0L15.434,6.29H16.8a.5.5,0,0,0,.5-.5V4.713h.49a.5.5,0,0,0,.5-.5v-.49h1.224a.5.5,0,0,0,.5-.5V1.7l.7-.7h2.253v.707L16.861,7.824a.45.45,0,1,0,.637.637l5.479-5.479v.9L16.323,10.54l0,0a.5.5,0,0,0-.1.55,5.867,5.867,0,1,1-5.374-3.511Z\\\" transform=\\\"translate(-3.978)\\\" fill=\\\"rgba(0,0,0,0.3)\\\"/>\\r\\n                                          \\r\\n                                      </g>\\r\\n                                      \\r\\n                                  </g>\\r\\n                                  \\r\\n                                  <g id=\\\"Group_6\\\" data-name=\\\"Group 6\\\" transform=\\\"translate(2.902 13.665)\\\">\\r\\n                                      <g id=\\\"Group_5\\\" data-name=\\\"Group 5\\\" transform=\\\"translate(0)\\\">\\r\\n                                          <path id=\\\"Path_3\\\" data-name=\\\"Path 3\\\" d=\\\"M342.275,76.893a1.874,1.874,0,1,0-1.874-1.874A1.876,1.876,0,0,0,342.275,76.893Zm0-2.748a.874.874,0,1,1-.874.874A.875.875,0,0,1,342.275,74.145Z\\\" transform=\\\"translate(-340.401 -73.144)\\\" fill=\\\"rgba(0,0,0,0.3)\\\"/>\\r\\n                                      </g>\\r\\n                                  </g>\\r\\n                                  \\r\\n                              </svg>\\r\\n                              \\r\\n                              <ion-label position=\\\"floating\\\">Enter OTP</ion-label>\\r\\n                              \\r\\n                              <ion-input type=\\\"tel\\\" formControlName=\\\"otpCode\\\" [(ngModel)]=\\\"data.otpCode\\\" (ngModelChange)=\\\"isOTPWrong = false\\\" (keypress)=\\\"dbService.numberOnly($event)\\\"></ion-input>\\r\\n                              \\r\\n                              <ion-text *ngIf=\\\"isOTPSubmitted && f2.otpCode.errors\\\" class=\\\"cs-error\\\">\\r\\n                                  \\r\\n                                  <span *ngIf=\\\"f2.otpCode.errors.minlength\\\">OTP Must be 4 Digit!</span>\\r\\n                                  <span *ngIf=\\\"f2.otpCode.errors.maxlength\\\">OTP Must be 4 Digit!</span>\\r\\n                                  \\r\\n                              </ion-text>\\r\\n                              \\r\\n                              <ion-text *ngIf=\\\"isOTPWrong\\\" class=\\\"cs-error\\\">\\r\\n                                  \\r\\n                                  <span>Enter Correct OTP!</span>\\r\\n                                  \\r\\n                              </ion-text>\\r\\n                              \\r\\n                          </ion-item>\\r\\n                          \\r\\n                          \\r\\n                      </form>\\r\\n                      \\r\\n                      \\r\\n                  </div>\\r\\n                  \\r\\n                  <form *ngIf=\\\"activeStage==3\\\" [formGroup]=\\\"registerForm3\\\">\\r\\n                      \\r\\n                      <div class=\\\"common_form\\\">\\r\\n                          \\r\\n                          <ion-item [ngClass]=\\\"isPasswordSubmitted && f3.password.errors && f3.password.errors.required ? 'has-error' : (f3.password.errors && !f3.password.errors.required ? 'has-text' : '')\\\">\\r\\n                              \\r\\n                              <ion-label position=\\\"floating\\\">New Password</ion-label>\\r\\n                              <ion-input formControlName=\\\"password\\\" [(ngModel)]=\\\"data.password\\\" (ngModelChange)=\\\"isPasswordWrong=false\\\"></ion-input>\\r\\n                              \\r\\n                              <ion-text *ngIf=\\\"isPasswordSubmitted && f3.password.errors\\\" class=\\\"cs-error\\\">\\r\\n                                  \\r\\n                                  <span *ngIf=\\\"f3.password.errors.minlength\\\">Password Must be Minimum  5 Letters!</span>\\r\\n                                  \\r\\n                                  <span *ngIf=\\\"f3.password.errors.maxlength\\\">Password Must be Atmost  20 Letters!</span>\\r\\n                                  \\r\\n                              </ion-text>\\r\\n                              \\r\\n                          </ion-item>\\r\\n                          \\r\\n                          \\r\\n                          <ion-item [ngClass]=\\\"isPasswordSubmitted && f3.confirmPassword.errors && f3.confirmPassword.errors.required ? 'has-error' : (f3.confirmPassword.errors && !f3.confirmPassword.errors.required ? 'has-text' : '')\\\">\\r\\n                              \\r\\n                              <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\r\\n                              \\r\\n                              <ion-input formControlName=\\\"confirmPassword\\\" [(ngModel)]=\\\"data.confirmPassword\\\" (ngModelChange)=\\\"isPasswordWrong=false\\\"></ion-input>\\r\\n                              \\r\\n                              <ion-text *ngIf=\\\"isPasswordSubmitted && f3.confirmPassword.errors\\\" class=\\\"cs-error\\\">\\r\\n                                  \\r\\n                                  <span *ngIf=\\\"f3.confirmPassword.errors.minlength\\\">Password Must be Minimum  5 Letters!</span>\\r\\n                                  \\r\\n                                  <span *ngIf=\\\"f3.confirmPassword.errors.maxlength\\\">Password Must be Atmost  20 Letters!</span>\\r\\n                                  \\r\\n                              </ion-text>\\r\\n                              \\r\\n                              <ion-text *ngIf=\\\"isPasswordWrong && !f3.confirmPassword.errors\\\" class=\\\"cs-error\\\">\\r\\n                                  \\r\\n                                  <span>Both Password Do Not Match!</span>\\r\\n                                  \\r\\n                              </ion-text>\\r\\n                              \\r\\n                          </ion-item>\\r\\n                          \\r\\n                      </div>\\r\\n                      \\r\\n                  </form>\\r\\n                  \\r\\n                  <div class=\\\"cs-btn mt50\\\">\\r\\n                      \\r\\n                      <ion-button (click)=\\\"onMobileSubmitHandler()\\\" *ngIf=\\\"activeStage==1\\\" class=\\\"success large\\\" shape=\\\"round\\\" expand=\\\"full\\\">CONTINUE</ion-button>\\r\\n                      \\r\\n                      <ion-button  (click)=\\\"onOTPSubmitHandler()\\\" *ngIf=\\\"activeStage==2\\\" class=\\\"success large\\\" shape=\\\"round\\\" expand=\\\"full\\\">CONTINUE</ion-button>\\r\\n                      \\r\\n                      <ion-button  (click)=\\\"onPasswordSubmitHandler()\\\" *ngIf=\\\"activeStage==3\\\" class=\\\"success large\\\" shape=\\\"round\\\"  expand=\\\"full\\\">UPDATE PASSWORD</ion-button>\\r\\n                      \\r\\n                  </div>\\r\\n                  \\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      \\r\\n  </ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ForgotpasswordPage } from './forgotpassword.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotpasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ForgotpasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ForgotpasswordPageRoutingModule } from './forgotpassword-routing.module';\r\n\r\nimport { ForgotpasswordPage } from './forgotpassword.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ForgotpasswordPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [ForgotpasswordPage]\r\n})\r\nexport class ForgotpasswordPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9mb3Jnb3RwYXNzd29yZC9mb3Jnb3RwYXNzd29yZC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { FormBuilder, FormGroup, Validators,  } from '@angular/forms';\r\nimport { LoadingController, AlertController, ModalController } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\n\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-forgotpassword',\r\n  templateUrl: './forgotpassword.page.html',\r\n  styleUrls: ['./forgotpassword.page.scss'],\r\n})\r\nexport class ForgotpasswordPage implements OnInit {\r\n\r\n  data: any = {};\r\n  loginData: any = {};\r\n\r\n  storedOTPCode: any = '';\r\n  isOTPWrong: any = false;\r\n  isPasswordWrong: any = false;\r\n\r\n\r\n  activeStage: any = 1;\r\n  isMobileSubmitted: any = false;\r\n  isOTPSubmitted: any = false;\r\n  isPasswordSubmitted: any = false;\r\n\r\n  isUserLoggedIn: any = false;\r\n  userLoggedInType: any = '';\r\n\r\n  registerForm1: FormGroup;\r\n  registerForm2: FormGroup;\r\n  registerForm3: FormGroup;\r\n\r\n  constructor(private route: Router,\r\n              public routeParams: ActivatedRoute,\r\n              private formBuilder: FormBuilder,\r\n              public alertCtrl: AlertController,\r\n              public modalController: ModalController,\r\n              public dbService: DbServiceService) {\r\n\r\n       const loginData = JSON.parse(localStorage.getItem('loginData'));\r\n\r\n       if (loginData && loginData[`loginId`]) {\r\n\r\n              this.isUserLoggedIn = true;\r\n              this.userLoggedInType = loginData[`loginType`];\r\n              this.activeStage = 3;\r\n       }\r\n\r\n       console.log(this.userLoggedInType);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n        this.onSetValidationHandler();\r\n  }\r\n\r\n  onSetValidationHandler() {\r\n\r\n      this.registerForm1 = this.formBuilder.group({\r\n            mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\r\n      });\r\n\r\n      this.registerForm2 = this.formBuilder.group({\r\n            otpCode: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(4)]],\r\n      });\r\n\r\n      this.registerForm3 = this.formBuilder.group({\r\n            password: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(20)]],\r\n            confirmPassword: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(20)]],\r\n      });\r\n  }\r\n\r\n  onMobileSubmitHandler() {\r\n\r\n        this.isMobileSubmitted = true;\r\n        console.log(this.registerForm1);\r\n\r\n        if (this.registerForm1.invalid) {\r\n\r\n            console.log('Invalid!');\r\n\r\n            this.registerForm1.get('mobile').markAsTouched();\r\n            return false;\r\n\r\n        } else {\r\n\r\n            this.dbService.presentLoader();\r\n\r\n            const inputData = {\r\n               mobileNo: this.data.mobile\r\n            };\r\n\r\n            this.dbService.onPostRequestHandler(inputData, 'login/onValidateMobileExistance').subscribe((result) => {\r\n\r\n                  console.log(result);\r\n                  this.dbService.dismissLoader();\r\n\r\n                  if (result[`status`] == 'error') {\r\n\r\n                        this.dbService.onShowAlertMessage('Error', result[`statusMessage`]);\r\n\r\n                  } else {\r\n\r\n                        this.activeStage = 2;\r\n                        this.storedOTPCode = result[`otpCode`];\r\n                  }\r\n            });\r\n        }\r\n  }\r\n\r\n  onOTPSubmitHandler() {\r\n\r\n        this.isOTPSubmitted = true;\r\n\r\n        if (this.registerForm2.invalid) {\r\n\r\n            this.registerForm2.get('otpCode').markAsTouched();\r\n            return false;\r\n\r\n\r\n        } else {\r\n\r\n            if (this.data.otpCode == this.storedOTPCode) {\r\n\r\n                    this.activeStage = 3;\r\n\r\n            } else {\r\n\r\n                   this.isOTPWrong = true;\r\n            }\r\n\r\n        }\r\n  }\r\n\r\n  async onPasswordSubmitHandler() {\r\n\r\n       this.isPasswordSubmitted = true;\r\n\r\n       if (this.registerForm3.invalid || (this.data.password != this.data.confirmPassword)) {\r\n\r\n            this.registerForm3.get('password').markAsTouched();\r\n            this.registerForm3.get('confirmPassword').markAsTouched();\r\n\r\n            if (this.data.password != this.data.confirmPassword) {\r\n                   this.isPasswordWrong = true;\r\n            }\r\n\r\n            return false;\r\n\r\n       } else {\r\n\r\n\r\n            const alert = await this.alertCtrl.create({\r\n                  header: 'Confirm',\r\n                  message: 'Are You Sure, You Want To Save Password ?',\r\n                  buttons: [\r\n                        {\r\n                          text: 'No',\r\n                          role: 'cancel',\r\n                          handler: () => {\r\n                            console.log('No clicked');\r\n                          }\r\n                        },\r\n                        {\r\n                          text: 'Yes',\r\n                          handler: () => {\r\n\r\n                              this.dbService.presentLoader();\r\n\r\n                              const inputData = {\r\n                                 password: this.data.password\r\n                              };\r\n\r\n                              this.dbService.onPostRequestHandler(inputData, 'login/onUpdateLoginPassword').subscribe((result) => {\r\n\r\n                                    console.log(result);\r\n                                    this.dbService.dismissLoader();\r\n\r\n                                    this.dbService.onShowAlertMessage('Success', 'Password Updated');\r\n\r\n                                    const loginData = JSON.parse(localStorage.getItem('loginData'));\r\n                                    if (loginData && loginData[`loginType`] == 'Technician') {\r\n\r\n                                          this.route.navigateByUrl('/technicians/home');\r\n                                    }\r\n                              });\r\n\r\n                          }\r\n                        }\r\n                    ]\r\n            });\r\n\r\n            await alert.present();\r\n       }\r\n  }\r\n\r\n  onGoToNextStageHandler() {\r\n\r\n        if (!this.data.isShowOTP) {\r\n\r\n              console.log(this.data.mobile);\r\n              console.log(this.data.mobile.length);\r\n\r\n              if (!this.data.mobile || ((this.data.mobile).toString()).length < 10 || ((this.data.mobile).toString()).length > 10) {\r\n\r\n                  return false;\r\n\r\n              } else {\r\n\r\n                   \r\n              }\r\n\r\n        } else if (this.data.isShowOTP && !this.data.isShowPassword) {\r\n\r\n              if (this.storedOTPCode == this.data.otp) {\r\n\r\n\r\n              } else {\r\n\r\n\r\n              }\r\n\r\n              this.data.isShowPassword = true;\r\n        }\r\n  }\r\n\r\n  get f1() { return this.registerForm1.controls; }\r\n  get f2() { return this.registerForm2.controls; }\r\n  get f3() { return this.registerForm3.controls; }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"customer_app-forgotpassword-forgotpassword-module-es5.js"}