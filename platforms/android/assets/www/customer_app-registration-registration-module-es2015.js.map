{"version":3,"sources":["./src/app/customer_app/registration/registration.page.html","./src/app/customer_app/registration/registration-routing.module.ts","./src/app/customer_app/registration/registration.module.ts","./src/app/customer_app/registration/registration.page.scss","./src/app/customer_app/registration/registration.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,61f;;;;;;;;;;;;;;;;;;;ACA0B;AACc;AAEA;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC;AAMF,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;CAAG;AAAhC,6BAA6B;IAJzC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,6BAA6B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBD;AACM;AACmB;AAErB;AAEiC;AAEvB;AACE;AAczD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;CAAG;AAAzB,sBAAsB;IAXlC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,0DAAW;YACX,sEAAqB;YACrB,0FAA6B;SAC9B;QACD,YAAY,EAAE,CAAC,mEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;ACvBnC;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;;;;;ACAA;AAEJ;AACW;AACiB;AACvB;AAS9D,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAqB3B,YAAoB,KAAa,EACd,WAA2B,EAC1B,WAAwB,EACzB,SAA0B,EAC1B,eAAgC,EAChC,SAA2B;QAL1B,UAAK,GAAL,KAAK,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAgB;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACzB,cAAS,GAAT,SAAS,CAAiB;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAkB;QAvB9C,gBAAW,GAAQ,CAAC,CAAC;QAErB,cAAS,GAAQ,EAAE,CAAC;QACpB,iBAAY,GAAQ,EAAE,CAAC;QAEvB,gBAAW,GAAQ,EAAE,CAAC;QAEtB,SAAI,GAAQ,EAAE,CAAC;QAEf,cAAS,GAAQ,KAAK,CAAC;QACvB,YAAO,GAAS,EAAE,CAAC;QAEnB,0BAAqB,GAAQ,CAAC,CAAC;QAarB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAExC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACjE,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACjE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7F,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEtC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3F,CAAC,CAAC;QAGH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAExC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACtE,WAAW,EAAE,CAAC,EAAE,EAAE,CAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACvE,YAAY,EAAE,CAAC,EAAE,EAAE,CAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACvC,aAAa,EAAE,CAAC,EAAE,EAAE,CAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7E,CAAC,CAAC;IACb,CAAC;IAGC,QAAQ;QAEJ,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjC,CAAC;IAGK,yBAAyB;;YAE3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI,mBAAmB,GAAG,KAAK,CAAC;YAEhC,IAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE;gBAE1D,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;aAC7B;YAED,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;gBACrG,mBAAmB,GAAG,IAAI,CAAC;aAC9B;YAED,IAAG,mBAAmB,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;gBAEhI,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,OAAO,EAAE,gCAAgC,CAAC,CAAC;gBAC7E,OAAO;aACX;YAED,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;gBAExF,OAAO;aAEV;iBAAM;gBAEH,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAErB,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;oBAEnG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;oBAEtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBAClB,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;wBAClC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;wBAClC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY;wBACpC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;qBACzC,CAAC,CAAC;oBAEH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBAC5B;gBAED,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE;oBAE7B,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;oBAChE,OAAO;iBACX;gBAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEvB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACxC,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,sCAAsC;oBAC/C,OAAO,EAAE;wBACH;4BACE,IAAI,EAAE,IAAI;4BACV,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE,GAAG,EAAE;gCACZ,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;4BAC5B,CAAC;yBACF;wBACD;4BACE,IAAI,EAAE,KAAK;4BACX,OAAO,EAAE,GAAG,EAAE;gCAEV,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gCAE3B,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gCAExD,SAAS,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC;gCAC1D,SAAS,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;gCACnE,SAAS,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;gCAE5C,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;gCAE/B,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,EAAE,iCAAiC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;oCAEjG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oCAEpB,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;oCAE/B,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,OAAO,EAAE;wCAE7B,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;qCAEvE;yCAAM;wCAEH,MAAM,SAAS,GAAG;4CACd,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC;4CAC3C,OAAO,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;4CACvC,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC;4CAC3C,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC;yCAClD,CAAC;wCAGF,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;wCAE7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wCAE3D,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,SAAS,EAAE,sDAAsD,CAAC,CAAC;wCAErG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;qCAE3C;gCACP,CAAC,CAAC,CAAC;4BACP,CAAC;yBACF;qBACJ;iBACJ,CAAC,CAAC;gBAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;aAEzB;QACL,CAAC;KAAA;IAGK,qBAAqB;;YAEvB,MAAM,SAAS,GAAG,EAAE,CAAC;YAErB,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;gBAEnF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;YAE3C,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IAEK,wBAAwB;;YAE1B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAI,EAAE,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YAEvB,MAAM,SAAS,GAAG;gBACd,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAC3C,CAAC;YAEF,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;YAE/B,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,EAAE,sBAAsB,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;gBAEtF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;gBAC3C,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;YAErC,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IAIK,kBAAkB,CAAC,KAAK;;YAE1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAEhC,IAAI,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE;gBAEzC,IAAI,KAAK,IAAI,CAAC,EAAE;oBAEZ,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;oBACrE,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;oBAC/D,mEAAmE;oBACnE,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,aAAa,EAAE,CAAC;iBAGvE;qBAAM,IAAI,KAAK,IAAI,CAAC,EAAE;oBAEnB,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,CAAC;oBAChE,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;oBAC/D,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,aAAa,EAAE,CAAC;oBAClE,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;oBAC9D,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,CAAC;iBAGpE;qBAAM,IAAI,KAAK,IAAI,CAAC,EAAE;oBAEnB,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;oBACrE,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;oBACrE,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,aAAa,EAAE,CAAC;oBACtE,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,CAAC;iBAC1E;gBAED,OAAO;aAEZ;iBAAM;gBAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAGvB,+BAA+B;gBAEzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;oBAExG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,OAAO,EAAE,+BAA+B,CAAC,CAAC;oBAC5E,OAAO,KAAK,CAAC;iBACjB;gBAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;oBAElB,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;oBAClC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;oBAClC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY;oBACpC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;iBACzC,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBAE5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBAE7B,WAAW;gBAEX,4BAA4B;gBAC5B,6BAA6B;gBAC7B,IAAI;aACT;QACL,CAAC;KAAA;IAEK,sBAAsB,CAAC,KAAK;;YAEhC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACxC,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,4CAA4C;gBACrD,OAAO,EAAE;oBACH;wBACE,IAAI,EAAE,IAAI;wBACV,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE,GAAG,EAAE;4BACZ,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;wBAC5B,CAAC;qBACF;oBACD;wBACE,IAAI,EAAE,KAAK;wBACX,OAAO,EAAE,GAAG,EAAE;4BAET,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;4BAE3B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;4BAClC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,+BAA+B,CAAC,CAAC;wBAClE,CAAC;qBACF;iBACJ;aACJ,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QAExB,CAAC;KAAA;IAGK,kBAAkB,CAAC,KAAK;;YACxB,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,CAAC,CAAC;QACnC,CAAC;KAAA;IAED,IAAI,EAAE,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChD,IAAI,EAAE,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChD,IAAI,EAAE,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;CAEnD;;YAjT4B,sDAAM;YACD,8DAAc;YACb,0DAAW;YACd,8DAAe;YACT,8DAAe;YACrB,2EAAgB;;AA1BnC,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,2OAAuC;;KAExC,CAAC;2EAsB2B,sDAAM;QACD,8DAAc;QACb,0DAAW;QACd,8DAAe;QACT,8DAAe;QACrB,2EAAgB;GA1BnC,gBAAgB,CAsU5B;AAtU4B","file":"customer_app-registration-registration-module-es2015.js","sourcesContent":["export default \"<ion-content>\\n    <div class=\\\"login-container\\\">\\n        <div class=\\\"logo\\\"><img src=\\\"../../assets/img/logo.jpg\\\" alt=\\\"\\\"></div>\\n        \\n        <div class=\\\"form-container\\\">\\n            \\n            <div class=\\\"head\\\">\\n                <div class=\\\"heading\\\">\\n                    <h1>Sign Up</h1>\\n                    <ion-button fill=\\\"clear\\\" routerLink=\\\"/customerlogin\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i> Back To Login</ion-button>\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"input-container mt10\\\">\\n                <div class=\\\"custome-filter dlform\\\">\\n                    <div class=\\\"fiter-data\\\">\\n                        <div class=\\\"cs-right\\\">\\n                            <div class=\\\"heading\\\">\\n                                <h2>Basic Info</h2>\\n                            </div>\\n                            <div  class=\\\"basic_info mb16\\\">\\n                                <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"onNextStageHandler(1)\\\">\\n                                    <div class=\\\"common_form inner_page\\\">\\n                                        <ion-item [ngClass]=\\\"submitted && f1.companyName.errors && f1.companyName.errors.required ? 'has-error' : (f1.companyName.errors && !f1.companyName.errors.required ? 'has-text' : '')\\\">\\n                                            <ion-label position=\\\"floating\\\">Company Name</ion-label>\\n                                            <ion-input formControlName=\\\"companyName\\\" [(ngModel)]=\\\"data.companyName\\\" autocomplete=\\\"nope\\\"></ion-input>\\n\\n                                            <ion-text *ngIf=\\\"submitted && f1.companyName.errors\\\" class=\\\"cs-error\\\">\\n    \\n                                                <span *ngIf=\\\"f1.companyName.errors.minlength\\\">Minimum 5 Letter Required</span>\\n                \\n                                            </ion-text>                                \\n\\n                                        </ion-item>\\n\\n\\n                                        <ion-item [ngClass]=\\\"submitted && f1.email.errors && f1.email.errors.required ? 'has-error' : (f1.email.errors && !f1.email.errors.required ? 'has-text' : '')\\\">\\n                                            <ion-label position=\\\"floating\\\">Email ID</ion-label>\\n                                            <ion-input formControlName=\\\"email\\\" [(ngModel)]=\\\"data.email\\\" autocomplete=\\\"nope\\\"></ion-input>\\n\\n                                            <ion-text *ngIf=\\\"submitted && f1.email.errors\\\" class=\\\"cs-error\\\">\\n    \\n                                                    <span *ngIf=\\\"!f1.email.errors.required\\\">Email Invalid</span>\\n                    \\n                                            </ion-text>\\n\\n                                        </ion-item>\\n\\n                                        <ion-item [ngClass]=\\\"submitted && f1.landlineNo.errors && f1.landlineNo.errors.required ? 'has-error' : (f1.landlineNo.errors && !f1.landlineNo.errors.required ? 'has-text' : '')\\\">\\n                                            <ion-label position=\\\"floating\\\">Landline No.</ion-label>\\n                                            <ion-input type=\\\"tel\\\" formControlName=\\\"landlineNo\\\" [(ngModel)]=\\\"data.landlineNo\\\"   minlength = \\\"6\\\" maxlength=\\\"13\\\" (keypress)=\\\"dbService.numberOnly($event)\\\" autocomplete=\\\"nope\\\"></ion-input>\\n\\n                                            <ion-text *ngIf=\\\"submitted && f1.landlineNo.errors\\\" class=\\\"cs-error\\\">\\n    \\n                                                <span *ngIf=\\\"f1.landlineNo.errors.minlength\\\">Minimum 5 Digit Required</span>\\n    \\n                                                <span *ngIf=\\\"f1.landlineNo.errors.maxlength\\\">Maximum 30 Digit Required</span>\\n                    \\n                                            </ion-text>\\n\\n                                        </ion-item>\\n\\n\\n                                        <ion-item [ngClass]=\\\"submitted && f1.username.errors && f1.username.errors.required ? 'has-error' : (f1.username.errors && !f1.username.errors.required ? 'has-text' : '')\\\">\\n                                            <ion-label position=\\\"floating\\\">Username</ion-label>\\n                                            <ion-input type=\\\"text\\\" formControlName=\\\"username\\\" [(ngModel)]=\\\"data.username\\\" autocomplete=\\\"nope\\\"></ion-input>\\n                                        </ion-item>\\n\\n                                        <ion-item [ngClass]=\\\"submitted && f1.password.errors && f1.password.errors.required ? 'has-error' : (f1.password.errors && !f1.password.errors.required ? 'has-text' : '')\\\">\\n                                            <ion-label position=\\\"floating\\\">Password</ion-label>\\n                                            <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" [(ngModel)]=\\\"data.password\\\" autocomplete=\\\"nope\\\"></ion-input>\\n                                        </ion-item>\\n\\n                                        <div class=\\\"heading\\\">\\n                                            <h2>Project Info</h2>\\n                                        </div>\\n\\n                                        <ion-item [ngClass]=\\\"submitted && f1.projectName.errors && f1.projectName.errors.required ? 'has-error' : (f1.projectName.errors && !f1.projectName.errors.required ? 'has-text' : '')\\\">\\n                                            <ion-label position=\\\"floating\\\">Project Name</ion-label>\\n                                            <ion-input formControlName=\\\"projectName\\\" [(ngModel)]=\\\"data.projectName\\\" autocomplete=\\\"nope\\\"></ion-input>\\n\\n                                            <ion-text *ngIf=\\\"submitted && f1.projectName.errors\\\" class=\\\"cs-error\\\">\\n    \\n                                                <span *ngIf=\\\"f1.projectName.errors.minlength\\\">Minimum 5 Letter Required</span>\\n                \\n                                            </ion-text>\\n\\n                                        </ion-item>\\n\\n\\n                                    </div>\\n\\n                                </form>\\n\\n                            </div>\\n\\n                            <div class=\\\"heading\\\">\\n                                <h2>Address Info</h2>\\n                            </div>\\n                            <div  class=\\\"address mb16\\\">\\n                             <form [formGroup]=\\\"registerForm2\\\" (ngSubmit)=\\\"onNextStageHandler(2)\\\">\\n\\n                                <div class=\\\"common_form inner_page\\\">\\n                                    <ion-item [ngClass]=\\\"submitted && f2.street.errors && f2.street.errors.required ? 'has-error' : (f2.street.errors && !f2.street.errors.required ? 'has-text' : '')\\\" class=\\\"h70\\\">\\n                                        <ion-textarea formControlName=\\\"street\\\" [(ngModel)]=\\\"data.street\\\" placeholder=\\\"Address\\\"></ion-textarea>\\n                                      \\n                                        <ion-text *ngIf=\\\"submitted && f2.street.errors\\\" class=\\\"cs-error\\\">\\n                                                <span *ngIf=\\\"f2.street.errors.minlength\\\">Minimum 5 Letter Required</span>\\n                                        </ion-text>\\n                                    </ion-item>\\n\\n                                    \\n                                    <ion-item [ngClass]=\\\"submitted && f2.state.errors && f2.state.errors.required ? 'has-error' : (f2.state.errors && !f2.state.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\n\\n                                        <ion-label>State</ion-label>\\n\\n                                        <ionic-selectable\\n                                        [(ngModel)]=\\\"data.state\\\"\\n                                        [items]=\\\"stateList\\\"\\n                                        itemValueField=\\\"state_name\\\"\\n                                        itemTextField=\\\"state_name\\\"\\n                                        formControlName=\\\"state\\\"\\n                                        [canSearch]=\\\"true\\\"\\n                                        (onChange)=\\\"onGetDistrictListHandler($event)\\\">\\n\\n                                        </ionic-selectable>\\n\\n                                    </ion-item>\\n\\n                                    \\n                                    <ion-item [ngClass]=\\\"submitted && f2.district.errors && f2.district.errors.required ? 'has-error' : (f2.district.errors && !f2.district.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\n                                        <ion-label>District</ion-label>\\n\\n                                        <ionic-selectable\\n                                        [(ngModel)]=\\\"data.district\\\"\\n                                        [items]=\\\"districtList\\\"\\n                                        itemValueField=\\\"district_name\\\"\\n                                        itemTextField=\\\"district_name\\\"\\n                                        formControlName=\\\"district\\\"\\n                                        [canSearch]=\\\"true\\\">\\n\\n                                        </ionic-selectable>\\n                                    </ion-item>\\n                                    \\n                                    <ion-item [ngClass]=\\\"submitted && f2.city.errors && f2.city.errors.required ? 'has-error' : (f2.city.errors && !f2.city.errors.required ? 'has-text' : '')\\\">\\n                                        <ion-label position=\\\"floating\\\">City</ion-label>\\n                                        <ion-input formControlName=\\\"city\\\" [(ngModel)]=\\\"data.city\\\"></ion-input>\\n\\n                                        <ion-text *ngIf=\\\"submitted && f2.city.errors\\\" class=\\\"cs-error\\\">\\n    \\n                                                <span *ngIf=\\\"f2.city.errors.minlength\\\">Minimum 4 Letter Required</span>\\n                \\n                                        </ion-text>\\n\\n                                    </ion-item>\\n\\n\\n                                    <ion-item [ngClass]=\\\"submitted && f2.pincode.errors && f2.pincode.errors.required ? 'has-error' : (f2.pincode.errors && !f2.pincode.errors.required ? 'has-text' : '')\\\">\\n                                        <ion-label position=\\\"floating\\\">Pin Code</ion-label>\\n                                        <ion-input type=\\\"tel\\\" formControlName=\\\"pincode\\\" [(ngModel)]=\\\"data.pincode\\\"  minlength =\\\"6 \\\"maxlength=\\\"6\\\" (keypress)=\\\"dbService.numberOnly($event)\\\"></ion-input>\\n\\n                                        <ion-text *ngIf=\\\"submitted && f2.pincode.errors\\\" class=\\\"cs-error\\\">\\n    \\n                                                <span *ngIf=\\\"f2.pincode.errors.minlength || f2.pincode.errors.maxlength\\\">Pincode Must Be 6 Digit!</span>\\n                \\n                                        </ion-text>\\n\\n                                    </ion-item>\\n\\n\\n                                </div>\\n                              </form>\\n\\n                            </div>\\n                            \\n\\n                            <div class=\\\"heading\\\">\\n                                <h2>Contact Person Info</h2>\\n                            </div>\\n                            <div class=\\\"contact_person\\\">\\n                            <form [formGroup]=\\\"registerForm3\\\" (ngSubmit)=\\\"onNextStageHandler(3)\\\">\\n                        \\n                                <div class=\\\"common_form inner_page\\\">\\n\\n                                    <ion-item [ngClass]=\\\"submitted && f3.contactName.errors && f3.contactName.errors.required ? 'has-error' : (f3.contactName.errors && !f3.contactName.errors.required ? 'has-text' : '')\\\">\\n                                        <ion-label position=\\\"floating\\\">Name</ion-label>\\n                                        <ion-input formControlName=\\\"contactName\\\" [(ngModel)]=\\\"data.contactName\\\" autocomplete=\\\"nope\\\"></ion-input>\\n\\n                                        <ion-text *ngIf=\\\"submitted && f3.contactName.errors\\\" class=\\\"cs-error\\\">\\n    \\n                                                <span *ngIf=\\\"f3.contactName.errors.minlength\\\">Minimum 3 Letter Required</span>\\n    \\n                                                <span *ngIf=\\\"f3.contactName.errors.maxlength\\\">Maximum 50 Letter Allowed</span>\\n                \\n                                        </ion-text>\\n\\n                                    </ion-item>\\n\\n\\n                                    <ion-item [ngClass]=\\\"submitted && f3.designation.errors && f3.designation.errors.required ? 'has-error' : (f3.designation.errors && !f3.designation.errors.required ? 'has-text' : '')\\\">\\n                                        <ion-label position=\\\"floating\\\">Designation</ion-label>\\n                                        <ion-input formControlName=\\\"designation\\\" [(ngModel)]=\\\"data.designation\\\" autocomplete=\\\"nope\\\"></ion-input>\\n                                            <ion-text *ngIf=\\\"submitted && f3.designation.errors\\\" class=\\\"cs-error\\\">\\n        \\n                                                    <span *ngIf=\\\"f3.designation.errors.minlength\\\">Minimum 3 Letter Required</span>\\n        \\n                                                    <span *ngIf=\\\"f3.designation.errors.maxlength\\\">Maximum 50 Letter Allowed</span>\\n                    \\n                                            </ion-text>\\n                                    </ion-item>\\n\\n\\n                                    <ion-item [ngClass]=\\\"submitted && f3.contactEmail.errors && f3.contactEmail.errors.required ? 'has-error' : (f3.contactEmail.errors && !f3.contactEmail.errors.required ? 'has-text' : '')\\\">\\n                                        <ion-label position=\\\"floating\\\">Email ID</ion-label>\\n                                        <ion-input formControlName=\\\"contactEmail\\\" [(ngModel)]=\\\"data.contactEmail\\\" autocomplete=\\\"nope\\\"></ion-input>\\n                                        <ion-text *ngIf=\\\"submitted && f3.contactEmail.errors\\\" class=\\\"cs-error\\\">\\n    \\n                                                <span *ngIf=\\\"!f3.contactEmail.errors.required\\\">Email Invalid!</span>\\n                \\n                                        </ion-text>\\n                                    </ion-item>\\n\\n\\n                                    <ion-item [ngClass]=\\\"submitted && f3.contactMobile.errors && f3.contactMobile.errors.required ? 'has-error' : (f3.contactMobile.errors && !f3.contactMobile.errors.required ? 'has-text' : '')\\\">\\n                                        <ion-label position=\\\"floating\\\">Mobile No.</ion-label>\\n                                        <ion-input type=\\\"tel\\\" formControlName=\\\"contactMobile\\\" [(ngModel)]=\\\"data.contactMobile\\\" minlength = 10 maxlength=\\\"10\\\" (keypress)=\\\"dbService.numberOnly($event)\\\" autocomplete=\\\"nope\\\"></ion-input>\\n                                  \\n                                        <ion-text *ngIf=\\\"submitted && f3.contactMobile.errors\\\" class=\\\"cs-error\\\">\\n    \\n                                                <span *ngIf=\\\"f3.contactMobile.errors.minlength\\\">Mobile must be 10 digit!</span>\\n    \\n                                                <span *ngIf=\\\"f3.contactMobile.errors.maxlength\\\">Mobile Must be 10 Digit</span>\\n                \\n                                        </ion-text>\\n                                    </ion-item>\\n\\n\\n                                </div>\\n                            </form>\\n                            \\n                                <div class=\\\"cs-btn mt16 lr\\\">\\n                                    <ion-button (click)=\\\"onSaveRegistrationHandler()\\\" class=\\\"success min w100\\\">SAVE</ion-button>\\n                                </div>\\n                                \\n                            </div>\\n                            \\n                        </div>\\n                    </div>\\n                    \\n                </div>\\n                \\n            </div>\\n        </div>\\n\\n    </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistrationPage } from './registration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistrationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistrationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistrationPageRoutingModule } from './registration-routing.module';\n\nimport { RegistrationPage } from './registration.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    IonicSelectableModule,\n    RegistrationPageRoutingModule\n  ],\n  declarations: [RegistrationPage]\n})\nexport class RegistrationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9yZWdpc3RyYXRpb24vcmVnaXN0cmF0aW9uLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoadingController, AlertController, ModalController } from '@ionic/angular';\nimport { DbServiceService } from 'src/app/db-service.service';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.page.html',\n  styleUrls: ['./registration.page.scss'],\n})\nexport class RegistrationPage implements OnInit {\n\n\n  activeStage: any = 1;\n\n  stateList: any = [];\n  districtList: any = [];\n\n  contactData: any = [];\n\n  data: any = {};\n\n  submitted: any = false;\n  minDate: any  = '';\n\n  currentActiveCheckTab: any = 0;\n\n  registerForm1: FormGroup;\n  registerForm2: FormGroup;\n  registerForm3: FormGroup;\n\n  constructor(private route: Router,\n              public routeParams: ActivatedRoute,\n              private formBuilder: FormBuilder,\n              public alertCtrl: AlertController,\n              public modalController: ModalController,\n              public dbService: DbServiceService) {\n\n            this.registerForm1 = this.formBuilder.group({\n\n                companyName: ['', [Validators.required, Validators.minLength(5)]],\n                projectName: ['', [Validators.required, Validators.minLength(5)]],\n                email: ['', [Validators.required, Validators.email]],\n                username: ['', [Validators.required, Validators.minLength(5)]],                \n                password: ['', [Validators.required, Validators.minLength(5)]],\n                landlineNo: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(30)]],\n            });\n\n            this.registerForm2 = this.formBuilder.group({\n\n                  street: ['', [Validators.minLength(5)]],\n                  state: ['', [Validators.required]],\n                  district: ['', [Validators.required]],\n                  city: ['', [Validators.required, Validators.minLength(4)]],\n                  pincode: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]]\n            });\n\n\n            this.registerForm3 = this.formBuilder.group({\n\n                contactName: ['', [Validators.minLength(3), Validators.maxLength(50)]],\n                designation: ['', [ Validators.minLength(3), Validators.maxLength(50)]],\n                contactEmail: ['', [ Validators.email]],\n                contactMobile: ['', [ Validators.minLength(10), Validators.maxLength(10)]],\n            });\n  }\n\n\n    ngOnInit() {\n\n        this.onGetStateListHandler();\n    }\n\n\n    async onSaveRegistrationHandler() {\n\n        console.log(this.data);\n\n        this.submitted = true;\n\n        let isContactDataFilled = false;\n\n        if(!this.data.district || !this.data.district['district_name']) {\n\n              this.data.district = '';\n        }\n\n        if (this.data.contactName || this.data.designation || this.data.contactEmail || this.data.contactMobile) {\n            isContactDataFilled = true;\n        }\n\n        if(isContactDataFilled && (!this.data.contactName || !this.data.designation || !this.data.contactEmail || !this.data.contactMobile)) {\n\n             this.dbService.onShowAlertMessage('Error', 'Fill Contact Complete Details!');\n             return;\n        }\n\n        if (this.registerForm1.invalid || this.registerForm2.invalid || this.registerForm3.invalid) {\n\n            return;\n\n        } else {\n\n            console.log('hello');\n\n            if (this.data.contactName && this.data.contactEmail && this.data.designation && this.data.contactMobile) {\n\n                  this.contactData = [];\n\n                  this.contactData.push({\n                      contactName: this.data.contactName,\n                      designation: this.data.designation,\n                      contactEmail: this.data.contactEmail,\n                      contactMobile: this.data.contactMobile\n                  });\n\n                  this.submitted = false;\n            }\n\n            if (this.contactData.length == 0) {\n\n                 this.dbService.onShowAlertMessage('Error', 'No Contact Added!');\n                 return;\n            }\n\n            console.log(this.data);\n\n            const alert = await this.alertCtrl.create({\n              header: 'Confirm',\n              message: 'Are You Sure, You Want To Register ?',\n              buttons: [\n                    {\n                      text: 'No',\n                      role: 'cancel',\n                      handler: () => {\n                        console.log('No clicked');\n                      }\n                    },\n                    {\n                      text: 'Yes',\n                      handler: () => {\n\n                          console.log('Yes clicked');\n\n                          const inputData = JSON.parse(JSON.stringify(this.data));\n\n                          inputData[`stateName`] = inputData[`state`][`state_name`];\n                          inputData[`districtName`] = inputData[`district`][`district_name`];\n                          inputData[`contactData`] = this.contactData;\n\n                          this.dbService.presentLoader();\n\n                          this.dbService.onPostRequestHandler(inputData, 'login/onRegisterCustomerAccount').subscribe((result) => {\n\n                                console.log(result);\n\n                                this.dbService.dismissLoader();\n\n                                if (result[`status`] == 'error') {\n\n                                    this.dbService.onShowAlertMessage('Error', result[`statusMessage`]);\n\n                                } else {\n              \n                                    const loginData = {\n                                        loginType: result[`loginData`][`loginType`],\n                                        loginId: result[`loginData`][`loginId`],\n                                        loginName: result[`loginData`][`loginName`],\n                                        loginStatus: result[`loginData`][`loginStatus`]\n                                    };\n                                    \n              \n                                    localStorage.setItem('loginData', JSON.stringify(loginData));\n              \n                                    console.log(JSON.parse(localStorage.getItem('loginData')));\n                                    \n                                    this.dbService.onShowAlertMessage('Success', 'Login Request sent, wait till Verification complete.');\n\n                                    this.route.navigate(['/customerlogin']);\n                                    \n                                }\n                          });\n                      }\n                    }\n                ]\n            });\n\n            await alert.present();\n\n        }\n    }\n\n\n    async onGetStateListHandler() {\n\n        const inputData = {};\n\n        this.dbService.onPostRequestHandler(inputData, 'task/getStateList').subscribe((result) => {\n\n              console.log(result);\n              this.stateList = result[`stateList`];\n\n        });\n    }\n\n    async onGetDistrictListHandler() {\n\n        this.data.district =  '';\n        this.districtList = [];\n\n        const inputData = {\n            stateName: this.data.state[`state_name`]\n        };\n\n        this.dbService.presentLoader();\n\n        this.dbService.onPostRequestHandler(inputData, 'task/getDistrictList').subscribe((result) => {\n\n              console.log(result);\n              this.districtList = result[`districtList`];\n              this.dbService.dismissLoader();\n\n        });\n    }\n\n\n\n    async onNextStageHandler(stage) {\n\n        this.submitted = true;\n        console.log(this.registerForm2);\n\n        if (this['registerForm' + stage + ''].invalid) {\n\n              if (stage == 1) {\n\n                  this['registerForm' + stage + ''].get('companyName').markAsTouched();\n                  this['registerForm' + stage + ''].get('email').markAsTouched();\n                  // this['registerForm' + stage + ''].get('mobile').markAsTouched();\n                  this['registerForm' + stage + ''].get('landlineNo').markAsTouched();\n  \n\n              } else if (stage == 2) {\n\n                  this['registerForm' + stage + ''].get('street').markAsTouched();\n                  this['registerForm' + stage + ''].get('state').markAsTouched();\n                  this['registerForm' + stage + ''].get('district').markAsTouched();\n                  this['registerForm' + stage + ''].get('city').markAsTouched();\n                  this['registerForm' + stage + ''].get('pincode').markAsTouched();\n\n\n              } else if (stage == 3) {\n\n                  this['registerForm' + stage + ''].get('contactName').markAsTouched();\n                  this['registerForm' + stage + ''].get('designation').markAsTouched();\n                  this['registerForm' + stage + ''].get('contactEmail').markAsTouched();\n                  this['registerForm' + stage + ''].get('contactMobile').markAsTouched();\n              }\n\n              return;\n\n        } else {\n\n              console.log(this.data);\n\n\n              // if (this.activeStage == 3) {\n\n                    if (!this.data.contactName || !this.data.designation || !this.data.contactEmail || !this.data.contactMobile) {\n\n                         this.dbService.onShowAlertMessage('Error', 'Fill contact complete Detail!');\n                         return false;\n                    }\n\n                    this.contactData.push({\n\n                        contactName: this.data.contactName,\n                        designation: this.data.designation,\n                        contactEmail: this.data.contactEmail,\n                        contactMobile: this.data.contactMobile\n                    });\n\n                    this.data.contactName = '';\n                    this.data.contactMobile = '';\n                    this.data.designation = '';\n                    this.data.contactEmail = '';\n\n                    this.submitted = false;\n\n              // } else {\n\n              //    this.activeStage += 1;\n              //    this.submitted = false;\n              // }\n        }\n    }\n\n    async onDeleteContactHandler(index) {\n\n      const alert = await this.alertCtrl.create({\n        header: 'Confirm',\n        message: 'Are You Sure, You Want To Delete Contact ?',\n        buttons: [\n              {\n                text: 'No',\n                role: 'cancel',\n                handler: () => {\n                  console.log('No clicked');\n                }\n              },\n              {\n                text: 'Yes',\n                handler: () => {\n\n                     console.log('Yes clicked');\n\n                     this.contactData.splice(index, 1);\n                     this.dbService.presentToast('Contact Deleted Successfully!');\n                }\n              }\n          ]\n      });\n\n      await alert.present();\n\n    }\n\n\n    async onBackClickHandler(stage)  {\n          this.activeStage = stage - 1;\n    }\n\n    get f1() { return this.registerForm1.controls; }\n    get f2() { return this.registerForm2.controls; }\n    get f3() { return this.registerForm3.controls; }\n\n}\n"],"sourceRoot":"webpack:///"}