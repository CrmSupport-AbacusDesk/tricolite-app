{"version":3,"sources":["./src/app/customer_app/customerdocuments/customerdocuments.page.html","./src/app/customer_app/customerdocuments/customerdocuments-routing.module.ts","./src/app/customer_app/customerdocuments/customerdocuments.module.ts","./src/app/customer_app/customerdocuments/customerdocuments.page.scss","./src/app/customer_app/customerdocuments/customerdocuments.page.ts"],"names":[],"mappings":"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","file":"customerdocuments-customerdocuments-module-es2015.js","sourcesContent":["export default \"<ion-content >\\r\\n    <div class=\\\"cs-main-container\\\">\\r\\n        <div class=\\\"custome-head\\\">\\r\\n            <div class=\\\"cs-ion-header\\\">\\r\\n                <div class=\\\"cs-left\\\">\\r\\n                    <ion-button [routerLink]=\\\"['/customer/home']\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\r\\n                    <ion-title>Documents</ion-title>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"cs-ion-hf\\\"></div>\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"ion-padding-horizontal\\\">\\r\\n            <div class=\\\"cs-tabs\\\">\\r\\n                <ion-button (click)=\\\"currentActiveTab = 1; onGetDocumentList()\\\" [ngClass]=\\\"currentActiveTab==1 ? 'active' : ''\\\">Personal Document</ion-button>\\r\\n                <ion-button (click)=\\\"currentActiveTab = 2; onGetDocumentList()\\\" [ngClass]=\\\"currentActiveTab==2 ? 'active' : ''\\\">Common Document</ion-button>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        <div *ngIf=\\\"currentActiveTab==1\\\" class=\\\"cs-ion-content pt0\\\" padding>\\r\\n            \\r\\n            <ion-list class=\\\"list-item\\\">\\r\\n                <ion-item *ngFor=\\\"let row of documentList\\\" (click)=\\\"onGetImageDataHandler(row.id, row.subject)\\\" >\\r\\n                    <ion-label >{{row.subject}}</ion-label>\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n            <!-- <div class=\\\"m_documents\\\" padding>\\r\\n                <div *ngFor=\\\"let row of documentList\\\" (click)=\\\"onGetImageDataHandler(row.id, row.subject)\\\" class=\\\"figure\\\">\\r\\n                    <div class=\\\"thumb\\\"><img src=\\\"{{dbService.customerDocURL + row.document_url}}\\\" alt=\\\"\\\"></div>\\r\\n                    <h1><ion-text>{{row.subject}}</ion-text> <i class=\\\"material-icons\\\">arrow_right_alt</i></h1>\\r\\n                </div>\\r\\n            </div> -->\\r\\n            \\r\\n            <div *ngIf=\\\"!isRequestInProcess && documentList.length == 0\\\" class=\\\"no-data\\\">\\r\\n                <img src=\\\"assets/icon/no_found.svg\\\">\\r\\n                <p>No Data Available!</p>\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        \\r\\n        <div *ngIf=\\\"currentActiveTab==2\\\" class=\\\"cs-ion-content pt0\\\" padding>\\r\\n            <ion-list class=\\\"list-item\\\">\\r\\n                <ion-item *ngFor=\\\"let row of masterDocList\\\"  >\\r\\n                    <ion-label *ngIf=\\\"row.document_type!='URL'\\\" (click)=\\\"onGetImageDataHandler(row.id, row.subject)\\\">{{row.subject}}</ion-label>\\r\\n                    <ion-label *ngIf=\\\"row.document_type=='URL'\\\" (click)=\\\"onGetImageDataHandler(row.id, row.subject)\\\">{{row.subject}}</ion-label>\\r\\n                    <!-- <a *ngIf=\\\"row.document_type=='URL'\\\" href=\\\"row.document_url\\\" > <ion-label>{{row.subject}}</ion-label></a>  -->\\r\\n                    \\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n            \\r\\n            <div *ngIf=\\\"!isRequestInProcess && masterDocList.length == 0\\\" class=\\\"no-data\\\">\\r\\n                <img src=\\\"assets/icon/no_found.svg\\\">\\r\\n                <p>No Data Available!</p>\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CustomerdocumentsPage } from './customerdocuments.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomerdocumentsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CustomerdocumentsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CustomerdocumentsPageRoutingModule } from './customerdocuments-routing.module';\r\n\r\nimport { CustomerdocumentsPage } from './customerdocuments.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    CustomerdocumentsPageRoutingModule\r\n  ],\r\n  declarations: [CustomerdocumentsPage]\r\n})\r\nexport class CustomerdocumentsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9jdXN0b21lcmRvY3VtZW50cy9jdXN0b21lcmRvY3VtZW50cy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoadingController, AlertController } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-customerdocuments',\r\n  templateUrl: './customerdocuments.page.html',\r\n  styleUrls: ['./customerdocuments.page.scss'],\r\n})\r\nexport class CustomerdocumentsPage implements OnInit {\r\n\r\n  documentList: any = [];\r\n  masterDocList: any = [];\r\n  isRequestInProcess: any = false;\r\n  currentActiveTab: any;\r\n  documentImageData: any = [];\r\n\r\n  constructor(private route: Router,\r\n              private formBuilder: FormBuilder,\r\n              public alertCtrl: AlertController,\r\n              public dbService: DbServiceService) {\r\n\r\n                this.currentActiveTab = 1;\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.onGetDocumentList();\r\n  }\r\n\r\n  onGetDocumentList() {\r\n\r\n        this.dbService.presentLoader();\r\n\r\n        const inputData = {\r\n\r\n        };\r\n\r\n        this.isRequestInProcess = true;\r\n\r\n        this.dbService.onPostRequestHandler(inputData, 'task/getDocumentList').subscribe((result) => {\r\n              console.log(result);\r\n              this.dbService.dismissLoader();\r\n\r\n              if (result[`status`] == 'error') {\r\n\r\n                    this.dbService.onShowAlertMessage('Error', result[`statusMessage`]);\r\n\r\n              } else {\r\n\r\n                  this.documentList = result[`documentList`];\r\n                  this.masterDocList = result[`masterDocList`];\r\n                  console.log(this.documentList);\r\n                    console.log(this.masterDocList);\r\n                                \r\n              }\r\n\r\n              this.isRequestInProcess = false;\r\n        });\r\n  }\r\n\r\n  async onGetImageDataHandler(documentId, documentTitle) {\r\n\r\n    const inputData = {\r\n        documentId: documentId,\r\n        documentTitle: documentTitle\r\n    };\r\n\r\n    this.dbService.presentLoader();\r\n\r\n    this.dbService.onPostRequestHandler(inputData, 'task/getDocumentAllList').subscribe((result) => {\r\n\r\n          console.log(result);\r\n\r\n          this.dbService.dismissLoader();\r\n          this.documentImageData = result[`documentImageData`];\r\n\r\n          this.onViewImageHandler(0);\r\n    });\r\n}\r\n\r\nasync onViewImageHandler(index) {\r\n\r\n  let imagePath;\r\n\r\n\r\n  if (this.documentImageData[index].uploadFolderName && this.documentImageData[index].uploadFolderName == 'master')\r\n   {\r\n     if( this.documentImageData[index]['document_type']=='URL')\r\n     {\r\n     imagePath =  this.documentImageData[index].document_url;\r\n       \r\n     }\r\n     else\r\n     imagePath = this.dbService.masterDocURL + this.documentImageData[index].document_url;\r\n     console.log(imagePath);\r\n\r\n} \r\n\r\n\r\n\r\nelse {\r\n\r\n     imagePath = this.dbService.customerDocURL + this.documentImageData[index].document_url;\r\n     console.log(imagePath);\r\n\r\n       \r\n}\r\n\r\n\r\n     {\r\n\r\n     }  \r\n\r\n\r\n  window.open(imagePath, '_blank');\r\n\r\n //  this.photoViewer.show(imagePath);\r\n}\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}