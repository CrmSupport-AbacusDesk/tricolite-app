{"version":3,"sources":["./src/app/customer_app/projectdetail/projectdetail.page.html","./src/app/customer_app/projectdetail/projectdetail-routing.module.ts","./src/app/customer_app/projectdetail/projectdetail.module.ts","./src/app/customer_app/projectdetail/projectdetail.page.scss","./src/app/customer_app/projectdetail/projectdetail.page.ts"],"names":[],"mappings":"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","file":"projectdetail-projectdetail-module-es2015.js","sourcesContent":["export default \"<ion-content >\\r\\n    <div class=\\\"cs-main-container\\\">\\r\\n        <div class=\\\"custome-head\\\">\\r\\n            <div class=\\\"cs-ion-header\\\">\\r\\n                <div class=\\\"cs-left\\\">\\r\\n                    <ion-button [routerLink]=\\\"['/customer/projects']\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\r\\n                    <ion-title>{{projectData.project_name}} - Detail</ion-title>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"cs-ion-hf\\\"></div>\\r\\n        </div>\\r\\n        \\r\\n        <div *ngIf=\\\"projectData && projectData.project_name\\\" class=\\\"cs-ion-content pt0\\\" padding>\\r\\n            \\r\\n            <div class=\\\"complaints\\\">\\r\\n                <div class=\\\"figure\\\">\\r\\n                    <div class=\\\"cnt-info pt0 pl0 pr0\\\">\\r\\n                        <div class=\\\"cs-left\\\" >\\r\\n                            <div *ngIf=\\\"projectData && projectData.project_name\\\" class=\\\"f-alpha\\\">{{projectData.project_name[0]}}</div>\\r\\n                            <div class=\\\"names\\\">\\r\\n                                <h1>{{projectData.project_name}}</h1>\\r\\n                                <ion-text>{{projectData.street}} {{projectData.state_name}}, {{projectData.district_name}}, {{projectData.city}}, {{projectData.pincode}}</ion-text>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div class=\\\"one-two-one three\\\">\\r\\n                        <div class=\\\"cs-box\\\">\\r\\n                            <div>\\r\\n                                <ion-text>Contact Person</ion-text>\\r\\n                                <ion-text>{{projectData.contactData ? projectData.contactData.length : 0}}</ion-text>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cs-box\\\">\\r\\n                            <div>\\r\\n                                <ion-text>Total Products</ion-text>\\r\\n                                <ion-text>{{projectData.productData.length}}</ion-text>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cs-box\\\">\\r\\n                            <div>\\r\\n                                <ion-text>Service Request</ion-text>\\r\\n                                <ion-text>{{projectData.totalServiceRequest}} </ion-text>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"cs-tabs mt16\\\">\\r\\n                <ion-button (click)=\\\"activeTab=1\\\" [ngClass]=\\\"activeTab==1 ? 'active' : ''\\\">Products</ion-button>\\r\\n                <ion-button (click) = \\\"activeTab=2\\\" [ngClass]=\\\"activeTab==2  || activeTab == 3 ? 'active' : ''\\\">Contact Persons\\r\\n                    <i class=\\\"material-icons\\\" (click)=\\\"contactPerson()\\\" style=\\\"font-size: 19px; margin-left: 15px;\\\">add_circle</i>\\r\\n                </ion-button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"complaints product-list mt16\\\">\\r\\n                <div *ngIf=\\\"activeTab == 1\\\" class=\\\"project_FG_data\\\">\\r\\n                    <div *ngFor=\\\"let row of projectData.productData\\\" class=\\\"figure\\\">\\r\\n                        <div class=\\\"cnt-info\\\">\\r\\n                            <div class=\\\"cs-left\\\">\\r\\n                                <div class=\\\"names\\\">\\r\\n                                    <h1>{{row.fg_no}}  | <span>{{row.warranty_type}}</span></h1>\\r\\n                                    <ion-text>{{row.service_center_name}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cs-right\\\">\\r\\n                                <ion-text class=\\\"font10\\\"><span class=\\\"font8\\\">Warranty (Valid Upto)</span><br>{{row.warranty}} ({{row.warantyValidUpToInFormat}})</ion-text>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        \\r\\n                        <div class=\\\"cnt-info pt0\\\">\\r\\n                            <div class=\\\"cs-left\\\">\\r\\n                                <div class=\\\"names\\\"> \\r\\n                                    <h1><ion-text>Next Service :</ion-text> &nbsp; </h1>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \\r\\n                        \\r\\n                        <div class=\\\"one-two-one merge\\\">\\r\\n                            <div class=\\\"cs-box\\\">\\r\\n                                <div>\\r\\n                                    <ion-text>Brand / Model / Sub Model</ion-text>\\r\\n                                    <ion-text>{{row.brand}} / {{row.model}} / {{row.sub_model}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cs-box\\\">\\r\\n                                <div>\\r\\n                                    <ion-text>So / Si No.</ion-text>\\r\\n                                    <ion-text>{{row.so_no}} / {{row.si_no}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \\r\\n                        <div class=\\\"one-two-one three mt10\\\">\\r\\n                            <div class=\\\"cs-box\\\">\\r\\n                                <div>\\r\\n                                    <ion-text>Date Of Supply</ion-text>\\r\\n                                    <ion-text>{{row.dateSupplyInFormat}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cs-box\\\">\\r\\n                                <div>\\r\\n                                    <ion-text>Installation Date</ion-text>\\r\\n                                    <ion-text>{{row.dateInstallationInFormat}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cs-box\\\">\\r\\n                                <div>\\r\\n                                    <ion-text>Service Request</ion-text>\\r\\n                                    <ion-text>{{row.productServiceRquestCount}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!--  -->\\r\\n                \\r\\n                <div *ngIf=\\\"activeTab == 2\\\" class=\\\"my_contact_persons\\\">\\r\\n                    \\r\\n                    <div *ngFor= \\\"let row of projectData.contactData; let index = index\\\" class=\\\"figure pb0\\\">\\r\\n                        <div class=\\\"cnt-info\\\">\\r\\n                            <div class=\\\"cs-left\\\">\\r\\n                                <div class=\\\"f-alpha bg1\\\">g</div>\\r\\n                                <div class=\\\"names\\\">\\r\\n                                    <h1>{{row.name}} ({{row.designation}})</h1>\\r\\n                                    <a>{{row.email}}</a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cs-right two-icons\\\">\\r\\n                                <a href=\\\"tel: {{row.mobile}}\\\" class=\\\"call\\\"><i class=\\\"material-icons\\\">call</i></a>\\r\\n                                <a class=\\\"call red-color\\\" (click)=\\\"deleteContactPerson(row.id, index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <!-- <div (click)=\\\"activeTab = 3\\\" class=\\\"cs-btn ion-padding\\\" text-right>\\r\\n                        <ion-button class=\\\"w45 h45 round font16\\\" ><ion-icon name=\\\"add\\\"></ion-icon></ion-button>\\r\\n                    </div> -->\\r\\n                    \\r\\n                </div>\\r\\n                \\r\\n                <div *ngIf=\\\"activeTab == 3\\\" class=\\\"add_new_contact_person\\\">\\r\\n                    <div class=\\\"cnt-person\\\">\\r\\n                        <div class=\\\"css-heading\\\"><h1>Add New Contact Person</h1></div>\\r\\n                        \\r\\n                        <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"onSaveContactDetailHandler()\\\">\\r\\n                            \\r\\n                            <div class=\\\"common_form inner_page\\\">\\r\\n                                \\r\\n                                <ion-item [ngClass]=\\\"submitted && f1.contactName.errors && f1.contactName.errors.required ? 'has-error' : (f1.contactName.errors && !f1.contactName.errors.required ? 'has-text' : '')\\\">\\r\\n                                    \\r\\n                                    <ion-label position=\\\"floating\\\">Contact Person Name</ion-label>\\r\\n                                    <ion-input formControlName=\\\"contactName\\\" [(ngModel)]=\\\"data.contactName\\\"></ion-input>\\r\\n                                    \\r\\n                                    <ion-text *ngIf=\\\"submitted && f1.contactName.errors\\\" class=\\\"cs-error\\\">\\r\\n                                        \\r\\n                                        <span *ngIf=\\\"f1.contactName.errors.minlength\\\">Minimum 4 Letter Required</span>\\r\\n\\r\\n                                        <span *ngIf=\\\"f1.contactName.errors.maxlength\\\">Minimum 50 Letter Required</span>\\r\\n                                        \\r\\n                                    </ion-text>\\r\\n                                    \\r\\n                                </ion-item>\\r\\n                                \\r\\n                                <ion-item [ngClass]=\\\"submitted && f1.contactMobile.errors && f1.contactMobile.errors.required ? 'has-error' : (f1.contactMobile.errors && !f1.contactMobile.errors.required ? 'has-text' : '')\\\">\\r\\n                                    \\r\\n                                    <ion-label position=\\\"floating\\\">Mobile No.</ion-label>\\r\\n                                    <ion-input type=\\\"tel\\\" formControlName=\\\"contactMobile\\\" [(ngModel)]=\\\"data.contactMobile\\\" (keypress) = \\\"dbService.numberOnly($event)\\\"></ion-input>\\r\\n                                    \\r\\n                                    <ion-text *ngIf=\\\"submitted && f1.contactMobile.errors\\\" class=\\\"cs-error\\\">\\r\\n                                        \\r\\n                                        <span *ngIf=\\\"f1.contactMobile.errors.minlength\\\">Minimum 10 Digit Required</span>\\r\\n                                        \\r\\n                                        <span *ngIf=\\\"f1.contactMobile.errors.maxlength\\\">Maximum 10 Digit Required</span>\\r\\n                                        \\r\\n                                    </ion-text>\\r\\n                                    \\r\\n                                </ion-item>\\r\\n                                \\r\\n                                <ion-item [ngClass]=\\\"submitted && f1.contactEmail.errors && f1.contactEmail.errors.required ? 'has-error' : (f1.contactEmail.errors && !f1.contactEmail.errors.required ? 'has-text' : '')\\\">\\r\\n                                    \\r\\n                                    <ion-label position=\\\"floating\\\">Email ID</ion-label>\\r\\n                                    <ion-input formControlName=\\\"contactEmail\\\" [(ngModel)]=\\\"data.contactEmail\\\"></ion-input>\\r\\n                                    \\r\\n                                    <ion-text *ngIf=\\\"submitted && f1.contactEmail.errors\\\" class=\\\"cs-error\\\">\\r\\n                                        \\r\\n                                        <span *ngIf=\\\"!f1.contactEmail.errors.required\\\">Email Invalid</span>\\r\\n                                        \\r\\n                                    </ion-text>\\r\\n                                    \\r\\n                                </ion-item>\\r\\n                                \\r\\n                                <ion-item [ngClass]=\\\"submitted && f1.designation.errors && f1.designation.errors.required ? 'has-error' : (f1.designation.errors && !f1.designation.errors.required ? 'has-text' : '')\\\">\\r\\n\\r\\n                                    <ion-label position=\\\"floating\\\">Designation</ion-label>\\r\\n                                    <ion-input formControlName=\\\"designation\\\" [(ngModel)]=\\\"data.designation\\\"></ion-input>\\r\\n                                    \\r\\n                                    <ion-text *ngIf=\\\"submitted && f1.designation.errors\\\" class=\\\"cs-error\\\">\\r\\n                                        \\r\\n                                        <span *ngIf=\\\"f1.designation.errors.minlength\\\">Minimum 3 Letter Required</span>\\r\\n\\r\\n                                        <span *ngIf=\\\"f1.designation.errors.minlength\\\">Maximum 50 Letter Allowed!</span>\\r\\n                                        \\r\\n                                    </ion-text>\\r\\n                                </ion-item>\\r\\n                                \\r\\n                            </div>\\r\\n                            \\r\\n                            <div class=\\\"cs-btn mt30 pb10 lr\\\">\\r\\n                                \\r\\n                                <ion-button (click)=\\\"activeTab=2\\\" class=\\\"dark min w100 clear border\\\" fill=\\\"clear\\\">CANCEL</ion-button>\\r\\n                                \\r\\n                                <ion-button type=\\\"submit\\\" class=\\\"success min w100\\\">SAVE</ion-button>\\r\\n                                \\r\\n                            </div>\\r\\n                            \\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProjectdetailPage } from './projectdetail.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProjectdetailPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProjectdetailPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProjectdetailPageRoutingModule } from './projectdetail-routing.module';\r\n\r\nimport { ProjectdetailPage } from './projectdetail.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    ProjectdetailPageRoutingModule\r\n  ],\r\n  declarations: [ProjectdetailPage]\r\n})\r\nexport class ProjectdetailPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9wcm9qZWN0ZGV0YWlsL3Byb2plY3RkZXRhaWwucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoadingController, AlertController } from '@ionic/angular';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\nimport { ContactpersonmodelPage } from './contactpersonmodel/contactpersonmodel.page';\r\n\r\n@Component({\r\n      selector: 'app-projectdetail',\r\n      templateUrl: './projectdetail.page.html',\r\n      styleUrls: ['./projectdetail.page.scss'],\r\n})\r\nexport class ProjectdetailPage implements OnInit {\r\n      \r\n      projectId: any = '';\r\n      projectData: any = {};\r\n      data: any = {};\r\n      \r\n      submitted: any = false;\r\n      \r\n      activeTab: any = 1;\r\n      \r\n      registerForm1: FormGroup;\r\n      \r\n      constructor(public modalController: ModalController, public popoverController: PopoverController,\r\n            private route: Router,\r\n            public routeParams: ActivatedRoute,\r\n            private formBuilder: FormBuilder,\r\n            public alertCtrl: AlertController,\r\n            public dbService: DbServiceService) {\r\n                  \r\n                  this.registerForm1 = this.formBuilder.group({\r\n                        \r\n                        contactName: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\r\n                        contactMobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\r\n                        contactEmail: ['', [Validators.required, Validators.email]],\r\n                        designation: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]]\r\n                  });\r\n            }\r\n            \r\n            ngOnInit() {\r\n                  \r\n                  this.routeParams.params.subscribe(params => {\r\n                        \r\n                        console.log(params);\r\n                        this.projectId = params.projectId;\r\n                        \r\n                        console.log(this.projectId);\r\n                        this.onGetProjectDetail();\r\n                        \r\n                  });\r\n            }\r\n            \r\n            async onGetProjectDetail() {\r\n                  \r\n                  console.log('hello');\r\n                  \r\n                  this.dbService.presentLoader();\r\n                  const inputData = {\r\n                        projectId: this.projectId\r\n                  };\r\n                  \r\n                  this.dbService.onPostRequestHandler(inputData, 'customer/getProjectList').subscribe((result) => {\r\n                        console.log(result);\r\n                        this.dbService.dismissLoader();\r\n                        this.projectData = result[`projectData`][0];\r\n                        console.log(this.projectData);\r\n                        \r\n                  });\r\n            }\r\n            \r\n            \r\n            async onSaveContactDetailHandler() {\r\n                  \r\n                  this.submitted = true;\r\n                  \r\n                  if (this.registerForm1.invalid) {\r\n                        \r\n                        this.registerForm1.get('contactName').markAsTouched();\r\n                        this.registerForm1.get('contactMobile').markAsTouched();\r\n                        this.registerForm1.get('contactEmail').markAsTouched();\r\n                        this.registerForm1.get('designation').markAsTouched();\r\n                        \r\n                  } else {\r\n                        \r\n                        const alert = await this.alertCtrl.create({\r\n                              header: 'Confirm',\r\n                              message: 'Are You Sure, You Want To Save Contact ?',\r\n                              buttons: [\r\n                                    {\r\n                                          text: 'No',\r\n                                          role: 'cancel',\r\n                                          handler: () => {\r\n                                                console.log('No clicked');\r\n                                          }\r\n                                    },\r\n                                    {\r\n                                          text: 'Yes',\r\n                                          handler: () => {\r\n                                                \r\n                                                console.log('Yes clicked');\r\n                                                \r\n                                                const contactTempData = JSON.parse(JSON.stringify(this.data));\r\n                                                \r\n                                                const inputData = {};\r\n                                                inputData[`projectId`] = this.projectId;\r\n                                                \r\n                                                inputData[`contactData`] = [];\r\n                                                inputData[`contactData`].push(contactTempData);\r\n                                                this.dbService.presentLoader();\r\n                                                \r\n                                                this.dbService.onPostRequestHandler(inputData, 'customer/saveProjectContact').subscribe((result) => {\r\n                                                      \r\n                                                      console.log(result);\r\n                                                      this.dbService.dismissLoader();\r\n                                                      \r\n                                                      if (result[`status`] == 'error') {\r\n                                                            \r\n                                                            this.dbService.onShowAlertMessage('Error', result[`statusMessage`]);\r\n                                                            \r\n                                                      } else {\r\n                                                            \r\n                                                            this.data = {};\r\n                                                            this.activeTab = 2;\r\n                                                            this.onGetProjectDetail();\r\n                                                            this.dbService.presentToast('Contact Saved Successfully!');\r\n                                                      }\r\n                                                });\r\n                                          }\r\n                                    }\r\n                              ]\r\n                        });\r\n                        \r\n                        await alert.present();\r\n                        \r\n                  }\r\n            }\r\n            \r\n            async contactPerson() {\r\n                  const modal = await this.modalController.create({\r\n                        component: ContactpersonmodelPage,\r\n                        componentProps: { projectId: this.projectId }\r\n                  });\r\n                  this.onGetProjectDetail();\r\n                  return await modal.present();\r\n            }\r\n            \r\n            async deleteContactPerson(cpId, index)\r\n            {\r\n                  console.log(cpId);\r\n                  console.log(index);\r\n                  \r\n                  const inputData = {};\r\n                  inputData[`cpId`] = cpId;\r\n                  \r\n                  const alert = await this.alertCtrl.create({\r\n                        header: 'Confirm',\r\n                        message: 'Are You Sure, You Want To Delete Contact ?',\r\n                        buttons: [\r\n                              {\r\n                                    text: 'No',\r\n                                    role: 'cancel',\r\n                                    handler: () => {\r\n                                          console.log('No clicked');\r\n                                    }\r\n                              },\r\n                              {\r\n                                    text: 'Yes',\r\n                                    handler: () => {\r\n                                          \r\n                                          console.log('Yes clicked');\r\n                                          \r\n                                          this.dbService.presentLoader();\r\n                                          \r\n                                          this.dbService.onPostRequestHandler(inputData, 'customer/deleteContactPerson').subscribe((result) => {\r\n                                                \r\n                                                console.log(result);\r\n                                                this.dbService.dismissLoader();\r\n                                                \r\n                                                if (result[`status`] == 'error') {\r\n                                                      \r\n                                                      this.dbService.onShowAlertMessage('Error', result[`statusMessage`]);\r\n                                                      \r\n                                                } else {\r\n                                                      \r\n                                                      this.data = {};\r\n                                                      this.activeTab = 2;\r\n                                                      this.onGetProjectDetail();\r\n                                                      this.dbService.presentToast('Contact Delete Successfully!');\r\n                                                }\r\n                                          });\r\n                                    }\r\n                              }\r\n                        ]\r\n                  });\r\n                  \r\n                  await alert.present();\r\n            }\r\n            \r\n            get f1() { return this.registerForm1.controls; }\r\n            \r\n      }\r\n      "],"sourceRoot":"webpack:///"}