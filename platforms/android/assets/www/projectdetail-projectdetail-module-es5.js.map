{"version":3,"sources":["src/app/customer_app/projectdetail/projectdetail.page.html","src/app/customer_app/projectdetail/projectdetail-routing.module.ts","src/app/customer_app/projectdetail/projectdetail.module.ts","src/app/customer_app/projectdetail/projectdetail.page.scss","src/app/customer_app/projectdetail/projectdetail.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content >\\r\\n    <div class=\\\"cs-main-container\\\">\\r\\n        <div class=\\\"custome-head\\\">\\r\\n            <div class=\\\"cs-ion-header\\\">\\r\\n                <div class=\\\"cs-left\\\">\\r\\n                    <ion-button [routerLink]=\\\"['/customer/projects']\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\r\\n                    <ion-title>{{projectData.project_name}} - Detail</ion-title>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"cs-ion-hf\\\"></div>\\r\\n        </div>\\r\\n        \\r\\n        <div *ngIf=\\\"projectData && projectData.project_name\\\" class=\\\"cs-ion-content pt0\\\" padding>\\r\\n            \\r\\n            <div class=\\\"complaints\\\">\\r\\n                <div class=\\\"figure\\\">\\r\\n                    <div class=\\\"cnt-info pt0 pl0 pr0\\\">\\r\\n                        <div class=\\\"cs-left\\\" >\\r\\n                            <div *ngIf=\\\"projectData && projectData.project_name\\\" class=\\\"f-alpha\\\">{{projectData.project_name[0]}}</div>\\r\\n                            <div class=\\\"names\\\">\\r\\n                                <h1>{{projectData.project_name}}</h1>\\r\\n                                <ion-text>{{projectData.street}} {{projectData.state_name}}, {{projectData.district_name}}, {{projectData.city}}, {{projectData.pincode}}</ion-text>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div class=\\\"one-two-one three\\\">\\r\\n                        <div class=\\\"cs-box\\\">\\r\\n                            <div>\\r\\n                                <ion-text>Contact Person</ion-text>\\r\\n                                <ion-text>{{projectData.contactData ? projectData.contactData.length : 0}}</ion-text>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cs-box\\\">\\r\\n                            <div>\\r\\n                                <ion-text>Total Products</ion-text>\\r\\n                                <ion-text>{{projectData.productData.length}}</ion-text>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"cs-box\\\">\\r\\n                            <div>\\r\\n                                <ion-text>Service Request</ion-text>\\r\\n                                <ion-text>{{projectData.totalServiceRequest}} </ion-text>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"cs-tabs mt16\\\">\\r\\n                <ion-button (click)=\\\"activeTab=1\\\" [ngClass]=\\\"activeTab==1 ? 'active' : ''\\\">Products</ion-button>\\r\\n                <ion-button (click) = \\\"activeTab=2\\\" [ngClass]=\\\"activeTab==2  || activeTab == 3 ? 'active' : ''\\\">Contact Persons\\r\\n                    <i class=\\\"material-icons\\\" (click)=\\\"contactPerson()\\\" style=\\\"font-size: 19px; margin-left: 15px;\\\">add_circle</i>\\r\\n                </ion-button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"complaints product-list mt16\\\">\\r\\n                <div *ngIf=\\\"activeTab == 1\\\" class=\\\"project_FG_data\\\">\\r\\n                    <div *ngFor=\\\"let row of projectData.productData\\\" class=\\\"figure\\\">\\r\\n                        <div class=\\\"cnt-info\\\">\\r\\n                            <div class=\\\"cs-left\\\">\\r\\n                                <div class=\\\"names\\\">\\r\\n                                    <h1>{{row.fg_no}}  | <span>{{row.warranty_type}}</span></h1>\\r\\n                                    <ion-text>{{row.service_center_name}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cs-right\\\">\\r\\n                                <ion-text class=\\\"font10\\\"><span class=\\\"font8\\\">Warranty (Valid Upto)</span><br>{{row.warranty}} ({{row.warantyValidUpToInFormat}})</ion-text>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        \\r\\n                        <div class=\\\"cnt-info pt0\\\">\\r\\n                            <div class=\\\"cs-left\\\">\\r\\n                                <div class=\\\"names\\\"> \\r\\n                                    <h1><ion-text>Next Service :</ion-text> &nbsp; </h1>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \\r\\n                        \\r\\n                        <div class=\\\"one-two-one merge\\\">\\r\\n                            <div class=\\\"cs-box\\\">\\r\\n                                <div>\\r\\n                                    <ion-text>Brand / Model / Sub Model</ion-text>\\r\\n                                    <ion-text>{{row.brand}} / {{row.model}} / {{row.sub_model}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cs-box\\\">\\r\\n                                <div>\\r\\n                                    <ion-text>So / Si No.</ion-text>\\r\\n                                    <ion-text>{{row.so_no}} / {{row.si_no}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \\r\\n                        <div class=\\\"one-two-one three mt10\\\">\\r\\n                            <div class=\\\"cs-box\\\">\\r\\n                                <div>\\r\\n                                    <ion-text>Date Of Supply</ion-text>\\r\\n                                    <ion-text>{{row.dateSupplyInFormat}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cs-box\\\">\\r\\n                                <div>\\r\\n                                    <ion-text>Installation Date</ion-text>\\r\\n                                    <ion-text>{{row.dateInstallationInFormat}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cs-box\\\">\\r\\n                                <div>\\r\\n                                    <ion-text>Service Request</ion-text>\\r\\n                                    <ion-text>{{row.productServiceRquestCount}}</ion-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!--  -->\\r\\n                \\r\\n                <div *ngIf=\\\"activeTab == 2\\\" class=\\\"my_contact_persons\\\">\\r\\n                    \\r\\n                    <div *ngFor= \\\"let row of projectData.contactData; let index = index\\\" class=\\\"figure pb0\\\">\\r\\n                        <div class=\\\"cnt-info\\\">\\r\\n                            <div class=\\\"cs-left\\\">\\r\\n                                <div class=\\\"f-alpha bg1\\\">g</div>\\r\\n                                <div class=\\\"names\\\">\\r\\n                                    <h1>{{row.name}} ({{row.designation}})</h1>\\r\\n                                    <a>{{row.email}}</a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cs-right two-icons\\\">\\r\\n                                <a href=\\\"tel: {{row.mobile}}\\\" class=\\\"call\\\"><i class=\\\"material-icons\\\">call</i></a>\\r\\n                                <a class=\\\"call red-color\\\" (click)=\\\"deleteContactPerson(row.id, index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <!-- <div (click)=\\\"activeTab = 3\\\" class=\\\"cs-btn ion-padding\\\" text-right>\\r\\n                        <ion-button class=\\\"w45 h45 round font16\\\" ><ion-icon name=\\\"add\\\"></ion-icon></ion-button>\\r\\n                    </div> -->\\r\\n                    \\r\\n                </div>\\r\\n                \\r\\n                <div *ngIf=\\\"activeTab == 3\\\" class=\\\"add_new_contact_person\\\">\\r\\n                    <div class=\\\"cnt-person\\\">\\r\\n                        <div class=\\\"css-heading\\\"><h1>Add New Contact Person</h1></div>\\r\\n                        \\r\\n                        <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"onSaveContactDetailHandler()\\\">\\r\\n                            \\r\\n                            <div class=\\\"common_form inner_page\\\">\\r\\n                                \\r\\n                                <ion-item [ngClass]=\\\"submitted && f1.contactName.errors && f1.contactName.errors.required ? 'has-error' : (f1.contactName.errors && !f1.contactName.errors.required ? 'has-text' : '')\\\">\\r\\n                                    \\r\\n                                    <ion-label position=\\\"floating\\\">Contact Person Name</ion-label>\\r\\n                                    <ion-input formControlName=\\\"contactName\\\" [(ngModel)]=\\\"data.contactName\\\"></ion-input>\\r\\n                                    \\r\\n                                    <ion-text *ngIf=\\\"submitted && f1.contactName.errors\\\" class=\\\"cs-error\\\">\\r\\n                                        \\r\\n                                        <span *ngIf=\\\"f1.contactName.errors.minlength\\\">Minimum 4 Letter Required</span>\\r\\n\\r\\n                                        <span *ngIf=\\\"f1.contactName.errors.maxlength\\\">Minimum 50 Letter Required</span>\\r\\n                                        \\r\\n                                    </ion-text>\\r\\n                                    \\r\\n                                </ion-item>\\r\\n                                \\r\\n                                <ion-item [ngClass]=\\\"submitted && f1.contactMobile.errors && f1.contactMobile.errors.required ? 'has-error' : (f1.contactMobile.errors && !f1.contactMobile.errors.required ? 'has-text' : '')\\\">\\r\\n                                    \\r\\n                                    <ion-label position=\\\"floating\\\">Mobile No.</ion-label>\\r\\n                                    <ion-input type=\\\"tel\\\" formControlName=\\\"contactMobile\\\" [(ngModel)]=\\\"data.contactMobile\\\" (keypress) = \\\"dbService.numberOnly($event)\\\"></ion-input>\\r\\n                                    \\r\\n                                    <ion-text *ngIf=\\\"submitted && f1.contactMobile.errors\\\" class=\\\"cs-error\\\">\\r\\n                                        \\r\\n                                        <span *ngIf=\\\"f1.contactMobile.errors.minlength\\\">Minimum 10 Digit Required</span>\\r\\n                                        \\r\\n                                        <span *ngIf=\\\"f1.contactMobile.errors.maxlength\\\">Maximum 10 Digit Required</span>\\r\\n                                        \\r\\n                                    </ion-text>\\r\\n                                    \\r\\n                                </ion-item>\\r\\n                                \\r\\n                                <ion-item [ngClass]=\\\"submitted && f1.contactEmail.errors && f1.contactEmail.errors.required ? 'has-error' : (f1.contactEmail.errors && !f1.contactEmail.errors.required ? 'has-text' : '')\\\">\\r\\n                                    \\r\\n                                    <ion-label position=\\\"floating\\\">Email ID</ion-label>\\r\\n                                    <ion-input formControlName=\\\"contactEmail\\\" [(ngModel)]=\\\"data.contactEmail\\\"></ion-input>\\r\\n                                    \\r\\n                                    <ion-text *ngIf=\\\"submitted && f1.contactEmail.errors\\\" class=\\\"cs-error\\\">\\r\\n                                        \\r\\n                                        <span *ngIf=\\\"!f1.contactEmail.errors.required\\\">Email Invalid</span>\\r\\n                                        \\r\\n                                    </ion-text>\\r\\n                                    \\r\\n                                </ion-item>\\r\\n                                \\r\\n                                <ion-item [ngClass]=\\\"submitted && f1.designation.errors && f1.designation.errors.required ? 'has-error' : (f1.designation.errors && !f1.designation.errors.required ? 'has-text' : '')\\\">\\r\\n\\r\\n                                    <ion-label position=\\\"floating\\\">Designation</ion-label>\\r\\n                                    <ion-input formControlName=\\\"designation\\\" [(ngModel)]=\\\"data.designation\\\"></ion-input>\\r\\n                                    \\r\\n                                    <ion-text *ngIf=\\\"submitted && f1.designation.errors\\\" class=\\\"cs-error\\\">\\r\\n                                        \\r\\n                                        <span *ngIf=\\\"f1.designation.errors.minlength\\\">Minimum 3 Letter Required</span>\\r\\n\\r\\n                                        <span *ngIf=\\\"f1.designation.errors.minlength\\\">Maximum 50 Letter Allowed!</span>\\r\\n                                        \\r\\n                                    </ion-text>\\r\\n                                </ion-item>\\r\\n                                \\r\\n                            </div>\\r\\n                            \\r\\n                            <div class=\\\"cs-btn mt30 pb10 lr\\\">\\r\\n                                \\r\\n                                <ion-button (click)=\\\"activeTab=2\\\" class=\\\"dark min w100 clear border\\\" fill=\\\"clear\\\">CANCEL</ion-button>\\r\\n                                \\r\\n                                <ion-button type=\\\"submit\\\" class=\\\"success min w100\\\">SAVE</ion-button>\\r\\n                                \\r\\n                            </div>\\r\\n                            \\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProjectdetailPage } from './projectdetail.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProjectdetailPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProjectdetailPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProjectdetailPageRoutingModule } from './projectdetail-routing.module';\r\n\r\nimport { ProjectdetailPage } from './projectdetail.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    ProjectdetailPageRoutingModule\r\n  ],\r\n  declarations: [ProjectdetailPage]\r\n})\r\nexport class ProjectdetailPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9wcm9qZWN0ZGV0YWlsL3Byb2plY3RkZXRhaWwucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoadingController, AlertController } from '@ionic/angular';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\nimport { ContactpersonmodelPage } from './contactpersonmodel/contactpersonmodel.page';\r\n\r\n@Component({\r\n      selector: 'app-projectdetail',\r\n      templateUrl: './projectdetail.page.html',\r\n      styleUrls: ['./projectdetail.page.scss'],\r\n})\r\nexport class ProjectdetailPage implements OnInit {\r\n      \r\n      projectId: any = '';\r\n      projectData: any = {};\r\n      data: any = {};\r\n      \r\n      submitted: any = false;\r\n      \r\n      activeTab: any = 1;\r\n      \r\n      registerForm1: FormGroup;\r\n      \r\n      constructor(public modalController: ModalController, public popoverController: PopoverController,\r\n            private route: Router,\r\n            public routeParams: ActivatedRoute,\r\n            private formBuilder: FormBuilder,\r\n            public alertCtrl: AlertController,\r\n            public dbService: DbServiceService) {\r\n                  \r\n                  this.registerForm1 = this.formBuilder.group({\r\n                        \r\n                        contactName: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\r\n                        contactMobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\r\n                        contactEmail: ['', [Validators.required, Validators.email]],\r\n                        designation: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]]\r\n                  });\r\n            }\r\n            \r\n            ngOnInit() {\r\n                  \r\n                  this.routeParams.params.subscribe(params => {\r\n                        \r\n                        console.log(params);\r\n                        this.projectId = params.projectId;\r\n                        \r\n                        console.log(this.projectId);\r\n                        this.onGetProjectDetail();\r\n                        \r\n                  });\r\n            }\r\n            \r\n            async onGetProjectDetail() {\r\n                  \r\n                  console.log('hello');\r\n                  \r\n                  this.dbService.presentLoader();\r\n                  const inputData = {\r\n                        projectId: this.projectId\r\n                  };\r\n                  \r\n                  this.dbService.onPostRequestHandler(inputData, 'customer/getProjectList').subscribe((result) => {\r\n                        console.log(result);\r\n                        this.dbService.dismissLoader();\r\n                        this.projectData = result[`projectData`][0];\r\n                        console.log(this.projectData);\r\n                        \r\n                  });\r\n            }\r\n            \r\n            \r\n            async onSaveContactDetailHandler() {\r\n                  \r\n                  this.submitted = true;\r\n                  \r\n                  if (this.registerForm1.invalid) {\r\n                        \r\n                        this.registerForm1.get('contactName').markAsTouched();\r\n                        this.registerForm1.get('contactMobile').markAsTouched();\r\n                        this.registerForm1.get('contactEmail').markAsTouched();\r\n                        this.registerForm1.get('designation').markAsTouched();\r\n                        \r\n                  } else {\r\n                        \r\n                        const alert = await this.alertCtrl.create({\r\n                              header: 'Confirm',\r\n                              message: 'Are You Sure, You Want To Save Contact ?',\r\n                              buttons: [\r\n                                    {\r\n                                          text: 'No',\r\n                                          role: 'cancel',\r\n                                          handler: () => {\r\n                                                console.log('No clicked');\r\n                                          }\r\n                                    },\r\n                                    {\r\n                                          text: 'Yes',\r\n                                          handler: () => {\r\n                                                \r\n                                                console.log('Yes clicked');\r\n                                                \r\n                                                const contactTempData = JSON.parse(JSON.stringify(this.data));\r\n                                                \r\n                                                const inputData = {};\r\n                                                inputData[`projectId`] = this.projectId;\r\n                                                \r\n                                                inputData[`contactData`] = [];\r\n                                                inputData[`contactData`].push(contactTempData);\r\n                                                this.dbService.presentLoader();\r\n                                                \r\n                                                this.dbService.onPostRequestHandler(inputData, 'customer/saveProjectContact').subscribe((result) => {\r\n                                                      \r\n                                                      console.log(result);\r\n                                                      this.dbService.dismissLoader();\r\n                                                      \r\n                                                      if (result[`status`] == 'error') {\r\n                                                            \r\n                                                            this.dbService.onShowAlertMessage('Error', result[`statusMessage`]);\r\n                                                            \r\n                                                      } else {\r\n                                                            \r\n                                                            this.data = {};\r\n                                                            this.activeTab = 2;\r\n                                                            this.onGetProjectDetail();\r\n                                                            this.dbService.presentToast('Contact Saved Successfully!');\r\n                                                      }\r\n                                                });\r\n                                          }\r\n                                    }\r\n                              ]\r\n                        });\r\n                        \r\n                        await alert.present();\r\n                        \r\n                  }\r\n            }\r\n            \r\n            async contactPerson() {\r\n                  const modal = await this.modalController.create({\r\n                        component: ContactpersonmodelPage,\r\n                        componentProps: { projectId: this.projectId }\r\n                  });\r\n                  this.onGetProjectDetail();\r\n                  return await modal.present();\r\n            }\r\n            \r\n            async deleteContactPerson(cpId, index)\r\n            {\r\n                  console.log(cpId);\r\n                  console.log(index);\r\n                  \r\n                  const inputData = {};\r\n                  inputData[`cpId`] = cpId;\r\n                  \r\n                  const alert = await this.alertCtrl.create({\r\n                        header: 'Confirm',\r\n                        message: 'Are You Sure, You Want To Delete Contact ?',\r\n                        buttons: [\r\n                              {\r\n                                    text: 'No',\r\n                                    role: 'cancel',\r\n                                    handler: () => {\r\n                                          console.log('No clicked');\r\n                                    }\r\n                              },\r\n                              {\r\n                                    text: 'Yes',\r\n                                    handler: () => {\r\n                                          \r\n                                          console.log('Yes clicked');\r\n                                          \r\n                                          this.dbService.presentLoader();\r\n                                          \r\n                                          this.dbService.onPostRequestHandler(inputData, 'customer/deleteContactPerson').subscribe((result) => {\r\n                                                \r\n                                                console.log(result);\r\n                                                this.dbService.dismissLoader();\r\n                                                \r\n                                                if (result[`status`] == 'error') {\r\n                                                      \r\n                                                      this.dbService.onShowAlertMessage('Error', result[`statusMessage`]);\r\n                                                      \r\n                                                } else {\r\n                                                      \r\n                                                      this.data = {};\r\n                                                      this.activeTab = 2;\r\n                                                      this.onGetProjectDetail();\r\n                                                      this.dbService.presentToast('Contact Delete Successfully!');\r\n                                                }\r\n                                          });\r\n                                    }\r\n                              }\r\n                        ]\r\n                  });\r\n                  \r\n                  await alert.present();\r\n            }\r\n            \r\n            get f1() { return this.registerForm1.controls; }\r\n            \r\n      }\r\n      "],"sourceRoot":"webpack:///","file":"projectdetail-projectdetail-module-es5.js"}