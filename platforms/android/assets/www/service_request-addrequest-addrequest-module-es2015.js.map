{"version":3,"sources":["./src/app/customer_app/service_request/addrequest/addrequest.page.html","./src/app/customer_app/service_request/addrequest/addrequest-routing.module.ts","./src/app/customer_app/service_request/addrequest/addrequest.module.ts","./src/app/customer_app/service_request/addrequest/addrequest.page.scss","./src/app/customer_app/service_request/addrequest/addrequest.page.ts"],"names":[],"mappings":"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","file":"service_request-addrequest-addrequest-module-es2015.js","sourcesContent":["export default \"<ion-content >\\n    <div class=\\\"cs-main-container\\\">\\n        <div class=\\\"custome-head\\\">\\n            <div class=\\\"cs-ion-header\\\">\\n                <div class=\\\"cs-left\\\">\\n                    <ion-button [routerLink]=\\\"['/customer/request']\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\n                    <ion-title>Add Service Request</ion-title>\\n                </div>\\n            </div>\\n            <div class=\\\"cs-ion-hf\\\"></div>\\n        </div>\\n        \\n        <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"onSaveRequestHandler()\\\">\\n            \\n            <div class=\\\"cs-ion-content pt0\\\" padding>\\n                <div class=\\\"custome-filter dlform\\\">\\n                    <div class=\\\"fiter-data\\\">\\n                        \\n                        <div class=\\\"cs-right\\\">\\n                            <div class=\\\"common_form inner_page\\\">\\n                                <div class=\\\"heading\\\"><h1>Request Information</h1></div>\\n                                \\n                                <ion-item [ngClass]=\\\"submitted && f1.requestType.errors && f1.requestType.errors.required ? 'has-error' : (f1.requestType.errors && !f1.requestType.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\n                                    \\n                                    <ion-label>Request Type</ion-label>\\n                                    \\n                                    <ion-select formControlName=\\\"requestType\\\" [(ngModel)]=\\\"data.requestType\\\" (ngModelChange)=\\\"onRequestTypeChangeHandler()\\\" placeholder=\\\"Select Type\\\">\\n                                        <ion-select-option value=\\\"service_request\\\">Complaint</ion-select-option>\\n                                        <ion-select-option value=\\\"commissioning\\\">Commissioning</ion-select-option>\\n                                    </ion-select>\\n                                    \\n                                </ion-item>\\n\\n                                <ion-item  *ngIf = \\\"registerForm1.value['requestType']\\\"[ngClass]=\\\"submitted && f1.complaintTitle.errors && f1.complaintTitle.errors.required ? 'has-error' : (f1.complaintTitle.errors && !f1.complaintTitle.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\n                                    \\n                                    <ion-label>Complaint Title</ion-label>\\n\\n                                    <ion-select  *ngIf = \\\"registerForm1.value['requestType']  != 'commissioning'\\\" formControlName=\\\"complaintTitle\\\" [(ngModel)]=\\\"data.complaintTitle\\\" placeholder=\\\"Select Type\\\">\\n                                            <ion-select-option *ngFor=\\\"let row of complaintTypeList\\\" [value]=\\\"row.title\\\">{{row.title}}</ion-select-option>\\n                                            \\n                                    </ion-select>\\n\\n                                    <ion-select *ngIf = \\\"registerForm1.value['requestType']  != 'service_request'\\\" formControlName=\\\"complaintTitle\\\" [(ngModel)]=\\\"data.complaintTitle\\\" placeholder=\\\"Select Type\\\">\\n                                \\n                                            <ion-select-option  [value]=\\\"commissioning\\\">Commissioning</ion-select-option>\\n                                            \\n                                    </ion-select>\\n                                               \\n                                    \\n                                </ion-item>\\n\\n                                <ion-item  class=\\\"cs-select\\\" *ngIf = \\\"registerForm1.value['requestType']  != 'commissioning'\\\">\\n                            \\n                                    <ion-label>Nature Problem</ion-label>\\n                                    <ionic-selectable\\n                                    [(ngModel)]=\\\"data.natureProblem\\\"\\n                                    [items]=\\\"natureList\\\"\\n                                    itemValueField=\\\"nature\\\"\\n                                    itemTextField=\\\"nature\\\"\\n                                    formControlName=\\\"natureProblem\\\"\\n                                    [canSearch]=\\\"true\\\">\\n                                    \\n                                </ionic-selectable>\\n                                \\n                                </ion-item>\\n                                \\n                                <ion-item [ngClass]=\\\"submitted && f1.description.errors && f1.description.errors.required ? 'has-error' : (f1.description.errors && !f1.description.errors.required ? 'has-text' : '')\\\" class=\\\"h70\\\">\\n                                    <ion-textarea formControlName=\\\"description\\\" [(ngModel)]=\\\"data.description\\\" placeholder=\\\"Description\\\"></ion-textarea>\\n                                </ion-item>\\n                                \\n                                \\n                                <ion-item [ngClass]=\\\"submitted && f1.project.errors && f1.project.errors.required ? 'has-error' : (f1.project.errors && !f1.project.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\n                                    \\n                                    <ion-label>Project</ion-label>\\n                                    \\n                                    <ionic-selectable\\n                                    [(ngModel)]=\\\"data.project\\\"\\n                                    [items]=\\\"projectList\\\"\\n                                    itemValueField=\\\"id\\\"\\n                                    itemTextField=\\\"project_name\\\"\\n                                    formControlName=\\\"project\\\"\\n                                    [canSearch]=\\\"true\\\"\\n                                    (onChange)=\\\"onGetProjectFGListHandler()\\\">\\n                                    \\n                                </ionic-selectable>\\n                            </ion-item>\\n                        </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"data.project && data.project['project_name']\\\" class=\\\"cs-right mt20\\\">\\n                        <div class=\\\"common_form inner_page\\\">\\n                            <div class=\\\"heading\\\"><h1>Add Product Information</h1></div>\\n                            \\n                            <ion-item [ngClass]=\\\"submitted && f1.fgNo.errors  ? 'has-error' : (f1.fgNo.errors ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\n                                \\n                                <ion-label>FG No</ion-label>\\n                                <ionic-selectable\\n                                [(ngModel)]=\\\"data.fgNo\\\"\\n                                [items]=\\\"fgList\\\"\\n                                itemValueField=\\\"fg_no\\\"\\n                                itemTextField=\\\"fg_no\\\"\\n                                formControlName=\\\"fgNo\\\"\\n                                [canSearch]=\\\"true\\\">\\n                                \\n                            </ionic-selectable>\\n                            \\n                        </ion-item>\\n                       \\n                    \\n                    <div [hidden]=\\\"data.requestType == 'service_request' && productData.length > 0\\\" class=\\\"cs-btn mt16\\\" text-right>\\n                        <ion-button (click)=\\\"onAddProductToListHandler()\\\" class=\\\"success min w100\\\">Add to List</ion-button>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"complaints list mt20\\\">\\n                    \\n                    <div *ngFor=\\\"let row of productData; let index = index\\\" class=\\\"figure\\\">\\n                        <div class=\\\"cnt-info\\\">\\n                            <div class=\\\"cs-left\\\">\\n                                <div class=\\\"f-alpha\\\">{{row.fgNo[0]}}</div>\\n                                <div class=\\\"names\\\">\\n                                    <h1>{{row.fgNo}}</h1>\\n                                </div>\\n                            </div>\\n                            <div (click)=\\\"onDeleteProductHandler(index)\\\" class=\\\"cm-right\\\">\\n                                <a class=\\\"delete\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                </div> \\n            </div>\\n\\n            <div [hidden] = \\\"data.requestType == 'commissioning'\\\" class=\\\"cs-right mt20\\\">\\n                <div class=\\\"common_form inner_page\\\">\\n                    <div class=\\\"heading\\\"><h1>Service Type</h1></div>\\n                        <div class=\\\"dflex\\\">\\n\\n                            <ion-item  class=\\\"cs-select\\\">\\n                                            \\n                                <ion-label>Service Type</ion-label>\\n                                <ionic-selectable\\n                                [(ngModel)]=\\\"data.transaction_type\\\"\\n                                [items]=\\\"transactionTypeList\\\"\\n                                itemValueField=\\\"transaction_type\\\"\\n                                itemTextField=\\\"transaction_type\\\"\\n                                formControlName=\\\"transaction_type\\\"\\n                                [canSearch]=\\\"true\\\">\\n                                \\n                                </ionic-selectable>\\n            \\n                            </ion-item>\\n\\n                        </div>\\n                    </div>\\n                </div>   \\n\\n            <div class=\\\"cs-right mt20\\\">\\n                <div class=\\\"common_form inner_page\\\">\\n                    <div class=\\\"heading\\\"><h1>Engineer Visiting Date & Time</h1></div>\\n                    <div class=\\\"dflex\\\">\\n                        <ion-item [ngClass]=\\\"submitted && f1.visitDate.errors && f1.visitDate.errors.required ? 'has-error' : (f1.visitDate.errors && !f1.visitDate.errors.required ? 'has-text' : '')\\\" class=\\\"date-time mb0 mr10\\\">\\n                            <ion-label>Date</ion-label>\\n                            <ion-datetime formControlName=\\\"visitDate\\\" [(ngModel)]=\\\"data.visitDate\\\" displayFormat=\\\"DD-MMM-YYYY\\\" min=\\\"{{minDate}}\\\"></ion-datetime>\\n                            \\n                            <ion-text *ngIf=\\\"submitted && f1.visitDate.errors\\\" class=\\\"cs-error\\\">\\n                                \\n                            </ion-text>\\n                            \\n                        </ion-item>\\n                        \\n                        <ion-item [ngClass]=\\\"submitted && f1.visitTime.errors && f1.visitTime.errors.required ? 'has-error' : (f1.visitTime.errors && !f1.visitTime.errors.required ? 'has-text' : '')\\\" class=\\\"date-time\\\">\\n                            <ion-label>Time</ion-label>\\n                            <ion-datetime formControlName=\\\"visitTime\\\" [(ngModel)]=\\\"data.visitTime\\\" displayFormat=\\\"h:mm A\\\"></ion-datetime>\\n                            \\n                            <ion-text *ngIf=\\\"submitted && f1.visitTime.errors\\\" class=\\\"cs-error\\\">\\n                                \\n                            </ion-text>\\n                            \\n                        </ion-item>\\n                        \\n                        \\n                    </div>\\n                    \\n                </div>\\n            </div>\\n              \\n            <div class=\\\"cs-right mt20\\\">\\n                <div class=\\\"common_form inner_page\\\">\\n                    <div class=\\\"heading\\\"><h1>Contact Person Information</h1></div>\\n                </div>\\n                <div class=\\\"cs-checkbox\\\">\\n                    <ion-list>\\n                        <ion-item *ngFor=\\\"let row of contactList\\\">\\n                            <ion-label>{{row.name}} ({{row.designation}})</ion-label>\\n                            <ion-checkbox [(ngModel)]=\\\"row.checked\\\" formControlName=\\\"contactName\\\" slot=\\\"start\\\" color=\\\"success\\\"></ion-checkbox>\\n                        </ion-item>\\n                    </ion-list>\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"cs-btn mt20\\\">\\n                <ion-button type=\\\"submit\\\" class=\\\"success large\\\" expand=\\\"full\\\">SUBMIT</ion-button>\\n            </div>\\n        </div>\\n        \\n    </div>\\n    \\n</div>\\n\\n</form>\\n</div>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddrequestPage } from './addrequest.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddrequestPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddrequestPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddrequestPageRoutingModule } from './addrequest-routing.module';\n\nimport { AddrequestPage } from './addrequest.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicSelectableModule,\n    IonicModule,\n    AddrequestPageRoutingModule\n  ],\n  declarations: [AddrequestPage]\n})\nexport class AddrequestPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9zZXJ2aWNlX3JlcXVlc3QvYWRkcmVxdWVzdC9hZGRyZXF1ZXN0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoadingController, AlertController, ModalController } from '@ionic/angular';\nimport { DbServiceService } from 'src/app/db-service.service';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-addrequest',\n  templateUrl: './addrequest.page.html',\n  styleUrls: ['./addrequest.page.scss'],\n})\nexport class AddrequestPage implements OnInit {\n\n\n  data: any = {};\n  submitted: any = false;\n\n  contactList: any = [];\n  projectList: any = [];\n  fgList: any = [];\n  natureList : any = [];\n  priorityList : any = [];\n\n  transactionTypeList : any = [];\n\n  complaintTypeList: any = [];\n  productData: any = [];\n\n  registerForm1: FormGroup;\n  minDate: any  = '';\n\n  defaultActiveTitle = 'service_request';\n\n  constructor(public popoverController: PopoverController, \n              private route: Router,\n              public routeParams: ActivatedRoute,\n              private formBuilder: FormBuilder,\n              public alertCtrl: AlertController,\n              public modalController: ModalController,\n              public dbService: DbServiceService) {\n\n            this.data = {};\n            this.registerForm1 = this.formBuilder.group({\n\n                requestType: ['', [Validators.required]],\n                complaintTitle: ['', [Validators.required]],\n                description: ['', [Validators.minLength(5)]],\n                project: ['', [Validators.required]],\n                fgNo: [''],\n                natureProblem: [''],\n                visitDate: ['', [Validators.required]],\n                visitTime: ['', [Validators.required]],\n                contactName: [''],\n                transaction_type:[''],\n            });\n\n    \n            this.data = {\n                requestType: '',\n                complaintTitle: '',\n                description: '',\n                project: '',\n                fgNo: '',\n                natureProblem: '',\n                visitDate: '',\n                visitTime: '',\n                contactName: '',\n                transaction_type : '',\n            };\n\n            this.minDate = moment().format('YYYY-MM-DD');\n  }\n\n\n  ngOnInit() {\n\n      this.getComplaintTitleListHandler();\n      this.onGetMyProjectListHandler();\n      this.getNatureProbelmListHandler();\n      this.getPriorityListHandler();\n      this.getTransactionTypeListHandler();\n\n      // this.defaultActiveTitle = 'service_request';\n  }\n\n  async onRequestTypeChangeHandler(){\n\n\n        if (this.data.requestType == 'commissioning') {\n\n             this.data.transaction_type = {\n                transaction_type: 'commissioning'\n             };\n        } else {\n            this.data.transaction_type = '';\n        }\n\n        console.log(this.data.transaction_type);\n\n        \n  }\n\n\n  async onAddProductToListHandler() {    \n\n       if (!this.data.fgNo || !this.data.fgNo[`fg_no`]) {\n\n            if(!this.data.fgNo || !this.data.fgNo[`fg_no`]) {\n\n                this.dbService.onShowAlertMessage('Error', 'FG No Reuired');\n            }\n\n            console.log(this.data.fgNo);\n\n            return;\n\n       } else {\n\n          console.log(this.fgList);\n          console.log(this.data.fgNo);\n\n           const isFGExist = this.productData.findIndex(row => row.fgNo == this.data.fgNo.fg_no);\n\n           if (isFGExist === -1) {\n\n              this.productData.push({\n\n                  fgNo: this.data.fgNo[`fg_no`],\n              });\n\n           } else {\n\n               this.productData[isFGExist].fgNo = this.data.fgNo[`fg_no`];\n\n           }\n\n           console.log(this.productData);\n\n\n           this.data.fgNo = {};\n\n           this.dbService.presentToast('Product Update To List!');\n       }\n  }\n\n\n  async onSaveRequestHandler() {\n     \n      this.submitted = true;\n\n      // if (this.productData.length == 0) {\n\n      //     this.dbService.onShowAlertMessage('Error', 'No Product Information Added!');\n      //     return;\n      // }\n\n      let isContactSelected = false;\n\n      for (let index = 0; index < this.contactList.length; index++) {\n       \n            if(this.contactList[index].checked) {\n\n                 isContactSelected = true;\n            }\n      }\n\n      if (!isContactSelected) {\n\n          this.dbService.onShowAlertMessage('Error', 'No Contact Information Selected!');\n          return;\n      }\n\n      if (this.registerForm1.invalid) {\n\n          this.registerForm1.get('requestType').markAsTouched();\n          this.registerForm1.get('complaintTitle').markAsTouched();\n          this.registerForm1.get('description').markAsTouched();\n          this.registerForm1.get('project').markAsTouched();\n          this.registerForm1.get('fgNo').markAsTouched();\n          this.registerForm1.get('natureProblem').markAsTouched();\n          this.registerForm1.get('visitDate').markAsTouched();\n          this.registerForm1.get('visitTime').markAsTouched();\n          this.registerForm1.get('contactName').markAsTouched();\n          this.registerForm1.get('transaction_type').markAsTouched();\n\n\n      } else {\n\n          const alert = await this.alertCtrl.create({\n            header: 'Confirm',\n            message: 'Are You Sure, You Want To Save Request ?',\n            buttons: [\n                  {\n                    text: 'No',\n                    role: 'cancel',\n                    handler: () => {\n                      console.log('No clicked');\n                    }\n                  },\n                  {\n                    text: 'Yes',\n                    handler: () => {\n\n                          console.log('Yes clicked');\n\n                          const inputData = JSON.parse(JSON.stringify(this.data));\n                          inputData[`projectId`] = this.data.project[`id`];\n                          inputData[`projectName`] = this.data.project[`project_name`];\n\n                          inputData[`fgData`] = this.productData;\n                          inputData[`contactList`] = this.contactList;\n\n                          inputData[`visitDate`] = moment(this.data.visitDate).format('YYYY-MM-DD');\n                          inputData[`visitTime`] = moment(this.data.visitTime).format('hh:mm');\n\n                          inputData[`visitDateTime`] = inputData[`visitDate`] + ' ' + inputData[`visitTime`];\n\n                          inputData[`transactionType`] = this.data.transaction_type;\n\n                          this.dbService.presentLoader();\n\n                          console.log(inputData);\n\n                          this.dbService.onPostRequestHandler(inputData, 'customer/onSubmitTaskData').subscribe((result) => {\n\n                                console.log(result);\n                                this.dbService.dismissLoader();\n\n                                const routeURL = '/customer/request';\n                                this.route.navigate([routeURL]);\n\n                                this.dbService.presentToast('Request Saved Successfully!');\n                          });\n                    }\n                  }\n              ]\n          });\n\n          await alert.present();\n      }\n  }\n\n\n  async getComplaintTitleListHandler() {\n          \n      const inputData = {};\n\n      this.dbService.onPostRequestHandler(inputData, 'task/getComplaintTypeList').subscribe((result) => {\n            console.log(result);\n            this.complaintTypeList = result[`complaintTypeList`];\n      });\n       \n  }\n\n  async getNatureProbelmListHandler(){\n    \n    const inputData = {};\n\n    this.dbService.onPostRequestHandler(inputData, 'task/getNatureProbelmList').subscribe((result) => {\n        console.log(result);\n        this.natureList = result[`natureProbelmList`];\n        console.log(this.natureList);\n        \n    });\n\n  }\n  async getTransactionTypeListHandler(){\n\n    const inputData = {};\n\n    this.dbService.onPostRequestHandler(inputData, 'task/getTransactionTypeList').subscribe((result) => {\n        console.log(result);\n        this.transactionTypeList = result[`transactionTypeList`];\n\n\n        console.log(this.transactionTypeList);\n        \n    });\n\n\n  }\n\n  async getPriorityListHandler(){\n\n    const inputData = {};\n\n    this.dbService.onPostRequestHandler(inputData, 'task/getPriorityList').subscribe((result) => {\n        console.log(result);\n        this.priorityList = result[`priorityList`];\n        console.log(this.priorityList);\n    });\n  }\n\n\n  async onGetMyProjectListHandler() {\n\n      const inputData = {};\n\n      this.dbService.onPostRequestHandler(inputData, 'customer/getProjectList').subscribe((result) => {\n            console.log(result);\n            this.projectList = result[`projectContactList`];\n      });\n  }\n\n\n  async onGetProjectFGListHandler() {\n\n    this.fgList = [];\n    this.data.fgNo = {};\n    this.data.natureProblem = '';\n    this.productData = [];\n\n    const inputData = {};\n    inputData[`projectId`] = this.data.project[`id`];\n\n    this.dbService.presentLoader();\n    this.dbService.onPostRequestHandler(inputData, 'customer/getProjectFGList').subscribe((result) => {\n          console.log(result);\n          this.fgList = result[`fgList`];\n\n          this.dbService.dismissLoader();\n\n          this.onGetProjectContactHandler();\n    });\n  }\n\n\n\n  async onGetProjectContactHandler() {\n\n    const inputData = {\n         projectId: this.data.project[`id`]\n    };\n\n    this.dbService.onPostRequestHandler(inputData, 'task/onGetTaskProjectAllContactList').subscribe((result) => {\n\n          console.log(result);\n          this.contactList = result[`contactList`];\n\n    });\n  }\n\n  async onDeleteProductHandler(index) {\n\n    const alert = await this.alertCtrl.create({\n      header: 'Confirm',\n      message: 'Are You Sure, You Want To Delete Product ?',\n      buttons: [\n            {\n              text: 'No',\n              role: 'cancel',\n              handler: () => {\n                console.log('No clicked');\n              }\n            },\n            {\n              text: 'Yes',\n              handler: () => {\n\n                    console.log('Yes clicked');\n\n                    this.productData.splice(index, 1);\n                    this.dbService.presentToast('Product Deleted Successfully!');\n              }\n            }\n        ]\n    });\n\n    await alert.present();\n  }\n\n  ionViewWillEnter() {\n\n      this.data = {};\n  }\n\n\n\n\n\n  get f1() { return this.registerForm1.controls; }\n\n}\n"],"sourceRoot":"webpack:///"}