{"version":3,"sources":["src/app/customer_app/service_request/addrequest/addrequest.page.html","src/app/customer_app/service_request/addrequest/addrequest-routing.module.ts","src/app/customer_app/service_request/addrequest/addrequest.module.ts","src/app/customer_app/service_request/addrequest/addrequest.page.scss","src/app/customer_app/service_request/addrequest/addrequest.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content >\\n    <div class=\\\"cs-main-container\\\">\\n        <div class=\\\"custome-head\\\">\\n            <div class=\\\"cs-ion-header\\\">\\n                <div class=\\\"cs-left\\\">\\n                    <ion-button [routerLink]=\\\"['/customer/request']\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\n                    <ion-title>Add Service Request</ion-title>\\n                </div>\\n            </div>\\n            <div class=\\\"cs-ion-hf\\\"></div>\\n        </div>\\n        \\n        <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"onSaveRequestHandler()\\\">\\n            \\n            <div class=\\\"cs-ion-content pt0\\\" padding>\\n                <div class=\\\"custome-filter dlform\\\">\\n                    <div class=\\\"fiter-data\\\">\\n                        \\n                        <div class=\\\"cs-right\\\">\\n                            <div class=\\\"common_form inner_page\\\">\\n                                <div class=\\\"heading\\\"><h1>Request Information</h1></div>\\n                                \\n                                <ion-item [ngClass]=\\\"submitted && f1.requestType.errors && f1.requestType.errors.required ? 'has-error' : (f1.requestType.errors && !f1.requestType.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\n                                    \\n                                    <ion-label>Request Type</ion-label>\\n                                    \\n                                    <ion-select formControlName=\\\"requestType\\\" [(ngModel)]=\\\"data.requestType\\\" (ngModelChange)=\\\"onRequestTypeChangeHandler()\\\" placeholder=\\\"Select Type\\\">\\n                                        <ion-select-option value=\\\"service_request\\\">Complaint</ion-select-option>\\n                                        <ion-select-option value=\\\"commissioning\\\">Commissioning</ion-select-option>\\n                                    </ion-select>\\n                                    \\n                                </ion-item>\\n\\n                                <ion-item  *ngIf = \\\"registerForm1.value['requestType']\\\"[ngClass]=\\\"submitted && f1.complaintTitle.errors && f1.complaintTitle.errors.required ? 'has-error' : (f1.complaintTitle.errors && !f1.complaintTitle.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\n                                    \\n                                    <ion-label>Complaint Title</ion-label>\\n\\n                                    <ion-select  *ngIf = \\\"registerForm1.value['requestType']  != 'commissioning'\\\" formControlName=\\\"complaintTitle\\\" [(ngModel)]=\\\"data.complaintTitle\\\" placeholder=\\\"Select Type\\\">\\n                                            <ion-select-option *ngFor=\\\"let row of complaintTypeList\\\" [value]=\\\"row.title\\\">{{row.title}}</ion-select-option>\\n                                            \\n                                    </ion-select>\\n\\n                                    <ion-select *ngIf = \\\"registerForm1.value['requestType']  != 'service_request'\\\" formControlName=\\\"complaintTitle\\\" [(ngModel)]=\\\"data.complaintTitle\\\" placeholder=\\\"Select Type\\\">\\n                                \\n                                            <ion-select-option  [value]=\\\"commissioning\\\">Commissioning</ion-select-option>\\n                                            \\n                                    </ion-select>\\n                                               \\n                                    \\n                                </ion-item>\\n\\n                                <ion-item  class=\\\"cs-select\\\" *ngIf = \\\"registerForm1.value['requestType']  != 'commissioning'\\\">\\n                            \\n                                    <ion-label>Nature Problem</ion-label>\\n                                    <ionic-selectable\\n                                    [(ngModel)]=\\\"data.natureProblem\\\"\\n                                    [items]=\\\"natureList\\\"\\n                                    itemValueField=\\\"nature\\\"\\n                                    itemTextField=\\\"nature\\\"\\n                                    formControlName=\\\"natureProblem\\\"\\n                                    [canSearch]=\\\"true\\\">\\n                                    \\n                                </ionic-selectable>\\n                                \\n                                </ion-item>\\n                                \\n                                <ion-item [ngClass]=\\\"submitted && f1.description.errors && f1.description.errors.required ? 'has-error' : (f1.description.errors && !f1.description.errors.required ? 'has-text' : '')\\\" class=\\\"h70\\\">\\n                                    <ion-textarea formControlName=\\\"description\\\" [(ngModel)]=\\\"data.description\\\" placeholder=\\\"Description\\\"></ion-textarea>\\n                                </ion-item>\\n                                \\n                                \\n                                <ion-item [ngClass]=\\\"submitted && f1.project.errors && f1.project.errors.required ? 'has-error' : (f1.project.errors && !f1.project.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\n                                    \\n                                    <ion-label>Project</ion-label>\\n                                    \\n                                    <ionic-selectable\\n                                    [(ngModel)]=\\\"data.project\\\"\\n                                    [items]=\\\"projectList\\\"\\n                                    itemValueField=\\\"id\\\"\\n                                    itemTextField=\\\"project_name\\\"\\n                                    formControlName=\\\"project\\\"\\n                                    [canSearch]=\\\"true\\\"\\n                                    (onChange)=\\\"onGetProjectFGListHandler()\\\">\\n                                    \\n                                </ionic-selectable>\\n                            </ion-item>\\n                        </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"data.project && data.project['project_name']\\\" class=\\\"cs-right mt20\\\">\\n                        <div class=\\\"common_form inner_page\\\">\\n                            <div class=\\\"heading\\\"><h1>Add Product Information</h1></div>\\n                            \\n                            <ion-item [ngClass]=\\\"submitted && f1.fgNo.errors  ? 'has-error' : (f1.fgNo.errors ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\n                                \\n                                <ion-label>FG No</ion-label>\\n                                <ionic-selectable\\n                                [(ngModel)]=\\\"data.fgNo\\\"\\n                                [items]=\\\"fgList\\\"\\n                                itemValueField=\\\"fg_no\\\"\\n                                itemTextField=\\\"fg_no\\\"\\n                                formControlName=\\\"fgNo\\\"\\n                                [canSearch]=\\\"true\\\">\\n                                \\n                            </ionic-selectable>\\n                            \\n                        </ion-item>\\n                       \\n                    \\n                    <div [hidden]=\\\"data.requestType == 'service_request' && productData.length > 0\\\" class=\\\"cs-btn mt16\\\" text-right>\\n                        <ion-button (click)=\\\"onAddProductToListHandler()\\\" class=\\\"success min w100\\\">Add to List</ion-button>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"complaints list mt20\\\">\\n                    \\n                    <div *ngFor=\\\"let row of productData; let index = index\\\" class=\\\"figure\\\">\\n                        <div class=\\\"cnt-info\\\">\\n                            <div class=\\\"cs-left\\\">\\n                                <div class=\\\"f-alpha\\\">{{row.fgNo[0]}}</div>\\n                                <div class=\\\"names\\\">\\n                                    <h1>{{row.fgNo}}</h1>\\n                                </div>\\n                            </div>\\n                            <div (click)=\\\"onDeleteProductHandler(index)\\\" class=\\\"cm-right\\\">\\n                                <a class=\\\"delete\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                </div> \\n            </div>\\n\\n            <div [hidden] = \\\"data.requestType == 'commissioning'\\\" class=\\\"cs-right mt20\\\">\\n                <div class=\\\"common_form inner_page\\\">\\n                    <div class=\\\"heading\\\"><h1>Service Type</h1></div>\\n                        <div class=\\\"dflex\\\">\\n\\n                            <ion-item  class=\\\"cs-select\\\">\\n                                            \\n                                <ion-label>Service Type</ion-label>\\n                                <ionic-selectable\\n                                [(ngModel)]=\\\"data.transaction_type\\\"\\n                                [items]=\\\"transactionTypeList\\\"\\n                                itemValueField=\\\"transaction_type\\\"\\n                                itemTextField=\\\"transaction_type\\\"\\n                                formControlName=\\\"transaction_type\\\"\\n                                [canSearch]=\\\"true\\\">\\n                                \\n                                </ionic-selectable>\\n            \\n                            </ion-item>\\n\\n                        </div>\\n                    </div>\\n                </div>   \\n\\n            <div class=\\\"cs-right mt20\\\">\\n                <div class=\\\"common_form inner_page\\\">\\n                    <div class=\\\"heading\\\"><h1>Engineer Visiting Date & Time</h1></div>\\n                    <div class=\\\"dflex\\\">\\n                        <ion-item [ngClass]=\\\"submitted && f1.visitDate.errors && f1.visitDate.errors.required ? 'has-error' : (f1.visitDate.errors && !f1.visitDate.errors.required ? 'has-text' : '')\\\" class=\\\"date-time mb0 mr10\\\">\\n                            <ion-label>Date</ion-label>\\n                            <ion-datetime formControlName=\\\"visitDate\\\" [(ngModel)]=\\\"data.visitDate\\\" displayFormat=\\\"DD-MMM-YYYY\\\" min=\\\"{{minDate}}\\\"></ion-datetime>\\n                            \\n                            <ion-text *ngIf=\\\"submitted && f1.visitDate.errors\\\" class=\\\"cs-error\\\">\\n                                \\n                            </ion-text>\\n                            \\n                        </ion-item>\\n                        \\n                        <ion-item [ngClass]=\\\"submitted && f1.visitTime.errors && f1.visitTime.errors.required ? 'has-error' : (f1.visitTime.errors && !f1.visitTime.errors.required ? 'has-text' : '')\\\" class=\\\"date-time\\\">\\n                            <ion-label>Time</ion-label>\\n                            <ion-datetime formControlName=\\\"visitTime\\\" [(ngModel)]=\\\"data.visitTime\\\" displayFormat=\\\"h:mm A\\\"></ion-datetime>\\n                            \\n                            <ion-text *ngIf=\\\"submitted && f1.visitTime.errors\\\" class=\\\"cs-error\\\">\\n                                \\n                            </ion-text>\\n                            \\n                        </ion-item>\\n                        \\n                        \\n                    </div>\\n                    \\n                </div>\\n            </div>\\n              \\n            <div class=\\\"cs-right mt20\\\">\\n                <div class=\\\"common_form inner_page\\\">\\n                    <div class=\\\"heading\\\"><h1>Contact Person Information</h1></div>\\n                </div>\\n                <div class=\\\"cs-checkbox\\\">\\n                    <ion-list>\\n                        <ion-item *ngFor=\\\"let row of contactList\\\">\\n                            <ion-label>{{row.name}} ({{row.designation}})</ion-label>\\n                            <ion-checkbox [(ngModel)]=\\\"row.checked\\\" formControlName=\\\"contactName\\\" slot=\\\"start\\\" color=\\\"success\\\"></ion-checkbox>\\n                        </ion-item>\\n                    </ion-list>\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"cs-btn mt20\\\">\\n                <ion-button type=\\\"submit\\\" class=\\\"success large\\\" expand=\\\"full\\\">SUBMIT</ion-button>\\n            </div>\\n        </div>\\n        \\n    </div>\\n    \\n</div>\\n\\n</form>\\n</div>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddrequestPage } from './addrequest.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddrequestPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddrequestPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddrequestPageRoutingModule } from './addrequest-routing.module';\n\nimport { AddrequestPage } from './addrequest.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicSelectableModule,\n    IonicModule,\n    AddrequestPageRoutingModule\n  ],\n  declarations: [AddrequestPage]\n})\nexport class AddrequestPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9zZXJ2aWNlX3JlcXVlc3QvYWRkcmVxdWVzdC9hZGRyZXF1ZXN0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoadingController, AlertController, ModalController } from '@ionic/angular';\nimport { DbServiceService } from 'src/app/db-service.service';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-addrequest',\n  templateUrl: './addrequest.page.html',\n  styleUrls: ['./addrequest.page.scss'],\n})\nexport class AddrequestPage implements OnInit {\n\n\n  data: any = {};\n  submitted: any = false;\n\n  contactList: any = [];\n  projectList: any = [];\n  fgList: any = [];\n  natureList : any = [];\n  priorityList : any = [];\n\n  transactionTypeList : any = [];\n\n  complaintTypeList: any = [];\n  productData: any = [];\n\n  registerForm1: FormGroup;\n  minDate: any  = '';\n\n  defaultActiveTitle = 'service_request';\n\n  constructor(public popoverController: PopoverController, \n              private route: Router,\n              public routeParams: ActivatedRoute,\n              private formBuilder: FormBuilder,\n              public alertCtrl: AlertController,\n              public modalController: ModalController,\n              public dbService: DbServiceService) {\n\n            this.data = {};\n            this.registerForm1 = this.formBuilder.group({\n\n                requestType: ['', [Validators.required]],\n                complaintTitle: ['', [Validators.required]],\n                description: ['', [Validators.minLength(5)]],\n                project: ['', [Validators.required]],\n                fgNo: [''],\n                natureProblem: [''],\n                visitDate: ['', [Validators.required]],\n                visitTime: ['', [Validators.required]],\n                contactName: [''],\n                transaction_type:[''],\n            });\n\n    \n            this.data = {\n                requestType: '',\n                complaintTitle: '',\n                description: '',\n                project: '',\n                fgNo: '',\n                natureProblem: '',\n                visitDate: '',\n                visitTime: '',\n                contactName: '',\n                transaction_type : '',\n            };\n\n            this.minDate = moment().format('YYYY-MM-DD');\n  }\n\n\n  ngOnInit() {\n\n      this.getComplaintTitleListHandler();\n      this.onGetMyProjectListHandler();\n      this.getNatureProbelmListHandler();\n      this.getPriorityListHandler();\n      this.getTransactionTypeListHandler();\n\n      // this.defaultActiveTitle = 'service_request';\n  }\n\n  async onRequestTypeChangeHandler(){\n\n\n        if (this.data.requestType == 'commissioning') {\n\n             this.data.transaction_type = {\n                transaction_type: 'commissioning'\n             };\n        } else {\n            this.data.transaction_type = '';\n        }\n\n        console.log(this.data.transaction_type);\n\n        \n  }\n\n\n  async onAddProductToListHandler() {    \n\n       if (!this.data.fgNo || !this.data.fgNo[`fg_no`]) {\n\n            if(!this.data.fgNo || !this.data.fgNo[`fg_no`]) {\n\n                this.dbService.onShowAlertMessage('Error', 'FG No Reuired');\n            }\n\n            console.log(this.data.fgNo);\n\n            return;\n\n       } else {\n\n          console.log(this.fgList);\n          console.log(this.data.fgNo);\n\n           const isFGExist = this.productData.findIndex(row => row.fgNo == this.data.fgNo.fg_no);\n\n           if (isFGExist === -1) {\n\n              this.productData.push({\n\n                  fgNo: this.data.fgNo[`fg_no`],\n              });\n\n           } else {\n\n               this.productData[isFGExist].fgNo = this.data.fgNo[`fg_no`];\n\n           }\n\n           console.log(this.productData);\n\n\n           this.data.fgNo = {};\n\n           this.dbService.presentToast('Product Update To List!');\n       }\n  }\n\n\n  async onSaveRequestHandler() {\n     \n      this.submitted = true;\n\n      // if (this.productData.length == 0) {\n\n      //     this.dbService.onShowAlertMessage('Error', 'No Product Information Added!');\n      //     return;\n      // }\n\n      let isContactSelected = false;\n\n      for (let index = 0; index < this.contactList.length; index++) {\n       \n            if(this.contactList[index].checked) {\n\n                 isContactSelected = true;\n            }\n      }\n\n      if (!isContactSelected) {\n\n          this.dbService.onShowAlertMessage('Error', 'No Contact Information Selected!');\n          return;\n      }\n\n      if (this.registerForm1.invalid) {\n\n          this.registerForm1.get('requestType').markAsTouched();\n          this.registerForm1.get('complaintTitle').markAsTouched();\n          this.registerForm1.get('description').markAsTouched();\n          this.registerForm1.get('project').markAsTouched();\n          this.registerForm1.get('fgNo').markAsTouched();\n          this.registerForm1.get('natureProblem').markAsTouched();\n          this.registerForm1.get('visitDate').markAsTouched();\n          this.registerForm1.get('visitTime').markAsTouched();\n          this.registerForm1.get('contactName').markAsTouched();\n          this.registerForm1.get('transaction_type').markAsTouched();\n\n\n      } else {\n\n          const alert = await this.alertCtrl.create({\n            header: 'Confirm',\n            message: 'Are You Sure, You Want To Save Request ?',\n            buttons: [\n                  {\n                    text: 'No',\n                    role: 'cancel',\n                    handler: () => {\n                      console.log('No clicked');\n                    }\n                  },\n                  {\n                    text: 'Yes',\n                    handler: () => {\n\n                          console.log('Yes clicked');\n\n                          const inputData = JSON.parse(JSON.stringify(this.data));\n                          inputData[`projectId`] = this.data.project[`id`];\n                          inputData[`projectName`] = this.data.project[`project_name`];\n\n                          inputData[`fgData`] = this.productData;\n                          inputData[`contactList`] = this.contactList;\n\n                          inputData[`visitDate`] = moment(this.data.visitDate).format('YYYY-MM-DD');\n                          inputData[`visitTime`] = moment(this.data.visitTime).format('hh:mm');\n\n                          inputData[`visitDateTime`] = inputData[`visitDate`] + ' ' + inputData[`visitTime`];\n\n                          inputData[`transactionType`] = this.data.transaction_type;\n\n                          this.dbService.presentLoader();\n\n                          console.log(inputData);\n\n                          this.dbService.onPostRequestHandler(inputData, 'customer/onSubmitTaskData').subscribe((result) => {\n\n                                console.log(result);\n                                this.dbService.dismissLoader();\n\n                                const routeURL = '/customer/request';\n                                this.route.navigate([routeURL]);\n\n                                this.dbService.presentToast('Request Saved Successfully!');\n                          });\n                    }\n                  }\n              ]\n          });\n\n          await alert.present();\n      }\n  }\n\n\n  async getComplaintTitleListHandler() {\n          \n      const inputData = {};\n\n      this.dbService.onPostRequestHandler(inputData, 'task/getComplaintTypeList').subscribe((result) => {\n            console.log(result);\n            this.complaintTypeList = result[`complaintTypeList`];\n      });\n       \n  }\n\n  async getNatureProbelmListHandler(){\n    \n    const inputData = {};\n\n    this.dbService.onPostRequestHandler(inputData, 'task/getNatureProbelmList').subscribe((result) => {\n        console.log(result);\n        this.natureList = result[`natureProbelmList`];\n        console.log(this.natureList);\n        \n    });\n\n  }\n  async getTransactionTypeListHandler(){\n\n    const inputData = {};\n\n    this.dbService.onPostRequestHandler(inputData, 'task/getTransactionTypeList').subscribe((result) => {\n        console.log(result);\n        this.transactionTypeList = result[`transactionTypeList`];\n\n\n        console.log(this.transactionTypeList);\n        \n    });\n\n\n  }\n\n  async getPriorityListHandler(){\n\n    const inputData = {};\n\n    this.dbService.onPostRequestHandler(inputData, 'task/getPriorityList').subscribe((result) => {\n        console.log(result);\n        this.priorityList = result[`priorityList`];\n        console.log(this.priorityList);\n    });\n  }\n\n\n  async onGetMyProjectListHandler() {\n\n      const inputData = {};\n\n      this.dbService.onPostRequestHandler(inputData, 'customer/getProjectList').subscribe((result) => {\n            console.log(result);\n            this.projectList = result[`projectContactList`];\n      });\n  }\n\n\n  async onGetProjectFGListHandler() {\n\n    this.fgList = [];\n    this.data.fgNo = {};\n    this.data.natureProblem = '';\n    this.productData = [];\n\n    const inputData = {};\n    inputData[`projectId`] = this.data.project[`id`];\n\n    this.dbService.presentLoader();\n    this.dbService.onPostRequestHandler(inputData, 'customer/getProjectFGList').subscribe((result) => {\n          console.log(result);\n          this.fgList = result[`fgList`];\n\n          this.dbService.dismissLoader();\n\n          this.onGetProjectContactHandler();\n    });\n  }\n\n\n\n  async onGetProjectContactHandler() {\n\n    const inputData = {\n         projectId: this.data.project[`id`]\n    };\n\n    this.dbService.onPostRequestHandler(inputData, 'task/onGetTaskProjectAllContactList').subscribe((result) => {\n\n          console.log(result);\n          this.contactList = result[`contactList`];\n\n    });\n  }\n\n  async onDeleteProductHandler(index) {\n\n    const alert = await this.alertCtrl.create({\n      header: 'Confirm',\n      message: 'Are You Sure, You Want To Delete Product ?',\n      buttons: [\n            {\n              text: 'No',\n              role: 'cancel',\n              handler: () => {\n                console.log('No clicked');\n              }\n            },\n            {\n              text: 'Yes',\n              handler: () => {\n\n                    console.log('Yes clicked');\n\n                    this.productData.splice(index, 1);\n                    this.dbService.presentToast('Product Deleted Successfully!');\n              }\n            }\n        ]\n    });\n\n    await alert.present();\n  }\n\n  ionViewWillEnter() {\n\n      this.data = {};\n  }\n\n\n\n\n\n  get f1() { return this.registerForm1.controls; }\n\n}\n"],"sourceRoot":"webpack:///","file":"service_request-addrequest-addrequest-module-es5.js"}