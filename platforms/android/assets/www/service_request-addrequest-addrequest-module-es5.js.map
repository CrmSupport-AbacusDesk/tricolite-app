{"version":3,"sources":["src/app/customer_app/service_request/addrequest/addrequest.page.html","src/app/customer_app/service_request/addrequest/addrequest-routing.module.ts","src/app/customer_app/service_request/addrequest/addrequest.module.ts","src/app/customer_app/service_request/addrequest/addrequest.page.scss","src/app/customer_app/service_request/addrequest/addrequest.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content >\\r\\n    <div class=\\\"cs-main-container\\\">\\r\\n        <div class=\\\"custome-head\\\">\\r\\n            <div class=\\\"cs-ion-header\\\">\\r\\n                <div class=\\\"cs-left\\\">\\r\\n                    <ion-button [routerLink]=\\\"['/customer/request']\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\r\\n                    <ion-title>Add Service Request</ion-title>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"cs-ion-hf\\\"></div>\\r\\n        </div>\\r\\n        \\r\\n        <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"onSaveRequestHandler()\\\">\\r\\n            \\r\\n            <div class=\\\"cs-ion-content pt0\\\" padding>\\r\\n                <div class=\\\"custome-filter dlform\\\">\\r\\n                    <div class=\\\"fiter-data\\\">\\r\\n                        \\r\\n                        <div class=\\\"cs-right\\\">\\r\\n                            <div class=\\\"common_form inner_page\\\">\\r\\n                                <div class=\\\"heading\\\"><h1>Request Information</h1></div>\\r\\n                                \\r\\n                                <ion-item [ngClass]=\\\"submitted && f1.requestType.errors && f1.requestType.errors.required ? 'has-error' : (f1.requestType.errors && !f1.requestType.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\r\\n                                    \\r\\n                                    <ion-label>Request Type</ion-label>\\r\\n                                    \\r\\n                                    <ion-select formControlName=\\\"requestType\\\" [(ngModel)]=\\\"data.requestType\\\" (ngModelChange)=\\\"onRequestTypeChangeHandler()\\\" placeholder=\\\"Select Type\\\">\\r\\n                                        <ion-select-option value=\\\"service_request\\\"> Service Request</ion-select-option>\\r\\n                                        <ion-select-option value=\\\"commissioning\\\">Commissioning</ion-select-option>\\r\\n                                    </ion-select>\\r\\n                                    \\r\\n                                </ion-item>\\r\\n\\r\\n                                <ion-item  *ngIf = \\\"registerForm1.value['requestType']\\\"[ngClass]=\\\"submitted && f1.complaintTitle.errors && f1.complaintTitle.errors.required ? 'has-error' : (f1.complaintTitle.errors && !f1.complaintTitle.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\r\\n                                    \\r\\n                                    <ion-label> Issue Category</ion-label>\\r\\n\\r\\n                                    <ion-select class=\\\"test\\\"  *ngIf = \\\"registerForm1.value['requestType']  != 'commissioning'\\\" formControlName=\\\"complaintTitle\\\" [(ngModel)]=\\\"data.complaintTitle\\\" placeholder=\\\"Select Type\\\">\\r\\n                                            <ion-select-option *ngFor=\\\"let row of complaintTypeList\\\" [value]=\\\"row.title\\\">{{row.title}}</ion-select-option>\\r\\n                                            \\r\\n                                    </ion-select>\\r\\n\\r\\n                                    <ion-select *ngIf = \\\"registerForm1.value['requestType']  != 'service_request'\\\" formControlName=\\\"complaintTitle\\\" [(ngModel)]=\\\"data.complaintTitle\\\" placeholder=\\\"Select Type\\\">\\r\\n                                \\r\\n                                            <ion-select-option  [value]=\\\"commissioning\\\">Commissioning</ion-select-option>\\r\\n                                            \\r\\n                                    </ion-select>\\r\\n                                               \\r\\n                                    \\r\\n                                </ion-item>\\r\\n\\r\\n                                <ion-item  class=\\\"cs-select\\\" *ngIf = \\\"registerForm1.value['requestType']  != 'commissioning'\\\">\\r\\n                            \\r\\n                                    <ion-label>Nature of Issue</ion-label>\\r\\n                                    <ionic-selectable\\r\\n                                    [(ngModel)]=\\\"data.natureProblem\\\"\\r\\n                                    [items]=\\\"natureList\\\"\\r\\n                                    itemValueField=\\\"nature\\\"\\r\\n                                    itemTextField=\\\"nature\\\"\\r\\n                                    formControlName=\\\"natureProblem\\\"\\r\\n                                    [canSearch]=\\\"true\\\">\\r\\n                                    \\r\\n                                </ionic-selectable>\\r\\n                                \\r\\n                                </ion-item>\\r\\n                                \\r\\n                                <ion-item [ngClass]=\\\"submitted && f1.description.errors && f1.description.errors.required ? 'has-error' : (f1.description.errors && !f1.description.errors.required ? 'has-text' : '')\\\" class=\\\"h70\\\">\\r\\n                                    <ion-label position=\\\"floating\\\"><strong>Description</strong></ion-label>\\r\\n\\r\\n                                    <ion-textarea formControlName=\\\"description\\\" [(ngModel)]=\\\"data.description\\\"></ion-textarea>\\r\\n                                </ion-item>\\r\\n                                \\r\\n                                \\r\\n                                <ion-item [ngClass]=\\\"submitted && f1.project.errors && f1.project.errors.required ? 'has-error' : (f1.project.errors && !f1.project.errors.required ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\r\\n                                    \\r\\n                                    <ion-label>Project</ion-label>\\r\\n                                    \\r\\n                                    <ionic-selectable\\r\\n                                    [(ngModel)]=\\\"data.project\\\"\\r\\n                                    [items]=\\\"projectList\\\"\\r\\n                                    itemValueField=\\\"id\\\"\\r\\n                                    itemTextField=\\\"project_name\\\"\\r\\n                                    formControlName=\\\"project\\\"\\r\\n                                    [canSearch]=\\\"true\\\"\\r\\n                                    (onChange)=\\\"onGetProjectFGListHandler()\\\">\\r\\n                                    \\r\\n                                </ionic-selectable>\\r\\n                            </ion-item>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div *ngIf=\\\"data.project && data.project['project_name']\\\" class=\\\"cs-right mt20\\\">\\r\\n                        <div class=\\\"common_form inner_page\\\">\\r\\n                            <div class=\\\"heading\\\"><h1>Add Product Information</h1></div>\\r\\n                            \\r\\n                            <ion-item [ngClass]=\\\"submitted && f1.fgNo.errors  ? 'has-error' : (f1.fgNo.errors ? 'has-text' : '')\\\" class=\\\"cs-select\\\">\\r\\n                                \\r\\n                                <ion-label>FG No</ion-label>\\r\\n                                <ionic-selectable\\r\\n                                [(ngModel)]=\\\"data.fgNo\\\"\\r\\n                                [items]=\\\"fgList\\\"\\r\\n                                itemValueField=\\\"fg_no\\\"\\r\\n                                itemTextField=\\\"fg_no\\\"\\r\\n                                formControlName=\\\"fgNo\\\"\\r\\n                                [canSearch]=\\\"true\\\">\\r\\n                                \\r\\n                            </ionic-selectable>\\r\\n                            \\r\\n                        </ion-item>\\r\\n                       \\r\\n                    \\r\\n                    <div [hidden]=\\\"data.requestType == 'service_request' && productData.length > 0\\\" class=\\\"cs-btn mt16\\\" text-right>\\r\\n                        <ion-button (click)=\\\"onAddProductToListHandler()\\\" class=\\\"success min w100\\\">Add to List</ion-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"complaints list mt20\\\">\\r\\n                    \\r\\n                    <div *ngFor=\\\"let row of productData; let index = index\\\" class=\\\"figure\\\">\\r\\n                        <div class=\\\"cnt-info\\\">\\r\\n                            <div class=\\\"cs-left\\\">\\r\\n                                <div class=\\\"f-alpha\\\">{{row.fgNo[0]}}</div>\\r\\n                                <div class=\\\"names\\\">\\r\\n                                    <h1>{{row.fgNo}}</h1>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div (click)=\\\"onDeleteProductHandler(index)\\\" class=\\\"cm-right\\\">\\r\\n                                <a class=\\\"delete\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                </div> \\r\\n            </div>\\r\\n\\r\\n            <div [hidden] = \\\"data.requestType == 'commissioning'\\\" class=\\\"cs-right mt20\\\">\\r\\n                <div class=\\\"common_form inner_page\\\">\\r\\n                    <div class=\\\"heading\\\"><h1>Service Type</h1></div>\\r\\n                        <div class=\\\"dflex\\\">\\r\\n\\r\\n                            <ion-item  class=\\\"cs-select\\\">\\r\\n                                            \\r\\n                                <ion-label>Service Type</ion-label>\\r\\n                                <ionic-selectable\\r\\n                                [(ngModel)]=\\\"data.transaction_type\\\"\\r\\n                                [items]=\\\"transactionTypeList\\\"\\r\\n                                itemValueField=\\\"transaction_type\\\"\\r\\n                                itemTextField=\\\"transaction_type\\\"\\r\\n                                formControlName=\\\"transaction_type\\\"\\r\\n                                [canSearch]=\\\"true\\\">\\r\\n                                \\r\\n                                </ionic-selectable>\\r\\n            \\r\\n                            </ion-item>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>   \\r\\n\\r\\n            <div class=\\\"cs-right mt20\\\">\\r\\n                <div class=\\\"common_form inner_page\\\">\\r\\n                    <div class=\\\"heading\\\"><h1>Engineer Visiting Date & Time</h1></div>\\r\\n                    <div class=\\\"dflex\\\">\\r\\n                        <ion-item [ngClass]=\\\"submitted && f1.visitDate.errors && f1.visitDate.errors.required ? 'has-error' : (f1.visitDate.errors && !f1.visitDate.errors.required ? 'has-text' : '')\\\" class=\\\"date-time mb0 mr10\\\">\\r\\n                            <ion-label>Date</ion-label>\\r\\n                            <ion-datetime formControlName=\\\"visitDate\\\" [(ngModel)]=\\\"data.visitDate\\\" displayFormat=\\\"DD-MMM-YYYY\\\" min=\\\"{{minDate}}\\\"></ion-datetime>\\r\\n                            \\r\\n                            <ion-text *ngIf=\\\"submitted && f1.visitDate.errors\\\" class=\\\"cs-error\\\">\\r\\n                                \\r\\n                            </ion-text>\\r\\n                            \\r\\n                        </ion-item>\\r\\n                        \\r\\n                        <ion-item [ngClass]=\\\"submitted && f1.visitTime.errors && f1.visitTime.errors.required ? 'has-error' : (f1.visitTime.errors && !f1.visitTime.errors.required ? 'has-text' : '')\\\" class=\\\"date-time\\\">\\r\\n                            <ion-label>Time</ion-label>\\r\\n                            <ion-datetime formControlName=\\\"visitTime\\\" [(ngModel)]=\\\"data.visitTime\\\" displayFormat=\\\"h:mm A\\\"></ion-datetime>\\r\\n                            \\r\\n                            <ion-text *ngIf=\\\"submitted && f1.visitTime.errors\\\" class=\\\"cs-error\\\">\\r\\n                                \\r\\n                            </ion-text>\\r\\n                            \\r\\n                        </ion-item>\\r\\n                        \\r\\n                        \\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n              \\r\\n            <div class=\\\"cs-right mt20\\\">\\r\\n                <div class=\\\"common_form inner_page\\\">\\r\\n                    <div class=\\\"heading\\\"><h1>Contact Person Information</h1></div>\\r\\n                </div>\\r\\n                <div class=\\\"cs-checkbox\\\">\\r\\n                    <ion-list>\\r\\n                        <ion-item *ngFor=\\\"let row of contactList\\\">\\r\\n                            <ion-label>{{row.name}} ({{row.designation}})</ion-label>\\r\\n                            <ion-checkbox [(ngModel)]=\\\"row.checked\\\" formControlName=\\\"contactName\\\" slot=\\\"start\\\" color=\\\"success\\\"></ion-checkbox>\\r\\n                        </ion-item>\\r\\n                    </ion-list>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"cs-btn mt20\\\">\\r\\n                <ion-button type=\\\"submit\\\" class=\\\"success large\\\" expand=\\\"full\\\">SUBMIT</ion-button>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n</form>\\r\\n</div>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddrequestPage } from './addrequest.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddrequestPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddrequestPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddrequestPageRoutingModule } from './addrequest-routing.module';\r\n\r\nimport { AddrequestPage } from './addrequest.page';\r\nimport { IonicSelectableModule } from 'ionic-selectable';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicSelectableModule,\r\n    IonicModule,\r\n    AddrequestPageRoutingModule\r\n  ],\r\n  declarations: [AddrequestPage]\r\n})\r\nexport class AddrequestPageModule {}\r\n","export default \".alert-wrapper.sc-ion-alert-md {\\n  min-width: 98% !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXJfYXBwL3NlcnZpY2VfcmVxdWVzdC9hZGRyZXF1ZXN0L0U6XFx0cmljb2xpdGUtYXBwL3NyY1xcYXBwXFxjdXN0b21lcl9hcHBcXHNlcnZpY2VfcmVxdWVzdFxcYWRkcmVxdWVzdFxcYWRkcmVxdWVzdC5wYWdlLnNjc3MiLCJzcmMvYXBwL2N1c3RvbWVyX2FwcC9zZXJ2aWNlX3JlcXVlc3QvYWRkcmVxdWVzdC9hZGRyZXF1ZXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9jdXN0b21lcl9hcHAvc2VydmljZV9yZXF1ZXN0L2FkZHJlcXVlc3QvYWRkcmVxdWVzdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnQtd3JhcHBlci5zYy1pb24tYWxlcnQtbWQge1xyXG4gICAgbWluLXdpZHRoOiA5OCUgIWltcG9ydGFudDtcclxufSIsIi5hbGVydC13cmFwcGVyLnNjLWlvbi1hbGVydC1tZCB7XG4gIG1pbi13aWR0aDogOTglICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoadingController, AlertController, ModalController } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\n\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-addrequest',\r\n  templateUrl: './addrequest.page.html',\r\n  styleUrls: ['./addrequest.page.scss'],\r\n})\r\nexport class AddrequestPage implements OnInit {\r\n\r\n\r\n  data: any = {};\r\n  submitted: any = false;\r\n\r\n  contactList: any = [];\r\n  projectList: any = [];\r\n  fgList: any = [];\r\n  natureList : any = [];\r\n  priorityList : any = [];\r\n\r\n  transactionTypeList : any = [];\r\n\r\n  complaintTypeList: any = [];\r\n  productData: any = [];\r\n\r\n  registerForm1: FormGroup;\r\n  minDate: any  = '';\r\n\r\n  defaultActiveTitle = 'service_request';\r\n    commissioning: any;\r\n\r\n  constructor(public popoverController: PopoverController, \r\n              private route: Router,\r\n              public routeParams: ActivatedRoute,\r\n              private formBuilder: FormBuilder,\r\n              public alertCtrl: AlertController,\r\n              public modalController: ModalController,\r\n              public dbService: DbServiceService) {\r\n\r\n            this.data = {};\r\n            this.registerForm1 = this.formBuilder.group({\r\n\r\n                requestType: ['', [Validators.required]],\r\n                complaintTitle: ['', [Validators.required]],\r\n                description: ['', [Validators.required]],\r\n                project: ['', [Validators.required]],\r\n                fgNo: [''],\r\n                natureProblem: [''],\r\n                visitDate: ['', [Validators.required]],\r\n                visitTime: ['', [Validators.required]],\r\n                contactName: [''],\r\n                transaction_type:[''],\r\n            });\r\n\r\n    \r\n            this.data = {\r\n                requestType: '',\r\n                complaintTitle: '',\r\n                description: '',\r\n                project: '',\r\n                fgNo: '',\r\n                natureProblem: '',\r\n                visitDate: '',\r\n                visitTime: '',\r\n                contactName: '',\r\n                transaction_type : '',\r\n            };\r\n\r\n            this.minDate = moment().format('YYYY-MM-DD');\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n      this.getComplaintTitleListHandler();\r\n      this.onGetMyProjectListHandler();\r\n      this.getNatureProbelmListHandler();\r\n      this.getPriorityListHandler();\r\n      this.getTransactionTypeListHandler();\r\n\r\n      // this.defaultActiveTitle = 'service_request';\r\n  }\r\n\r\n  async onRequestTypeChangeHandler(){\r\n\r\n\r\n        if (this.data.requestType == 'commissioning') {\r\n\r\n             this.data.transaction_type = {\r\n                transaction_type: 'commissioning'\r\n             };\r\n\r\n        } else {\r\n            this.data.transaction_type = '';\r\n        }\r\n\r\n        console.log(this.data.transaction_type);\r\n\r\n        this.data.complaintTitle = '';\r\n  }\r\n\r\n\r\n  async onAddProductToListHandler() {    \r\n\r\n       if (!this.data.fgNo || !this.data.fgNo[`fg_no`]) {\r\n\r\n            if(!this.data.fgNo || !this.data.fgNo[`fg_no`]) {\r\n\r\n                this.dbService.onShowAlertMessage('Error', 'FG No Reuired');\r\n            }\r\n\r\n            console.log(this.data.fgNo);\r\n\r\n            return;\r\n\r\n       } else {\r\n\r\n          console.log(this.fgList);\r\n          console.log(this.data.fgNo);\r\n\r\n           const isFGExist = this.productData.findIndex(row => row.fgNo == this.data.fgNo.fg_no);\r\n\r\n           if (isFGExist === -1) {\r\n\r\n              this.productData.push({\r\n\r\n                  fgNo: this.data.fgNo[`fg_no`],\r\n              });\r\n\r\n           } else {\r\n\r\n               this.productData[isFGExist].fgNo = this.data.fgNo[`fg_no`];\r\n\r\n           }\r\n\r\n           console.log(this.productData);\r\n\r\n\r\n           this.data.fgNo = {};\r\n\r\n           this.dbService.presentToast('Product Update To List!');\r\n       }\r\n  }\r\n\r\n\r\n  async onSaveRequestHandler() {\r\n     \r\n      this.submitted = true;\r\n\r\n      if (this.productData.length == 0) {\r\n\r\n          this.dbService.onShowAlertMessage('Error', 'No Product Information Added!');\r\n          return;\r\n      }\r\n\r\n      if (this.data.requestType == 'service_request' && (!this.data.transaction_type || !this.data.transaction_type[`transaction_type`])) {\r\n\r\n          this.dbService.onShowAlertMessage('Error', 'Service Type Required!');\r\n          return;\r\n      }\r\n\r\n      let isContactSelected = false;\r\n\r\n      for (let index = 0; index < this.contactList.length; index++) {\r\n       \r\n            if(this.contactList[index].checked) {\r\n\r\n                 isContactSelected = true;\r\n            }\r\n      }\r\n\r\n      if (!isContactSelected) {\r\n\r\n          this.dbService.onShowAlertMessage('Error', 'No Contact Information Selected!');\r\n          return;\r\n      }\r\n\r\n      if (this.registerForm1.invalid) {\r\n\r\n          this.registerForm1.get('requestType').markAsTouched();\r\n          this.registerForm1.get('complaintTitle').markAsTouched();\r\n          this.registerForm1.get('description').markAsTouched();\r\n          this.registerForm1.get('project').markAsTouched();\r\n          this.registerForm1.get('fgNo').markAsTouched();\r\n          this.registerForm1.get('natureProblem').markAsTouched();\r\n          this.registerForm1.get('visitDate').markAsTouched();\r\n          this.registerForm1.get('visitTime').markAsTouched();\r\n          this.registerForm1.get('contactName').markAsTouched();\r\n          this.registerForm1.get('transaction_type').markAsTouched();\r\n\r\n\r\n      } else {\r\n\r\n          const alert = await this.alertCtrl.create({\r\n            header: 'Confirm',\r\n            message: 'Are You Sure, You Want To Save Request ?',\r\n            buttons: [\r\n                  {\r\n                    text: 'No',\r\n                    role: 'cancel',\r\n                    handler: () => {\r\n                      console.log('No clicked');\r\n                    }\r\n                  },\r\n                  {\r\n                    text: 'Yes',\r\n                    handler: () => {\r\n\r\n                          console.log('Yes clicked');\r\n\r\n                          const inputData = JSON.parse(JSON.stringify(this.data));\r\n                          inputData[`projectId`] = this.data.project[`id`];\r\n                          inputData[`projectName`] = this.data.project[`project_name`];\r\n\r\n                          inputData[`fgData`] = this.productData;\r\n                          inputData[`contactList`] = this.contactList;\r\n\r\n                          inputData[`visitDate`] = moment(this.data.visitDate).format('YYYY-MM-DD');\r\n                          inputData[`visitTime`] = moment(this.data.visitTime).format('hh:mm');\r\n\r\n                          inputData[`visitDateTime`] = inputData[`visitDate`] + ' ' + inputData[`visitTime`];\r\n\r\n                          inputData[`transactionType`] = this.data.transaction_type;\r\n\r\n                          this.dbService.presentLoader();\r\n\r\n                          console.log(inputData);\r\n\r\n                          this.dbService.onPostRequestHandler(inputData, 'customer/onSubmitTaskData').subscribe((result) => {\r\n\r\n                                console.log(result);\r\n                                this.dbService.dismissLoader();\r\n\r\n                                const routeURL = '/customer/request';\r\n                                this.route.navigate([routeURL]);\r\n\r\n                                this.dbService.presentToast('Request Saved Successfully!');\r\n                          });\r\n                    }\r\n                  }\r\n              ]\r\n          });\r\n\r\n          await alert.present();\r\n      }\r\n  }\r\n\r\n\r\n  async getComplaintTitleListHandler() {\r\n          \r\n      const inputData = {};\r\n\r\n      this.dbService.onPostRequestHandler(inputData, 'task/getComplaintTypeList').subscribe((result) => {\r\n            console.log(result);\r\n            this.complaintTypeList = result[`complaintTypeList`];\r\n      });\r\n       \r\n  }\r\n\r\n  async getNatureProbelmListHandler(){\r\n    \r\n    const inputData = {};\r\n\r\n    this.dbService.onPostRequestHandler(inputData, 'task/getNatureProbelmList').subscribe((result) => {\r\n        console.log(result);\r\n        this.natureList = result[`natureProbelmList`];\r\n        console.log(this.natureList);\r\n        \r\n    });\r\n\r\n  }\r\n  async getTransactionTypeListHandler(){\r\n\r\n    const inputData = {};\r\n\r\n    this.dbService.onPostRequestHandler(inputData, 'task/getTransactionTypeList').subscribe((result) => {\r\n        console.log(result);\r\n        this.transactionTypeList = result[`transactionTypeList`];\r\n\r\n\r\n        console.log(this.transactionTypeList);\r\n        \r\n    });\r\n\r\n\r\n  }\r\n\r\n  async getPriorityListHandler(){\r\n\r\n    const inputData = {};\r\n\r\n    this.dbService.onPostRequestHandler(inputData, 'task/getPriorityList').subscribe((result) => {\r\n        console.log(result);\r\n        this.priorityList = result[`priorityList`];\r\n        console.log(this.priorityList);\r\n    });\r\n  }\r\n\r\n\r\n  async onGetMyProjectListHandler() {\r\n\r\n      const inputData = {};\r\n\r\n      this.dbService.onPostRequestHandler(inputData, 'customer/getProjectList').subscribe((result) => {\r\n            console.log(result);\r\n            this.projectList = result[`projectContactList`];\r\n      });\r\n  }\r\n\r\n\r\n  async onGetProjectFGListHandler() {\r\n\r\n    this.fgList = [];\r\n    this.data.fgNo = {};\r\n    this.productData = [];\r\n\r\n    const inputData = {};\r\n    inputData[`projectId`] = this.data.project[`id`];\r\n\r\n    this.dbService.presentLoader();\r\n    this.dbService.onPostRequestHandler(inputData, 'customer/getProjectFGList').subscribe((result) => {\r\n          console.log(result);\r\n          this.fgList = result[`fgList`];\r\n\r\n          this.dbService.dismissLoader();\r\n\r\n          this.onGetProjectContactHandler();\r\n    });\r\n  }\r\n\r\n\r\n\r\n  async onGetProjectContactHandler() {\r\n\r\n    const inputData = {\r\n         projectId: this.data.project[`id`]\r\n    };\r\n\r\n    this.dbService.onPostRequestHandler(inputData, 'task/onGetTaskProjectAllContactList').subscribe((result) => {\r\n\r\n          console.log(result);\r\n          this.contactList = result[`contactList`];\r\n\r\n    });\r\n  }\r\n\r\n  async onDeleteProductHandler(index) {\r\n\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'Confirm',\r\n      message: 'Are You Sure, You Want To Delete Product ?',\r\n      buttons: [\r\n            {\r\n              text: 'No',\r\n              role: 'cancel',\r\n              handler: () => {\r\n                console.log('No clicked');\r\n              }\r\n            },\r\n            {\r\n              text: 'Yes',\r\n              handler: () => {\r\n\r\n                    console.log('Yes clicked');\r\n\r\n                    this.productData.splice(index, 1);\r\n                    this.dbService.presentToast('Product Deleted Successfully!');\r\n              }\r\n            }\r\n        ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n\r\n      this.data = {};\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  get f1() { return this.registerForm1.controls; }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"service_request-addrequest-addrequest-module-es5.js"}