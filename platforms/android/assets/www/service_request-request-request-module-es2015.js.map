{"version":3,"sources":["./src/app/customer_app/service_request/request/request.page.html","./src/app/customer_app/service_request/request/request-routing.module.ts","./src/app/customer_app/service_request/request/request.module.ts","./src/app/customer_app/service_request/request/request.page.scss","./src/app/customer_app/service_request/request/request.page.ts"],"names":[],"mappings":"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","file":"service_request-request-request-module-es2015.js","sourcesContent":["export default \"<ion-content>\\n    \\n    <ion-refresher slot=\\\"fixed\\\" \\n    (ionRefresh)=\\\"ionRefresh($event)\\\">\\n    <ion-refresher-content\\n    pullingIcon=\\\"arrow-dropdown\\\"\\n    pullingText=\\\"Pull to refresh\\\"\\n    refreshingSpinner=\\\"circles\\\"\\n    refreshingText=\\\"Refreshing...\\\">\\n</ion-refresher-content>\\n</ion-refresher>\\n\\n<div class=\\\"cs-main-container\\\">\\n    <div class=\\\"custome-head\\\">\\n        <div class=\\\"cs-ion-header\\\">\\n            <div class=\\\"cs-left\\\">\\n                <ion-title class=\\\"pl0\\\">Service Request</ion-title>\\n                \\n            </div>\\n            \\n            <div class=\\\"cs-right\\\">\\n                <ion-button (click)=\\\"onSearchClickHandler()\\\"><ion-icon name=\\\"search\\\"></ion-icon></ion-button>\\n                <ion-button (click)=\\\"presentModal()\\\" id=\\\"bt\\\"><ion-icon name=\\\"funnel\\\"></ion-icon></ion-button>\\n            </div>\\n            \\n            <div [ngClass]=\\\"isSearchOptionActive ? 'active' : ''\\\" class=\\\"search-filetr\\\">\\n                \\n                <ion-searchbar [(ngModel)]=\\\"data.inputSearch\\\" (ngModelChange)=\\\"onUpdateCurrentPageHandler(); onGetComplaintListHandler(false, '')\\\" id=\\\"inputSearch\\\"></ion-searchbar>\\n                \\n                <a (click) = \\\"data.inputSearch = ''; isSearchOptionActive = false; onUpdateCurrentPageHandler(); onGetComplaintListHandler(false, '')\\\"  class=\\\"cancel\\\">Cancel</a>\\n                \\n            </div>\\n            \\n        </div>\\n        <div class=\\\"cs-ion-hf\\\"></div>\\n    </div>\\n    \\n    \\n    \\n    <div class=\\\"cs-ion-content pt0\\\" padding>\\n        <div class=\\\"complaints list\\\">\\n            \\n            <div *ngFor=\\\"let row of complaintList\\\" class=\\\"figure\\\">\\n                \\n                <div (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"top\\\">\\n                    <div class=\\\"cs-left\\\">\\n                        <h1>#COM - {{row.task_no}} <ion-text>({{row.days}} Days)</ion-text></h1>\\n                    </div>\\n                    <div class=\\\"cs-right\\\">\\n                        <ion-text>{{row.dateCreated}}  |  {{row.timeCreated}}</ion-text>\\n                    </div>\\n                </div>\\n                \\n                <div *ngIf=\\\"row.assignUserName\\\" class=\\\"cnt-info\\\">\\n                    \\n                    <div (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"cs-left\\\">\\n                        <div class=\\\"f-alpha\\\">{{row.assignUserName[0]}}</div>\\n                        <div class=\\\"names\\\">\\n                            <ion-text>Enginer info</ion-text>\\n                            <h1>{{row.assignUserName}}</h1>\\n                        </div>\\n                    </div>\\n                    \\n                    <div class=\\\"cs-right\\\">\\n                        <a href=\\\"tel: {{row.assignUserMobile}}\\\" class=\\\"call\\\"><i class=\\\"material-icons\\\">call</i></a>\\n                    </div>\\n                    \\n                </div>\\n                \\n                <div class=\\\"one-one-one\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\n                    <div class=\\\"cs-box\\\">\\n                        <div>\\n                            <ion-text>Project </ion-text>\\n                            <ion-text>{{row.project_name}}</ion-text>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\\"row.task_type == 'commissioning'\\\" class=\\\"one-one-one\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\n                        <div class=\\\"cs-box\\\">\\n                            <div>\\n                                <ion-text>Service Type </ion-text>\\n                                <ion-text>Free Service</ion-text>\\n                            </div>\\n                        </div>\\n                </div>\\n\\n                <div class=\\\"one-two-one three\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\n\\n                    <div class=\\\"cs-box close\\\" style=\\\"background: #FFCC00;\\\">\\n                            <div>\\n                                <ion-text>Priority</ion-text>\\n                                <ion-text>{{row.priority ? row.priority : 'NA'}}</ion-text>\\n                            </div>\\n                    </div>\\n\\n                </div>\\n                \\n                <div *ngFor=\\\"let fgRow of row.fgData\\\" class=\\\"one-two-one three\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\n\\n                    <div class=\\\"cs-box\\\">\\n                        <div>\\n                            <ion-text>FG No.</ion-text>\\n                            <ion-text>{{fgRow.fg_no}}</ion-text>\\n                        </div>\\n                    </div>\\n\\n\\n                    <div *ngIf=\\\"row.task_type != 'commissioning'\\\" class=\\\"cs-box close\\\" style=\\\"background: #FFA200;\\\">\\n                        <div>\\n                            <ion-text>Service Type</ion-text>\\n                            <ion-text>{{(row.transaction_type == 'FOC' || row.transaction_type == 'Sale/Warranty' || row.transaction_type == 'Commissioning') ? 'Free Service' : 'Paid Service'}}</ion-text>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                \\n                <div class=\\\"one-one-one\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\n                    <div class=\\\"cs-box\\\">\\n                        <div>\\n                            <ion-text>Complaint Title </ion-text>\\n                            <ion-text>{{row.compaint_title}}</ion-text>\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"one-two-one two\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\n                    <div class=\\\"cs-box\\\">\\n                        <div>\\n                            <ion-text>Eng. Work Status</ion-text>\\n                            <ion-text>{{row.workStatus ? row.workStatus : '--'}}</ion-text>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"cs-box\\\" [ngClass] = \\\"(row.status) ? row.status.toLowerCase() : ''\\\">\\n                        <div>\\n                            <ion-text>Complaint Status</ion-text>\\n                            <ion-text>{{row.status}}</ion-text>\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n            </div>\\n        </div>\\n        \\n        \\n        <div *ngIf=\\\"!isRequestInProcess && complaintList.length == 0\\\" class=\\\"no-data\\\">\\n            <img src=\\\"assets/icon/no_found.svg\\\">\\n            <p>Data Not Found!</p>\\n        </div>\\n        \\n    </div>\\n</div>\\n\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" size=\\\"small\\\">\\n    <ion-fab-button (click)=\\\"AddServiceRequest();\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n</ion-fab>\\n\\n\\n\\n<ion-infinite-scroll threshold=\\\"100px\\\" *ngIf=\\\"doCheckForMoreData\\\" (ionInfinite)=\\\"onGetComplaintListHandler(false, $event)\\\">\\n    <ion-infinite-scroll-content\\n    loadingSpinner=\\\"bubbles\\\"\\n    loadingText=\\\"Loading more data...\\\">\\n</ion-infinite-scroll-content>\\n</ion-infinite-scroll>\\n\\n</ion-content>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RequestPage } from './request.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RequestPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RequestPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RequestPageRoutingModule } from './request-routing.module';\n\nimport { RequestPage } from './request.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RequestPageRoutingModule\n  ],\n  declarations: [RequestPage]\n})\nexport class RequestPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9zZXJ2aWNlX3JlcXVlc3QvcmVxdWVzdC9yZXF1ZXN0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoadingController, AlertController, ModalController, IonContent } from '@ionic/angular';\nimport { DbServiceService } from 'src/app/db-service.service';\nimport { ComplaintfiltermodalPage } from 'src/app/complaintfiltermodal/complaintfiltermodal.page';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-request',\n  templateUrl: './request.page.html',\n  styleUrls: ['./request.page.scss'],\n})\nexport class RequestPage implements OnInit {\n\n  @ViewChild(IonContent, {static: false}) content: IonContent;\n  \n  public show: any = false;\n  public buttonName: any = 'Show';\n  \n  routeType: any = '';\n  routeTitleForView: any = '';\n  complaintList: any = [];\n  \n  data: any = {};\n  searchData: any = {};\n  \n  isSearchOptionActive: any = false;\n  \n  doCheckForMoreData: any = true;\n  isRequestInProcess: any = true;\n\n  currentPage: any = 1;\n  pageSize = 2;\n  \n  constructor(private route: Router,\n              private formBuilder: FormBuilder,\n              public alertCtrl: AlertController,\n              public modalController: ModalController,\n              public dbService: DbServiceService) {\n\n    }\n\n    ngOnInit() {\n\n      this.onGetComplaintListHandler(true, '');\n    }\n\n    toggle() {\n\n      this.show = !this.show;\n      if (this.show)   {\n\n        this.buttonName = 'Hide';\n\n      } else {\n\n        this.buttonName = 'Show';\n      }\n    }\n\n    onGetComplaintListHandler(showLoading, infiniteScroll: any) {\n\n      console.log('hello');\n      \n      console.log(this.route.url);\n      \n      const inputData = {\n        start: this.currentPage,\n        pageLimit: this.pageSize\n      };\n      \n      const loginData = JSON.parse(localStorage.getItem('loginData'));\n      \n      inputData[`searchData`] = this.searchData;\n      inputData[`inputSearch`] = this.data.inputSearch;\n      \n      inputData[`customerId`] = loginData[`loginId`];\n      \n      if (showLoading) {\n        this.dbService.presentLoader();\n      }\n      \n      this.dbService.onPostRequestHandler(inputData, 'task/getTaskList').subscribe((result) => {\n           \n            console.log(result);\n        \n            if (showLoading) {\n                setTimeout(() => {\n                  this.dbService.dismissLoader();\n                }, 2000);\n            }\n            \n            let resultData = result[`taskList`];\n            \n            if (!resultData || resultData == null || resultData.length == 0) {\n                resultData = [];\n                this.doCheckForMoreData = false;\n            }\n            \n            if (this.currentPage == 1) {\n              this.complaintList = resultData;\n              console.log(this.complaintList);\n              \n            } else {\n              \n                for (let index = 0; index < resultData.length; index++) {\n                  \n                  const isIndex = this.complaintList.findIndex(row => row.id == resultData[index].id);\n                  if (isIndex === -1) {\n                    this.complaintList.push(resultData[index]);\n                  }\n                  \n                }\n\n              console.log(this.complaintList);\n\n\n            }\n            \n            this.currentPage += 1;\n            \n            if (infiniteScroll) {\n               infiniteScroll.target.complete();\n            }\n            \n            setTimeout(() => {\n               this.isRequestInProcess = false;\n            }, 1000);\n      });\n    }\n\n\n    ionViewWillEnter() {\n\n        this.onUpdateCurrentPageHandler();\n        this.onGetComplaintListHandler(false, '');\n    }\n\n\n    onSearchClickHandler() {\n\n        this.isSearchOptionActive = true;\n\n        setTimeout(() => {\n\n          $('#inputSearch').focus();\n            \n        }, 2000);\n    }\n\n\n    ionRefresh(event) {\n\n        console.log('Pull Event Triggered!');\n        setTimeout(() => {\n          console.log('Async operation has ended');\n\n          this.data.inputSearch = '';\n          this.searchData = {};\n\n          this.onUpdateCurrentPageHandler();\n          this.onGetComplaintListHandler(true, '');\n          event.target.complete();\n\n        }, 2000);\n    }\n\n\n    async onUpdateCurrentPageHandler() {\n\n          setTimeout(() => {\n\n              this.doCheckForMoreData = true;\n\n          }, 1000);\n\n          this.currentPage = 1;\n          this.onScrollToTopHandler();\n    }\n\n    async onScrollToTopHandler() {\n        this.content.scrollToTop();\n    }\n\n    \n    \n    async presentModal() {\n      \n      const modal = await this.modalController.create({\n        component: ComplaintfiltermodalPage,\n        componentProps: {\n            searchData: this.searchData\n        }\n      });\n      \n      modal.onDidDismiss()\n      .then((data) => {\n        console.log(data);\n        if (data && data[`data`] && data[`data`][`data`]) {\n\n                 console.log(data[`data`]);\n                 this.searchData = data[`data`][`data`];\n\n                 this.onUpdateCurrentPageHandler();\n                 this.onGetComplaintListHandler(true, '');\n        }\n      });\n      return await modal.present();\n    }\n    \n    GoComplaintDetail(taskId) {\n      this.route.navigateByUrl('/customer/request/detail/' + taskId + '');\n    }\n    \n    AddServiceRequest() {\n      this.route.navigateByUrl('/customer/request/addrequest');\n    }\n    \n    GiveYourFeedBack(taskId, userId) {\n      this.route.navigateByUrl('/customer/request/giveyourfeedback/' + taskId + '/' + userId + '');\n    }\n  }\n  "],"sourceRoot":"webpack:///"}