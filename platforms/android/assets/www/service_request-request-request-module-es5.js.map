{"version":3,"sources":["./src/app/customer_app/service_request/request/request.page.html","./src/app/customer_app/service_request/request/request-routing.module.ts","./src/app/customer_app/service_request/request/request.module.ts","./src/app/customer_app/service_request/request/request.page.scss","./src/app/customer_app/service_request/request/request.page.ts"],"names":[],"mappings":"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","file":"service_request-request-request-module-es5.js","sourcesContent":["module.exports = \"<ion-content>\\r\\n    \\r\\n    <ion-refresher slot=\\\"fixed\\\" \\r\\n    (ionRefresh)=\\\"ionRefresh($event)\\\">\\r\\n    <ion-refresher-content\\r\\n    pullingIcon=\\\"arrow-dropdown\\\"\\r\\n    pullingText=\\\"Pull to refresh\\\"\\r\\n    refreshingSpinner=\\\"circles\\\"\\r\\n    refreshingText=\\\"Refreshing...\\\">\\r\\n</ion-refresher-content>\\r\\n</ion-refresher>\\r\\n\\r\\n<div class=\\\"cs-main-container\\\">\\r\\n    <div class=\\\"custome-head\\\">\\r\\n        <div class=\\\"cs-ion-header\\\">\\r\\n            <div class=\\\"cs-left\\\">\\r\\n                <ion-title class=\\\"pl0\\\">Service Request</ion-title>\\r\\n                \\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"cs-right\\\">\\r\\n                <ion-button (click)=\\\"onSearchClickHandler()\\\"><ion-icon name=\\\"search\\\"></ion-icon></ion-button>\\r\\n                <ion-button (click)=\\\"presentModal()\\\" id=\\\"bt\\\"><ion-icon name=\\\"funnel\\\"></ion-icon></ion-button>\\r\\n            </div>\\r\\n            \\r\\n            <div [ngClass]=\\\"isSearchOptionActive ? 'active' : ''\\\" class=\\\"search-filetr\\\">\\r\\n                \\r\\n                <ion-searchbar [(ngModel)]=\\\"data.inputSearch\\\" (ngModelChange)=\\\"onUpdateCurrentPageHandler(); onGetComplaintListHandler(false, '')\\\" id=\\\"inputSearch\\\"></ion-searchbar>\\r\\n                \\r\\n                <a (click) = \\\"data.inputSearch = ''; isSearchOptionActive = false; onUpdateCurrentPageHandler(); onGetComplaintListHandler(false, '')\\\"  class=\\\"cancel\\\">Cancel</a>\\r\\n                \\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"cs-ion-hf\\\"></div>\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n    \\r\\n    <div class=\\\"cs-ion-content pt0\\\" padding>\\r\\n        <div class=\\\"complaints list\\\">\\r\\n            \\r\\n            <div *ngFor=\\\"let row of complaintList\\\" class=\\\"figure\\\">\\r\\n                \\r\\n                <div (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"top\\\">\\r\\n                    <div class=\\\"cs-left\\\">\\r\\n                        <h1>#COM - {{row.task_no}} <ion-text>({{row.days}} Days)</ion-text></h1>\\r\\n                    </div>\\r\\n                    <div class=\\\"cs-right\\\">\\r\\n                        <ion-text>{{row.dateCreated}}  |  {{row.timeCreated}}</ion-text>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"cnt-info\\\">\\r\\n                    \\r\\n                    <div (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"cs-left\\\">\\r\\n                        <div class=\\\"f-alpha\\\">{{row.assignUserName[0]}}</div>\\r\\n                        <div class=\\\"names\\\">\\r\\n                            <h1>{{row.assignUserName}}</h1>\\r\\n                            <ion-text>{{row.assignUserMobile}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div class=\\\"cs-right\\\">\\r\\n                        <a href=\\\"tel: {{row.assignUserMobile}}\\\" class=\\\"call\\\"><i class=\\\"material-icons\\\">call</i></a>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"one-one-one\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Project </ion-text>\\r\\n                            <ion-text>{{row.project_name}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div *ngFor=\\\"let fgRow of row.fgData\\\" class=\\\"one-two-one three\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>FG No.</ion-text>\\r\\n                            <ion-text>{{fgRow.fg_no}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"cs-box\\\" style=\\\"background: #FFCC00;\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Priority</ion-text>\\r\\n                            <ion-text>{{row.priority}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"cs-box close\\\" style=\\\"background: #FFA200;\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Service Type</ion-text>\\r\\n                            <ion-text>{{fgRow.serviceType}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"one-one-one\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Complaint Title </ion-text>\\r\\n                            <ion-text>{{row.compaint_title}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"one-two-one two\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Eng. Work Status</ion-text>\\r\\n                            <ion-text>{{row.workStatus ? row.workStatus : '--'}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"cs-box\\\" [ngClass] = \\\"(row.status) ? row.status.toLowerCase() : ''\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Complaint Status</ion-text>\\r\\n                            <ion-text>{{row.status}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <!-- <div *ngIf=\\\"row.status=='Close' && row.feedbackCount == 0\\\" class=\\\"lf-btns feedbc mt10\\\">\\r\\n                    <div class=\\\"cs-left\\\">\\r\\n                        <ion-button color=\\\"primary\\\" (click)=\\\"GiveYourFeedBack(row.id, row.assign_to);\\\">Give your feedback</ion-button>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div *ngIf=\\\"!isRequestInProcess && complaintList.length == 0\\\" class=\\\"no-data\\\">\\r\\n            <img src=\\\"assets/icon/no_found.svg\\\">\\r\\n            <p>Data Not Found!</p>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" size=\\\"small\\\">\\r\\n    <ion-fab-button (click)=\\\"AddServiceRequest();\\\">\\r\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n</ion-fab>\\r\\n\\r\\n\\r\\n\\r\\n<ion-infinite-scroll threshold=\\\"100px\\\" *ngIf=\\\"doCheckForMoreData\\\" (ionInfinite)=\\\"onGetComplaintListHandler(false, $event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n    loadingSpinner=\\\"bubbles\\\"\\r\\n    loadingText=\\\"Loading more data...\\\">\\r\\n</ion-infinite-scroll-content>\\r\\n</ion-infinite-scroll>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RequestPage } from './request.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RequestPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RequestPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RequestPageRoutingModule } from './request-routing.module';\r\n\r\nimport { RequestPage } from './request.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RequestPageRoutingModule\r\n  ],\r\n  declarations: [RequestPage]\r\n})\r\nexport class RequestPageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9zZXJ2aWNlX3JlcXVlc3QvcmVxdWVzdC9yZXF1ZXN0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoadingController, AlertController, ModalController, IonContent } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\nimport { ComplaintfiltermodalPage } from 'src/app/complaintfiltermodal/complaintfiltermodal.page';\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n  selector: 'app-request',\r\n  templateUrl: './request.page.html',\r\n  styleUrls: ['./request.page.scss'],\r\n})\r\nexport class RequestPage implements OnInit {\r\n\r\n  @ViewChild(IonContent, {static: false}) content: IonContent;\r\n  \r\n  public show: any = false;\r\n  public buttonName: any = 'Show';\r\n  \r\n  routeType: any = '';\r\n  routeTitleForView: any = '';\r\n  complaintList: any = [];\r\n  \r\n  data: any = {};\r\n  searchData: any = {};\r\n  \r\n  isSearchOptionActive: any = false;\r\n  \r\n  doCheckForMoreData: any = true;\r\n  isRequestInProcess: any = true;\r\n\r\n  currentPage: any = 1;\r\n  pageSize = 2;\r\n  \r\n  constructor(private route: Router,\r\n              private formBuilder: FormBuilder,\r\n              public alertCtrl: AlertController,\r\n              public modalController: ModalController,\r\n              public dbService: DbServiceService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n      this.onGetComplaintListHandler(true, '');\r\n    }\r\n\r\n    toggle() {\r\n\r\n      this.show = !this.show;\r\n      if (this.show)   {\r\n\r\n        this.buttonName = 'Hide';\r\n\r\n      } else {\r\n\r\n        this.buttonName = 'Show';\r\n      }\r\n    }\r\n\r\n    onGetComplaintListHandler(showLoading, infiniteScroll: any) {\r\n\r\n      console.log('hello');\r\n      \r\n      console.log(this.route.url);\r\n      \r\n      const inputData = {\r\n        start: this.currentPage,\r\n        pageLimit: this.pageSize\r\n      };\r\n      \r\n      const loginData = JSON.parse(localStorage.getItem('loginData'));\r\n      \r\n      inputData[`searchData`] = this.searchData;\r\n      inputData[`inputSearch`] = this.data.inputSearch;\r\n      \r\n      inputData[`customerId`] = loginData[`loginId`];\r\n      \r\n      if (showLoading) {\r\n        this.dbService.presentLoader();\r\n      }\r\n      \r\n      this.dbService.onPostRequestHandler(inputData, 'task/getTaskList').subscribe((result) => {\r\n           \r\n            console.log(result);\r\n        \r\n            if (showLoading) {\r\n                setTimeout(() => {\r\n                  this.dbService.dismissLoader();\r\n                }, 2000);\r\n            }\r\n            \r\n            let resultData = result[`taskList`];\r\n            \r\n            if (!resultData || resultData == null || resultData.length == 0) {\r\n                resultData = [];\r\n                this.doCheckForMoreData = false;\r\n            }\r\n            \r\n            if (this.currentPage == 1) {\r\n              this.complaintList = resultData;\r\n              console.log(this.complaintList);\r\n              \r\n            } else {\r\n              \r\n                for (let index = 0; index < resultData.length; index++) {\r\n                  \r\n                  const isIndex = this.complaintList.findIndex(row => row.id == resultData[index].id);\r\n                  if (isIndex === -1) {\r\n                    this.complaintList.push(resultData[index]);\r\n                  }\r\n                  \r\n                }\r\n\r\n              console.log(this.complaintList);\r\n\r\n\r\n            }\r\n            \r\n            this.currentPage += 1;\r\n            \r\n            if (infiniteScroll) {\r\n               infiniteScroll.target.complete();\r\n            }\r\n            \r\n            setTimeout(() => {\r\n               this.isRequestInProcess = false;\r\n            }, 1000);\r\n      });\r\n    }\r\n\r\n\r\n    ionViewWillEnter() {\r\n\r\n        this.onUpdateCurrentPageHandler();\r\n        this.onGetComplaintListHandler(false, '');\r\n    }\r\n\r\n\r\n    onSearchClickHandler() {\r\n\r\n        this.isSearchOptionActive = true;\r\n\r\n        setTimeout(() => {\r\n\r\n          $('#inputSearch').focus();\r\n            \r\n        }, 2000);\r\n    }\r\n\r\n\r\n    ionRefresh(event) {\r\n\r\n        console.log('Pull Event Triggered!');\r\n        setTimeout(() => {\r\n          console.log('Async operation has ended');\r\n\r\n          this.data.inputSearch = '';\r\n          this.searchData = {};\r\n\r\n          this.onUpdateCurrentPageHandler();\r\n          this.onGetComplaintListHandler(true, '');\r\n          event.target.complete();\r\n\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    async onUpdateCurrentPageHandler() {\r\n\r\n          setTimeout(() => {\r\n\r\n              this.doCheckForMoreData = true;\r\n\r\n          }, 1000);\r\n\r\n          this.currentPage = 1;\r\n          this.onScrollToTopHandler();\r\n    }\r\n\r\n    async onScrollToTopHandler() {\r\n        this.content.scrollToTop();\r\n    }\r\n\r\n    \r\n    \r\n    async presentModal() {\r\n      \r\n      const modal = await this.modalController.create({\r\n        component: ComplaintfiltermodalPage,\r\n        componentProps: {\r\n            searchData: this.searchData\r\n        }\r\n      });\r\n      \r\n      modal.onDidDismiss()\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data && data[`data`] && data[`data`][`data`]) {\r\n\r\n                 console.log(data[`data`]);\r\n                 this.searchData = data[`data`][`data`];\r\n\r\n                 this.onUpdateCurrentPageHandler();\r\n                 this.onGetComplaintListHandler(true, '');\r\n        }\r\n      });\r\n      return await modal.present();\r\n    }\r\n    \r\n    GoComplaintDetail(taskId) {\r\n      this.route.navigateByUrl('/customer/request/detail/' + taskId + '');\r\n    }\r\n    \r\n    AddServiceRequest() {\r\n      this.route.navigateByUrl('/customer/request/addrequest');\r\n    }\r\n    \r\n    GiveYourFeedBack(taskId, userId) {\r\n      this.route.navigateByUrl('/customer/request/giveyourfeedback/' + taskId + '/' + userId + '');\r\n    }\r\n  }\r\n  "],"sourceRoot":""}