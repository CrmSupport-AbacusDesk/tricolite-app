{"version":3,"sources":["src/app/customer_app/service_request/request/request.page.html","src/app/customer_app/service_request/request/request-routing.module.ts","src/app/customer_app/service_request/request/request.module.ts","src/app/customer_app/service_request/request/request.page.scss","src/app/customer_app/service_request/request/request.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content>\\r\\n    \\r\\n    <ion-refresher slot=\\\"fixed\\\" \\r\\n    (ionRefresh)=\\\"ionRefresh($event)\\\">\\r\\n    <ion-refresher-content\\r\\n    pullingIcon=\\\"arrow-dropdown\\\"\\r\\n    pullingText=\\\"Pull to refresh\\\"\\r\\n    refreshingSpinner=\\\"circles\\\"\\r\\n    refreshingText=\\\"Refreshing...\\\">\\r\\n</ion-refresher-content>\\r\\n</ion-refresher>\\r\\n\\r\\n<div class=\\\"cs-main-container\\\">\\r\\n    <div class=\\\"custome-head\\\">\\r\\n        <div class=\\\"cs-ion-header\\\">\\r\\n            <div class=\\\"cs-left\\\">\\r\\n                <ion-title class=\\\"pl0\\\">Service Request</ion-title>\\r\\n                \\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"cs-right\\\">\\r\\n                <ion-button (click)=\\\"onSearchClickHandler()\\\"><ion-icon name=\\\"search\\\"></ion-icon></ion-button>\\r\\n                <ion-button (click)=\\\"presentModal()\\\" id=\\\"bt\\\"><ion-icon name=\\\"funnel\\\"></ion-icon></ion-button>\\r\\n            </div>\\r\\n            \\r\\n            <div [ngClass]=\\\"isSearchOptionActive ? 'active' : ''\\\" class=\\\"search-filetr\\\">\\r\\n                \\r\\n                <ion-searchbar [(ngModel)]=\\\"data.inputSearch\\\" (ngModelChange)=\\\"onUpdateCurrentPageHandler(); onGetComplaintListHandler(false, '')\\\" id=\\\"inputSearch\\\"></ion-searchbar>\\r\\n                \\r\\n                <a (click) = \\\"data.inputSearch = ''; isSearchOptionActive = false; onUpdateCurrentPageHandler(); onGetComplaintListHandler(false, '')\\\"  class=\\\"cancel\\\">Cancel</a>\\r\\n                \\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"cs-ion-hf\\\"></div>\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n    \\r\\n    <div class=\\\"cs-ion-content pt0\\\" padding>\\r\\n        <div class=\\\"complaints list\\\">\\r\\n            \\r\\n            <div *ngFor=\\\"let row of complaintList\\\" class=\\\"figure\\\">\\r\\n                \\r\\n                <div (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"top\\\">\\r\\n                    <div class=\\\"cs-left\\\">\\r\\n                        <h1>#SR - {{row.task_no}} <ion-text>({{row.days}} Days)</ion-text></h1>\\r\\n                    </div>\\r\\n                    <div class=\\\"cs-right\\\">\\r\\n                        <ion-text>{{row.dateCreated}}  |  {{row.timeCreated}}</ion-text>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div *ngIf=\\\"row.assignUserName\\\" class=\\\"cnt-info\\\">\\r\\n                    \\r\\n                    <div (click)=\\\"GoComplaintDetail(row.id)\\\" class=\\\"cs-left\\\">\\r\\n                        <div class=\\\"f-alpha\\\">{{row.assignUserName[0]}}</div>\\r\\n                        <div class=\\\"names\\\">\\r\\n                            <ion-text>Enginer info</ion-text>\\r\\n                            <h1>{{row.assignUserName}}</h1>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div class=\\\"cs-right\\\">\\r\\n                        <a href=\\\"tel: {{row.assignUserMobile}}\\\" class=\\\"call\\\"><i class=\\\"material-icons\\\">call</i></a>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"one-one-one\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Project </ion-text>\\r\\n                            <ion-text>{{row.project_name}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div *ngIf=\\\"row.task_type != 'commissioning'\\\"  class=\\\"one-one-one\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Issue Category </ion-text>\\r\\n                            <ion-text>{{row.compaint_title}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"one-two-one three\\\" >\\r\\n                    \\r\\n                    <div class=\\\"cs-box\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Priority</ion-text>\\r\\n                            <ion-text>{{row.priority ? row.priority : 'NA'}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>FG No.</ion-text>\\r\\n                            <ion-text *ngFor=\\\"let fgRow of row.fgData\\\" class=\\\"one-two-one three\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">{{fgRow.fg_no}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"cs-box\\\" *ngIf=\\\"row.task_type != 'commissioning'\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Service Type</ion-text>\\r\\n                            <ion-text>{{(row.transaction_type == 'FOC' || row.transaction_type == 'Sale/Warranty' || row.transaction_type?.toLowerCase() == 'commissioning') ? 'Free Service' : 'Paid Service'}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <!-- <div *ngFor=\\\"let fgRow of row.fgData\\\" class=\\\"one-two-one three\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\r\\n                    \\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>FG No.</ion-text>\\r\\n                            <ion-text>{{fgRow.fg_no}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    \\r\\n                    <div *ngIf=\\\"row.task_type != 'commissioning'\\\" class=\\\"cs-box\\\" >\\r\\n                        <div>\\r\\n                            <ion-text>Service Type</ion-text>\\r\\n                            <ion-text>{{(row.transaction_type == 'FOC' || row.transaction_type == 'Sale/Warranty' || row.transaction_type?.toLowerCase() == 'commissioning') ? 'Free Service' : 'Paid Service'}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n                 -->\\r\\n                <div class=\\\"one-two-one two\\\" (click)=\\\"GoComplaintDetail(row.id)\\\">\\r\\n                    <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Eng. Work Status</ion-text>\\r\\n                            <ion-text>{{row.workStatus ? row.workStatus : '--'}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n             \\r\\n             \\r\\n                    <div [ngClass] = \\\"(row.status) ? row.status.toLowerCase() : ''\\\" class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Request Status</ion-text>\\r\\n                            <ion-text>{{row.status}}</ion-text>\\r\\n                        </div>\\r\\n                    </div>\\r\\n             \\r\\n                    <!-- <div class=\\\"cs-box\\\">\\r\\n                        <div>\\r\\n                            <ion-text>Service Request Status</ion-text>\\r\\n                            <ion-text>{{row.status}}</ion-text>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div *ngIf=\\\"!isRequestInProcess && complaintList.length == 0\\\" class=\\\"no-data\\\">\\r\\n            <img src=\\\"assets/icon/no_found.svg\\\">\\r\\n            <p>Data Not Found!</p>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" size=\\\"small\\\">\\r\\n    <ion-fab-button (click)=\\\"AddServiceRequest();\\\">\\r\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n</ion-fab>\\r\\n\\r\\n\\r\\n\\r\\n<ion-infinite-scroll threshold=\\\"100px\\\" *ngIf=\\\"doCheckForMoreData\\\" (ionInfinite)=\\\"onGetComplaintListHandler(false, $event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n    loadingSpinner=\\\"bubbles\\\"\\r\\n    loadingText=\\\"Loading more data...\\\">\\r\\n</ion-infinite-scroll-content>\\r\\n</ion-infinite-scroll>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RequestPage } from './request.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RequestPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RequestPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RequestPageRoutingModule } from './request-routing.module';\r\n\r\nimport { RequestPage } from './request.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RequestPageRoutingModule\r\n  ],\r\n  declarations: [RequestPage]\r\n})\r\nexport class RequestPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyX2FwcC9zZXJ2aWNlX3JlcXVlc3QvcmVxdWVzdC9yZXF1ZXN0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoadingController, AlertController, ModalController, IonContent } from '@ionic/angular';\r\nimport { DbServiceService } from 'src/app/db-service.service';\r\nimport { ComplaintfiltermodalPage } from 'src/app/complaintfiltermodal/complaintfiltermodal.page';\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n  selector: 'app-request',\r\n  templateUrl: './request.page.html',\r\n  styleUrls: ['./request.page.scss'],\r\n})\r\nexport class RequestPage implements OnInit {\r\n\r\n  @ViewChild(IonContent, {static: false}) content: IonContent;\r\n  \r\n  public show: any = false;\r\n  public buttonName: any = 'Show';\r\n  \r\n  routeType: any = '';\r\n  routeTitleForView: any = '';\r\n  complaintList: any = [];\r\n  \r\n  data: any = {};\r\n  searchData: any = {};\r\n  \r\n  isSearchOptionActive: any = false;\r\n  \r\n  doCheckForMoreData: any = true;\r\n  isRequestInProcess: any = true;\r\n\r\n  currentPage: any = 1;\r\n  pageSize = 5;\r\n  \r\n  constructor(private route: Router,\r\n              private formBuilder: FormBuilder,\r\n              public alertCtrl: AlertController,\r\n              public modalController: ModalController,\r\n              public dbService: DbServiceService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        setTimeout(() => {\r\n          this.onGetComplaintListHandler(true, '');\r\n        }, 1000);\r\n    }\r\n\r\n    toggle() {\r\n\r\n      this.show = !this.show;\r\n      if (this.show)   {\r\n\r\n        this.buttonName = 'Hide';\r\n\r\n      } else {\r\n\r\n        this.buttonName = 'Show';\r\n      }\r\n    }\r\n\r\n    onGetComplaintListHandler(showLoading, infiniteScroll: any) {\r\n\r\n      console.log('hello');\r\n      \r\n      console.log(this.route.url);\r\n      \r\n      const inputData = {\r\n        start: this.currentPage,\r\n        pageLimit: this.pageSize\r\n      };\r\n      \r\n      const loginData = JSON.parse(localStorage.getItem('loginData'));\r\n      \r\n      inputData[`searchData`] = this.searchData;\r\n      inputData[`inputSearch`] = this.data.inputSearch;\r\n      \r\n      inputData[`customerId`] = loginData[`loginId`];\r\n      \r\n      if (showLoading) {\r\n        this.dbService.presentLoader();\r\n      }\r\n      \r\n      this.dbService.onPostRequestHandler(inputData, 'task/getTaskList').subscribe((result) => {\r\n           \r\n            console.log(result);\r\n        \r\n            if (showLoading) {\r\n                setTimeout(() => {\r\n                  this.dbService.dismissLoader();\r\n                }, 2000);\r\n            }\r\n            \r\n            let resultData = result[`taskList`];\r\n            \r\n            if (!resultData || resultData == null || resultData.length == 0) {\r\n                resultData = [];\r\n                this.doCheckForMoreData = false;\r\n            }\r\n            \r\n            if (this.currentPage == 1) {\r\n              this.complaintList = resultData;\r\n              console.log(this.complaintList);\r\n              \r\n            } else {\r\n              \r\n                for (let index = 0; index < resultData.length; index++) {\r\n                  \r\n                  const isIndex = this.complaintList.findIndex(row => row.id == resultData[index].id);\r\n                  if (isIndex === -1) {\r\n                    this.complaintList.push(resultData[index]);\r\n                  }\r\n                  \r\n                }\r\n\r\n              console.log(this.complaintList);\r\n\r\n\r\n            }\r\n            \r\n            this.currentPage += 1;\r\n            \r\n            if (infiniteScroll) {\r\n               infiniteScroll.target.complete();\r\n            }\r\n            \r\n            setTimeout(() => {\r\n               this.isRequestInProcess = false;\r\n            }, 1000);\r\n      });\r\n    }\r\n\r\n\r\n    ionViewWillEnter() {\r\n\r\n        this.onUpdateCurrentPageHandler();\r\n        this.onGetComplaintListHandler(false, '');\r\n    }\r\n\r\n\r\n    onSearchClickHandler() {\r\n\r\n        this.isSearchOptionActive = true;\r\n\r\n        setTimeout(() => {\r\n\r\n          $('#inputSearch').focus();\r\n            \r\n        }, 2000);\r\n    }\r\n\r\n\r\n    ionRefresh(event) {\r\n\r\n        console.log('Pull Event Triggered!');\r\n        setTimeout(() => {\r\n          console.log('Async operation has ended');\r\n\r\n          this.data.inputSearch = '';\r\n          this.searchData = {};\r\n\r\n          this.onUpdateCurrentPageHandler();\r\n          this.onGetComplaintListHandler(true, '');\r\n          event.target.complete();\r\n\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    async onUpdateCurrentPageHandler() {\r\n\r\n          setTimeout(() => {\r\n\r\n              this.doCheckForMoreData = true;\r\n\r\n          }, 1000);\r\n\r\n          this.currentPage = 1;\r\n          this.onScrollToTopHandler();\r\n    }\r\n\r\n    async onScrollToTopHandler() {\r\n        this.content.scrollToTop();\r\n    }\r\n\r\n    \r\n    \r\n    async presentModal() {\r\n      \r\n      const modal = await this.modalController.create({\r\n        component: ComplaintfiltermodalPage,\r\n        componentProps: {\r\n            searchData: this.searchData\r\n        }\r\n      });\r\n      \r\n      modal.onDidDismiss()\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data && data[`data`] && data[`data`][`data`]) {\r\n\r\n                 console.log(data[`data`]);\r\n                 this.searchData = data[`data`][`data`];\r\n\r\n                 this.onUpdateCurrentPageHandler();\r\n                 this.onGetComplaintListHandler(true, '');\r\n        }\r\n      });\r\n      return await modal.present();\r\n    }\r\n    \r\n    GoComplaintDetail(taskId) {\r\n      this.route.navigateByUrl('/customer/request/detail/' + taskId + '');\r\n    }\r\n    \r\n    AddServiceRequest() {\r\n      this.route.navigateByUrl('/customer/request/addrequest');\r\n    }\r\n    \r\n    GiveYourFeedBack(taskId, userId) {\r\n      this.route.navigateByUrl('/customer/request/giveyourfeedback/' + taskId + '/' + userId + '');\r\n    }\r\n  }\r\n  "],"sourceRoot":"webpack:///","file":"service_request-request-request-module-es5.js"}